@media only screen and (min-width: 1224px){div.svelte-1be2arq{background-color:#375637;height:100px;line-height:100px;padding:0}}
@media only screen and (min-width: 1224px){img.svelte-1j052yz{width:100%;height:800px;object-fit:cover;border:2px solid #ddd499;box-sizing:border-box;margin:0}}
@media only screen 
and (min-device-width : 320px) 
and (max-device-width : 480px){}@media only screen 
and (min-device-width : 768px) 
and (max-device-width : 1024px){}@media only screen
and (min-width : 1224px){img.svelte-1mjt2g6{width:200px}}@mediaonly screen and (-webkit-min-device-pixel-ratio : 1.5),
only screen and (min-device-pixel-ratio : 1.5){}
@media only screen and (min-width: 1224px){p.svelte-q31u02{text-align:left;font-size:20px}}
@media only screen 
and (min-device-width : 320px) 
and (max-device-width : 480px){}@media only screen 
and (min-device-width : 768px) 
and (max-device-width : 1024px){}@media only screen
and (min-width : 1224px){}@mediaonly screen and (-webkit-min-device-pixel-ratio : 1.5),
only screen and (min-device-pixel-ratio : 1.5){}
.carousel.svelte-1d83jxb.svelte-1d83jxb{position:relative;width:100%;justify-content:center;align-items:center}button.svelte-1d83jxb.svelte-1d83jxb{position:absolute;width:40px;height:40px;top:50%;z-index:50;margin-top:-20px;border:none;background-color:transparent}button.svelte-1d83jxb.svelte-1d83jxb:focus{outline:none}.left.svelte-1d83jxb.svelte-1d83jxb{left:2vw}.right.svelte-1d83jxb.svelte-1d83jxb{right:2vw}ul.svelte-1d83jxb.svelte-1d83jxb{list-style-type:none;position:absolute;display:flex;justify-content:center;width:100%;margin-top:-30px;padding:0}ul.svelte-1d83jxb li.svelte-1d83jxb{margin:6px;border-radius:100%;background-color:rgba(255,255,255,0.5);height:8px;width:8px}ul.svelte-1d83jxb li.svelte-1d83jxb:hover{background-color:rgba(255,255,255,0.85)}ul.svelte-1d83jxb li.active.svelte-1d83jxb{background-color:rgba(255,255,255,1)}
.headingDecorator.svelte-1fffz01.svelte-1fffz01{width:50%;margin-top:-20px}.demo.svelte-1fffz01.svelte-1fffz01{margin:0 auto;height:350px;width:350px}.control.svelte-1fffz01.svelte-1fffz01 svg{width:100%;height:100%;color:#fff;border:2px solid #fff;border-radius:32px}.slide-content.svelte-1fffz01.svelte-1fffz01{border:1px solid #eee;display:flex;flex-direction:column;height:350px;background-color:beige}.slide-content.svelte-1fffz01 header.svelte-1fffz01{flex:1;background-size:contain;background-repeat:no-repeat;background-position:50% 50%;background-color:#375637;border:3px solid #ded599}div.svelte-1fffz01.svelte-1fffz01{overflow:hidden}
section.svelte-v278bn{width:100%;margin-bottom:40px}div.svelte-v278bn{padding:0}.form.svelte-v278bn{background-color:#ded599;height:100%;margin:20px;border-radius:20px}.header.svelte-v278bn{border-radius:20px 20px 0 0;height:75px;background-color:#375637;position:relative}.heading.svelte-v278bn{font-size:32px;margin:0;position:absolute;top:50%;transform:translate(0, -50%);padding-left:10px;color:#ddd499}input.svelte-v278bn,textarea.svelte-v278bn{width:80%;padding-left:10px;padding-right:10px;line-height:40px;font-size:20px}input.svelte-v278bn{margin-top:25px}textarea.svelte-v278bn{margin-bottom:25px}.selectstuff.svelte-v278bn{display:table-cell;line-height:40px;font-size:20px}.container.svelte-v278bn{display:table;width:100%;table-layout:fixed}select.svelte-v278bn{width:65px}button.svelte-v278bn{border-radius:5px;border:none;color:#ddd499;padding:6px 32px;text-align:center;text-decoration:none;margin-bottom:20px}.facebook-button.svelte-v278bn{background-color:#3578e5}.propose-button.svelte-v278bn{background-color:#375637}
nav.svelte-1hfh8t9{width:100%;flex-direction:row}.nav-left{justify-content:flex-start
}.nav-right{justify-content:flex-end
}
@keyframes svelte-ns2tqd-spin{to{transform:rotate(360deg) }}@keyframes svelte-ns2tqd-spin-inverse{to{transform:rotate(-360deg) }}svg.svelte-ns2tqd.svelte-ns2tqd{vertical-align:middle}span.svelte-ns2tqd.svelte-ns2tqd{display:inline-block;line-height:1}span.svelte-ns2tqd img.svelte-ns2tqd{padding:0px;margin:0px;vertical-align:middle}.spinCW.svelte-ns2tqd.svelte-ns2tqd{animation:svelte-ns2tqd-spin linear 2s infinite;transform-origin:center}.spinCCW.svelte-ns2tqd.svelte-ns2tqd{animation:svelte-ns2tqd-spin-inverse linear 2s infinite;transform-origin:center}
@keyframes svelte-1o5ccdl-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.loading.svelte-1o5ccdl.svelte-1o5ccdl{color:transparent !important;min-height:.8rem;pointer-events:none;position:relative}.loading.svelte-1o5ccdl.svelte-1o5ccdl::after{animation:svelte-1o5ccdl-loading 500ms infinite linear;border:.2rem solid #FFFFFF;border-radius:50%;border-right-color:transparent;border-top-color:transparent;content:"";display:block;height:.8rem;left:50%;margin-left:-.4rem;margin-top:-.4rem;position:absolute;top:50%;width:.8rem;z-index:1}.icon.svelte-1o5ccdl>.lefticon.svelte-1o5ccdl{margin:-10px 10px -10px 0px}.icon.svelte-1o5ccdl>.righticon.svelte-1o5ccdl{margin:-10px 0px -10px 10px}.icon-only.svelte-1o5ccdl.svelte-1o5ccdl{padding:.5rem .65rem}summary.svelte-1o5ccdl.svelte-1o5ccdl,button.svelte-1o5ccdl.svelte-1o5ccdl{white-space:nowrap}summary.svelte-1o5ccdl.svelte-1o5ccdl::-webkit-details-marker{display:none}
summary.svelte-4ixea4{cursor:pointer}
input[type=range].svelte-ovucoa::-moz-range-track,input[type=range].svelte-ovucoa::-webkit-slider-runnable-track{background-color:var(--color-primary)}
p.svelte-3n5xjn{margin:0px;padding:0px}.message.svelte-3n5xjn{font-size:smaller}.grouped.svelte-3n5xjn:not(.gapless){overflow-x:auto}
.container.svelte-4lwi8h{position:fixed;top:0px;left:0px;width:100vw;height:100vh;z-index:10000}.background.svelte-4lwi8h{position:fixed;top:0px;left:0px;width:100vw;height:100vh;background-color:black;opacity:0.5}.modal.svelte-4lwi8h{position:fixed;top:50%;left:50%;transform:translate(-50%, -50%);min-width:400px;background-color:white}
button.svelte-1xa85dm{border-radius:5px;border:none;background-color:#375637;color:#ddd499;padding:6px 12px;text-align:center;text-decoration:none;margin-bottom:20px}@media only screen 
and (min-device-width : 320px) 
and (max-device-width : 480px){}@media only screen 
and (min-device-width : 768px) 
and (max-device-width : 1024px){}@media only screen
and (min-width : 1224px){}@mediaonly screen and (-webkit-min-device-pixel-ratio : 1.5),
only screen and (min-device-pixel-ratio : 1.5){}
@media only screen 
and (min-device-width : 320px) 
and (max-device-width : 480px){}@media only screen 
and (min-device-width : 768px) 
and (max-device-width : 1024px){}@media only screen
and (min-width : 1224px){}@mediaonly screen and (-webkit-min-device-pixel-ratio : 1.5),
only screen and (min-device-pixel-ratio : 1.5){}
@import 'https://fonts.googleapis.com/css?family=Princess+Sofia';@media only screen and (min-width: 1224px){img.svelte-1ylyyc6{position:fixed;right:30px;top:15px;height:45px;width:45px;margin:0}img.svelte-1ylyyc6:hover{cursor:pointer}}
.overlay.svelte-m0jddf.svelte-m0jddf{position:relative;display:inline-block;box-sizing:border-box}.content-wrapper.svelte-m0jddf.svelte-m0jddf{position:fixed;pointer-events:none;width:max-content}.content-wrapper.svelte-m0jddf>.svelte-m0jddf{pointer-events:all}.content.svelte-m0jddf.svelte-m0jddf{position:absolute;min-width:100%}.top-left.svelte-m0jddf.svelte-m0jddf,.top-center.svelte-m0jddf.svelte-m0jddf,.top-right.svelte-m0jddf.svelte-m0jddf{bottom:100%}.bottom-left.svelte-m0jddf.svelte-m0jddf,.bottom-center.svelte-m0jddf.svelte-m0jddf,.bottom-right.svelte-m0jddf.svelte-m0jddf{top:100%}.top-left.svelte-m0jddf.svelte-m0jddf,.bottom-left.svelte-m0jddf.svelte-m0jddf{right:0}.top-center.svelte-m0jddf.svelte-m0jddf,.bottom-center.svelte-m0jddf.svelte-m0jddf{left:50%;transform:translateX(-50%)}.top-right.svelte-m0jddf.svelte-m0jddf,.bottom-right.svelte-m0jddf.svelte-m0jddf{left:0}.left-top.svelte-m0jddf.svelte-m0jddf,.left-bottom.svelte-m0jddf.svelte-m0jddf,.left-center.svelte-m0jddf.svelte-m0jddf{right:100%}.right-top.svelte-m0jddf.svelte-m0jddf,.right-bottom.svelte-m0jddf.svelte-m0jddf,.right-center.svelte-m0jddf.svelte-m0jddf{left:100%}.left-center.svelte-m0jddf.svelte-m0jddf,.right-center.svelte-m0jddf.svelte-m0jddf{top:50%;transform:translateY(-50%)}.left-top.svelte-m0jddf.svelte-m0jddf,.right-top.svelte-m0jddf.svelte-m0jddf{bottom:0}.left-bottom.svelte-m0jddf.svelte-m0jddf,.right-bottom.svelte-m0jddf.svelte-m0jddf{top:0}
@import 'https://fonts.googleapis.com/css?family=Princess+Sofia';@media only screen and (min-width: 1224px){.menu.svelte-1iuog3x.svelte-1iuog3x{position:absolute;top:75px;right:0;width:25%;height:100vh;background-color:#375637;color:#ddd499}ul.svelte-1iuog3x.svelte-1iuog3x{text-align:center;font-size:50px;overflow:hidden;padding:0;margin:0;list-style:none;height:100%}li.svelte-1iuog3x.svelte-1iuog3x{height:14%}li.svelte-1iuog3x.svelte-1iuog3x:hover{background-color:#2E4A2E}li.svelte-1iuog3x:hover div.svelte-1iuog3x{text-decoration:underline}li.svelte-1iuog3x div.svelte-1iuog3x{display:block;height:100%;text-align:center;height:150px;line-height:150px}.arrow.svelte-1iuog3x.svelte-1iuog3x{float:left}img.svelte-1iuog3x.svelte-1iuog3x{padding-top:50px}}
@media only screen and (min-width: 1224px){div.svelte-10pxptc{background-color:#375637;height:75px;width:100%;position:absolute}p.svelte-10pxptc{color:#ddd499;font-weight:bold;font-size:50px;line-height:50px;margin:12.5px}}
@import 'https://fonts.googleapis.com/css?family=Princess+Sofia';@import 'https://fonts.googleapis.com/css?family=Rokkitt';body{background-color:#fff9ea;margin:0;overflow:auto;height:100%;line-height:0 !important}h1{font-size:50px !important;line-height:50px;padding-top:12.5px !important;color:#ddd499;margin:0 !important;font-family:'Princess Sofia'}section{line-height:100%;text-align:center}section div{padding:20px}p,a,li{font-family:'Rokkitt'}html{position:absolute;height:100%;overflow:hidden}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */