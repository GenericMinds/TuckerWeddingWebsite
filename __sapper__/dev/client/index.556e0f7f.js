import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, g as globals, c as create_slot, a as compute_rest_props, b as createEventDispatcher, o as onMount, e as onDestroy, f as beforeUpdate, v as validate_slots, h as assign, j as exclude_internal_props, t as tick, k as element, l as claim_element, m as children, n as detach_dev, p as attr_dev, q as null_to_empty, r as add_location, u as insert_dev, w as update_slot, x as transition_in, y as transition_out, z as space, A as claim_space, B as append_dev, C as listen_dev, D as group_outros, E as check_outros, F as run_all, G as binding_callbacks, H as identity, I as noop, J as now, K as loop, L as bind, M as create_component, N as claim_component, O as mount_component, P as add_flush_callback, Q as destroy_component, R as svg_element, T as text, U as claim_text, V as validate_each_argument, W as set_data_dev, X as destroy_each, Y as add_render_callback, Z as set_input_value, _ as select_option, $ as select_value } from './client.1a5c12f6.js';

var POSITIONS = [
  "bottom-right",
  "bottom-center",
  "bottom-left",
  "top-right",
  "top-center",
  "top-left",
  "right-bottom",
  "right-center",
  "right-top",
  "left-bottom",
  "left-center",
  "left-top"
];

const RIGHT = "right";
const LEFT = "left";
const TOP = "top";
const CENTER = "center";
const BOTTOM = "bottom";

// for SSR
function isBrowser() {
  return typeof window !== 'undefined' && typeof document !== 'undefined';
}

const getNextPosition = (position, dimensions) => {
  const clientHeight = Math.min(document.body.clientHeight, document.documentElement.clientHeight);
  const clientWidth = Math.min(document.body.clientWidth, document.documentElement.clientWidth);
  Object.assign(dimensions, { clientWidth, clientHeight });

  const [mainPosition, secondaryPosition] = position.split('-');
  const nextMainPosition = getMainPosition(mainPosition, dimensions);
  const nextSecondaryPosition = getSecondaryPosition(secondaryPosition, dimensions);

  return `${nextMainPosition}-${nextSecondaryPosition}`;
};

const getMainPosition = (
  position,
  {
    top,
    bottom,
    left,
    right,
    height,
    width,
    clientWidth,
    clientHeight,
  },
) => {

  const fitsOnTop = top > height;
  const fitsOnBottom = bottom + height < clientHeight;

  const fitsOnLeft = left > width;
  const fitsOnRight = right + width < clientWidth;

  const positions = {
    top: () => !fitsOnTop && fitsOnBottom ? BOTTOM : TOP,
    bottom: () => fitsOnTop && !fitsOnBottom ? TOP : BOTTOM,
    left: () => !fitsOnLeft && fitsOnRight ? RIGHT : LEFT,
    right: () => !fitsOnRight && fitsOnLeft ? LEFT : RIGHT,
  };

  return positions[position]();
};

const getSecondaryPosition = (
  position,
  {
    top,
    bottom,
    left,
    right,
    height,
    width,
    clientWidth,
    clientHeight,
  }
) => {
  const parentHeight = bottom - top;
  const parentCenter = top + parentHeight / 2;

  const fitsOnTop = bottom > height;
  const fitsOnBottom = top + height < clientHeight;
  const fitsCenter = (parentCenter - height / 2) > 0 && (parentCenter + height / 2) < clientHeight;
  const fitsOnLeft = right > width;
  const fitsOnRight = left + width < clientWidth;

  const positions = {
    top: () => !fitsOnTop && fitsOnBottom ? BOTTOM : TOP,
    center: () => fitsCenter ? CENTER : positions.top(),
    bottom: () => !fitsOnBottom && fitsOnTop ? TOP : BOTTOM,
    left: () => !fitsOnLeft && fitsOnRight ? RIGHT : LEFT,
    right: () => !fitsOnRight && fitsOnLeft ? LEFT : RIGHT,
  };

  return positions[position]();
};

/* node_modules\svelte-overlay\src\components\Overlay.svelte generated by Svelte v3.23.2 */

const { Error: Error_1, window: window_1 } = globals;
const file = "node_modules\\svelte-overlay\\src\\components\\Overlay.svelte";
const get_content_slot_changes = dirty => ({ isOpen: dirty[0] & /*openedState*/ 2048 });

const get_content_slot_context = ctx => ({
	toggle: /*toggle*/ ctx[12],
	isOpen: /*openedState*/ ctx[11],
	open: /*open*/ ctx[13],
	close: /*close*/ ctx[14]
});

const get_parent_slot_changes = dirty => ({ isOpen: dirty[0] & /*openedState*/ 2048 });

const get_parent_slot_context = ctx => ({
	toggle: /*toggle*/ ctx[12],
	isOpen: /*openedState*/ ctx[11],
	open: /*open*/ ctx[13],
	close: /*close*/ ctx[14]
});

// (155:2) {#if openedState}
function create_if_block(ctx) {
	let div;
	let div_class_value;
	let current;
	const content_slot_template = /*$$slots*/ ctx[24].content;
	const content_slot = create_slot(content_slot_template, ctx, /*$$scope*/ ctx[23], get_content_slot_context);

	const block = {
		c: function create() {
			div = element("div");
			if (content_slot) content_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			if (content_slot) content_slot.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", div_class_value = "" + (null_to_empty(`content ${/*currentPosition*/ ctx[2] || ""}`) + " svelte-m0jddf"));
			add_location(div, file, 155, 3, 3777);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);

			if (content_slot) {
				content_slot.m(div, null);
			}

			/*div_binding*/ ctx[26](div);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (content_slot) {
				if (content_slot.p && dirty[0] & /*$$scope, openedState*/ 8390656) {
					update_slot(content_slot, content_slot_template, ctx, /*$$scope*/ ctx[23], dirty, get_content_slot_changes, get_content_slot_context);
				}
			}

			if (!current || dirty[0] & /*currentPosition*/ 4 && div_class_value !== (div_class_value = "" + (null_to_empty(`content ${/*currentPosition*/ ctx[2] || ""}`) + " svelte-m0jddf"))) {
				attr_dev(div, "class", div_class_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(content_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(content_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (content_slot) content_slot.d(detaching);
			/*div_binding*/ ctx[26](null);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(155:2) {#if openedState}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div2;
	let div0;
	let t;
	let div1;
	let div1_style_value;
	let div2_class_value;
	let div2_style_value;
	let current;
	let mounted;
	let dispose;
	const parent_slot_template = /*$$slots*/ ctx[24].parent;
	const parent_slot = create_slot(parent_slot_template, ctx, /*$$scope*/ ctx[23], get_parent_slot_context);
	let if_block = /*openedState*/ ctx[11] && create_if_block(ctx);

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			if (parent_slot) parent_slot.c();
			t = space();
			div1 = element("div");
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true, style: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			if (parent_slot) parent_slot.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			t = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true, style: true });
			var div1_nodes = children(div1);
			if (if_block) if_block.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "svelte-m0jddf");
			add_location(div0, file, 147, 1, 3493);
			attr_dev(div1, "class", "content-wrapper svelte-m0jddf");
			attr_dev(div1, "style", div1_style_value = `top: ${/*topStyle*/ ctx[6]}px; left: ${/*leftStyle*/ ctx[7]}px; width: ${/*widthStyle*/ ctx[8]}px; height: ${/*heightStyle*/ ctx[9]}px; z-index:${/*zIndex*/ ctx[0]};`);
			add_location(div1, file, 150, 1, 3597);
			attr_dev(div2, "class", div2_class_value = "" + (null_to_empty(`overlay ${/*className*/ ctx[10]}`) + " svelte-m0jddf"));
			attr_dev(div2, "style", div2_style_value = `z-index:${/*zIndex*/ ctx[0]}; ${/*style*/ ctx[1]}`);
			add_location(div2, file, 146, 0, 3398);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div0);

			if (parent_slot) {
				parent_slot.m(div0, null);
			}

			/*div0_binding*/ ctx[25](div0);
			append_dev(div2, t);
			append_dev(div2, div1);
			if (if_block) if_block.m(div1, null);
			/*div2_binding*/ ctx[27](div2);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(window_1, "mousedown", /*handleWindowClick*/ ctx[15], false, false, false),
					listen_dev(window_1, "keydown", /*handleWindowKeyDown*/ ctx[16], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (parent_slot) {
				if (parent_slot.p && dirty[0] & /*$$scope, openedState*/ 8390656) {
					update_slot(parent_slot, parent_slot_template, ctx, /*$$scope*/ ctx[23], dirty, get_parent_slot_changes, get_parent_slot_context);
				}
			}

			if (/*openedState*/ ctx[11]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty[0] & /*openedState*/ 2048) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(div1, null);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}

			if (!current || dirty[0] & /*topStyle, leftStyle, widthStyle, heightStyle, zIndex*/ 961 && div1_style_value !== (div1_style_value = `top: ${/*topStyle*/ ctx[6]}px; left: ${/*leftStyle*/ ctx[7]}px; width: ${/*widthStyle*/ ctx[8]}px; height: ${/*heightStyle*/ ctx[9]}px; z-index:${/*zIndex*/ ctx[0]};`)) {
				attr_dev(div1, "style", div1_style_value);
			}

			if (!current || dirty[0] & /*className*/ 1024 && div2_class_value !== (div2_class_value = "" + (null_to_empty(`overlay ${/*className*/ ctx[10]}`) + " svelte-m0jddf"))) {
				attr_dev(div2, "class", div2_class_value);
			}

			if (!current || dirty[0] & /*zIndex, style*/ 3 && div2_style_value !== (div2_style_value = `z-index:${/*zIndex*/ ctx[0]}; ${/*style*/ ctx[1]}`)) {
				attr_dev(div2, "style", div2_style_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(parent_slot, local);
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(parent_slot, local);
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
			if (parent_slot) parent_slot.d(detaching);
			/*div0_binding*/ ctx[25](null);
			if (if_block) if_block.d();
			/*div2_binding*/ ctx[27](null);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	const omit_props_names = [
		"isOpen","updateOnScroll","closeOnScroll","position","closeOnClickOutside","zIndex","onWindowKeyDown","style"
	];

	let $$restProps = compute_rest_props($$props, omit_props_names);
	const dispatch = createEventDispatcher();
	const DEFAULT_POSITION = POSITIONS[0];
	let { isOpen = false } = $$props;
	let { updateOnScroll = false } = $$props;
	let { closeOnScroll = false } = $$props;
	let { position = DEFAULT_POSITION } = $$props;
	let { closeOnClickOutside = false } = $$props;
	let { zIndex = 1 } = $$props;

	let { onWindowKeyDown = () => {
		
	} } = $$props;

	let { style = "" } = $$props;
	let currentPosition = null;
	let parent;
	let content;
	let target;
	let topStyle = 0;
	let leftStyle = 0;
	let widthStyle = 0;
	let heightStyle = 0;

	function addListeners() {
		if (!isBrowser()) return;
		window.addEventListener("resize", updatePosition);
		if (closeOnScroll) window.addEventListener("scroll", close); else if (updateOnScroll) window.addEventListener("scroll", updatePosition);
	}

	function removeListeners() {
		if (!isBrowser()) return;
		window.removeEventListener("resize", updatePosition);
		window.removeEventListener("scroll", updatePosition);
		window.removeEventListener("scroll", close);
	}

	onMount(() => {
		if (openedState) {
			addListeners();
		}
	});

	onDestroy(() => {
		if (!isBrowser()) return;
		removeListeners();
	});

	beforeUpdate(updatePosition);

	function toggle(value) {
		const prevOpen = isOpen;
		const nextOpen = value === true || value === false ? value : !isOpen;
		if (nextOpen && hasParent && hasContent || !nextOpen) $$invalidate(17, isOpen = nextOpen);

		if (prevOpen !== isOpen) {
			dispatch("toggle", isOpen);

			if (isOpen) {
				addListeners();
				dispatch("open");
			} else {
				dispatch("close");
				removeListeners();
			}
		}
	}

	function open() {
		if (!openedState) toggle(true);
	}

	function close() {
		if (openedState) toggle(false);
	}

	function contains(event) {
		const path = event.path || event.composedPath();
		return path.includes(parent) || path.includes(content);
	}

	function handleWindowClick(event) {
		if (!closeOnClickOutside || !openedState || contains(event)) return;
		close();
	}

	function handleWindowKeyDown(event) {
		if (!onWindowKeyDown || !openedState) return;

		onWindowKeyDown(event, {
			isOpen: openedState,
			open,
			close,
			toggle,
			contains
		});
	}

	async function updatePosition() {
		await tick();
		if (!openedState) return;
		if (!POSITIONS.includes(position)) $$invalidate(18, position = DEFAULT_POSITION);
		const { top, bottom, left, right, width: parentWidth, height: parentHeight } = parent.getBoundingClientRect();
		const { height, width } = content.getBoundingClientRect();
		const dimensions = { top, bottom, left, right, height, width };
		const nextPosition = getNextPosition(position, dimensions);

		if (currentPosition !== nextPosition) {
			$$invalidate(2, currentPosition = nextPosition);
		}

		$$invalidate(6, topStyle = top);
		$$invalidate(7, leftStyle = left);
		$$invalidate(8, widthStyle = parentWidth);
		$$invalidate(9, heightStyle = parentHeight);
	}

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Overlay", $$slots, ['parent','content']);

	function div0_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			parent = $$value;
			$$invalidate(3, parent);
		});
	}

	function div_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			content = $$value;
			$$invalidate(4, content);
		});
	}

	function div2_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			target = $$value;
			$$invalidate(5, target);
		});
	}

	$$self.$set = $$new_props => {
		$$props = assign(assign({}, $$props), exclude_internal_props($$new_props));
		$$invalidate(36, $$restProps = compute_rest_props($$props, omit_props_names));
		if ("isOpen" in $$new_props) $$invalidate(17, isOpen = $$new_props.isOpen);
		if ("updateOnScroll" in $$new_props) $$invalidate(19, updateOnScroll = $$new_props.updateOnScroll);
		if ("closeOnScroll" in $$new_props) $$invalidate(20, closeOnScroll = $$new_props.closeOnScroll);
		if ("position" in $$new_props) $$invalidate(18, position = $$new_props.position);
		if ("closeOnClickOutside" in $$new_props) $$invalidate(21, closeOnClickOutside = $$new_props.closeOnClickOutside);
		if ("zIndex" in $$new_props) $$invalidate(0, zIndex = $$new_props.zIndex);
		if ("onWindowKeyDown" in $$new_props) $$invalidate(22, onWindowKeyDown = $$new_props.onWindowKeyDown);
		if ("style" in $$new_props) $$invalidate(1, style = $$new_props.style);
		if ("$$scope" in $$new_props) $$invalidate(23, $$scope = $$new_props.$$scope);
	};

	$$self.$capture_state = () => ({
		beforeUpdate,
		onMount,
		onDestroy,
		tick,
		createEventDispatcher,
		POSITIONS,
		isBrowser,
		getNextPosition,
		dispatch,
		DEFAULT_POSITION,
		isOpen,
		updateOnScroll,
		closeOnScroll,
		position,
		closeOnClickOutside,
		zIndex,
		onWindowKeyDown,
		style,
		currentPosition,
		parent,
		content,
		target,
		topStyle,
		leftStyle,
		widthStyle,
		heightStyle,
		addListeners,
		removeListeners,
		toggle,
		open,
		close,
		contains,
		handleWindowClick,
		handleWindowKeyDown,
		updatePosition,
		className,
		hasParent,
		hasContent,
		openedState
	});

	$$self.$inject_state = $$new_props => {
		if ("isOpen" in $$props) $$invalidate(17, isOpen = $$new_props.isOpen);
		if ("updateOnScroll" in $$props) $$invalidate(19, updateOnScroll = $$new_props.updateOnScroll);
		if ("closeOnScroll" in $$props) $$invalidate(20, closeOnScroll = $$new_props.closeOnScroll);
		if ("position" in $$props) $$invalidate(18, position = $$new_props.position);
		if ("closeOnClickOutside" in $$props) $$invalidate(21, closeOnClickOutside = $$new_props.closeOnClickOutside);
		if ("zIndex" in $$props) $$invalidate(0, zIndex = $$new_props.zIndex);
		if ("onWindowKeyDown" in $$props) $$invalidate(22, onWindowKeyDown = $$new_props.onWindowKeyDown);
		if ("style" in $$props) $$invalidate(1, style = $$new_props.style);
		if ("currentPosition" in $$props) $$invalidate(2, currentPosition = $$new_props.currentPosition);
		if ("parent" in $$props) $$invalidate(3, parent = $$new_props.parent);
		if ("content" in $$props) $$invalidate(4, content = $$new_props.content);
		if ("target" in $$props) $$invalidate(5, target = $$new_props.target);
		if ("topStyle" in $$props) $$invalidate(6, topStyle = $$new_props.topStyle);
		if ("leftStyle" in $$props) $$invalidate(7, leftStyle = $$new_props.leftStyle);
		if ("widthStyle" in $$props) $$invalidate(8, widthStyle = $$new_props.widthStyle);
		if ("heightStyle" in $$props) $$invalidate(9, heightStyle = $$new_props.heightStyle);
		if ("className" in $$props) $$invalidate(10, className = $$new_props.className);
		if ("hasParent" in $$props) $$invalidate(28, hasParent = $$new_props.hasParent);
		if ("hasContent" in $$props) $$invalidate(29, hasContent = $$new_props.hasContent);
		if ("openedState" in $$props) $$invalidate(11, openedState = $$new_props.openedState);
	};

	let className;
	let hasParent;
	let hasContent;
	let openedState;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		 $$invalidate(10, className = $$restProps["class"] || "");

		if ($$self.$$.dirty[0] & /*parent*/ 8) {
			 $$invalidate(28, hasParent = !parent || !!parent.childNodes.length);
		}

		if ($$self.$$.dirty[0] & /*content*/ 16) {
			 $$invalidate(29, hasContent = !content || !!content.childNodes.length);
		}

		if ($$self.$$.dirty[0] & /*hasParent*/ 268435456) {
			 if (!hasParent) throw new Error("parent slot is required");
		}

		if ($$self.$$.dirty[0] & /*hasContent*/ 536870912) {
			 if (!hasContent) throw new Error("content slot is required");
		}

		if ($$self.$$.dirty[0] & /*isOpen, hasParent, hasContent*/ 805437440) {
			 $$invalidate(11, openedState = isOpen && hasParent && hasContent);
		}
	};

	return [
		zIndex,
		style,
		currentPosition,
		parent,
		content,
		target,
		topStyle,
		leftStyle,
		widthStyle,
		heightStyle,
		className,
		openedState,
		toggle,
		open,
		close,
		handleWindowClick,
		handleWindowKeyDown,
		isOpen,
		position,
		updateOnScroll,
		closeOnScroll,
		closeOnClickOutside,
		onWindowKeyDown,
		$$scope,
		$$slots,
		div0_binding,
		div_binding,
		div2_binding
	];
}

class Overlay extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(
			this,
			options,
			instance,
			create_fragment,
			safe_not_equal,
			{
				isOpen: 17,
				updateOnScroll: 19,
				closeOnScroll: 20,
				position: 18,
				closeOnClickOutside: 21,
				zIndex: 0,
				onWindowKeyDown: 22,
				style: 1
			},
			[-1, -1]
		);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Overlay",
			options,
			id: create_fragment.name
		});
	}

	get isOpen() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isOpen(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get updateOnScroll() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set updateOnScroll(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get closeOnScroll() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set closeOnScroll(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get position() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set position(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get closeOnClickOutside() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set closeOnClickOutside(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get zIndex() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set zIndex(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onWindowKeyDown() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onWindowKeyDown(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get style() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set style(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/*
Adapted from https://github.com/mattdesl
Distributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md
*/
function backInOut(t) {
    const s = 1.70158 * 1.525;
    if ((t *= 2) < 1)
        return 0.5 * (t * t * ((s + 1) * t - s));
    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);
}
function backIn(t) {
    const s = 1.70158;
    return t * t * ((s + 1) * t - s);
}
function backOut(t) {
    const s = 1.70158;
    return --t * t * ((s + 1) * t + s) + 1;
}
function bounceOut(t) {
    const a = 4.0 / 11.0;
    const b = 8.0 / 11.0;
    const c = 9.0 / 10.0;
    const ca = 4356.0 / 361.0;
    const cb = 35442.0 / 1805.0;
    const cc = 16061.0 / 1805.0;
    const t2 = t * t;
    return t < a
        ? 7.5625 * t2
        : t < b
            ? 9.075 * t2 - 9.9 * t + 3.4
            : t < c
                ? ca * t2 - cb * t + cc
                : 10.8 * t * t - 20.52 * t + 10.72;
}
function bounceInOut(t) {
    return t < 0.5
        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))
        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;
}
function bounceIn(t) {
    return 1.0 - bounceOut(1.0 - t);
}
function circInOut(t) {
    if ((t *= 2) < 1)
        return -0.5 * (Math.sqrt(1 - t * t) - 1);
    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
}
function circIn(t) {
    return 1.0 - Math.sqrt(1.0 - t * t);
}
function circOut(t) {
    return Math.sqrt(1 - --t * t);
}
function cubicInOut(t) {
    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;
}
function cubicIn(t) {
    return t * t * t;
}
function cubicOut(t) {
    const f = t - 1.0;
    return f * f * f + 1.0;
}
function elasticInOut(t) {
    return t < 0.5
        ? 0.5 *
            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *
            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))
        : 0.5 *
            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *
            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +
            1.0;
}
function elasticIn(t) {
    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));
}
function elasticOut(t) {
    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);
}
function expoInOut(t) {
    return t === 0.0 || t === 1.0
        ? t
        : t < 0.5
            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)
            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;
}
function expoIn(t) {
    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));
}
function expoOut(t) {
    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);
}
function quadInOut(t) {
    t /= 0.5;
    if (t < 1)
        return 0.5 * t * t;
    t--;
    return -0.5 * (t * (t - 2) - 1);
}
function quadIn(t) {
    return t * t;
}
function quadOut(t) {
    return -t * (t - 2.0);
}
function quartInOut(t) {
    return t < 0.5
        ? +8.0 * Math.pow(t, 4.0)
        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;
}
function quartIn(t) {
    return Math.pow(t, 4.0);
}
function quartOut(t) {
    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;
}
function quintInOut(t) {
    if ((t *= 2) < 1)
        return 0.5 * t * t * t * t * t;
    return 0.5 * ((t -= 2) * t * t * t * t + 2);
}
function quintIn(t) {
    return t * t * t * t * t;
}
function quintOut(t) {
    return --t * t * t * t * t + 1;
}
function sineInOut(t) {
    return -0.5 * (Math.cos(Math.PI * t) - 1);
}
function sineIn(t) {
    const v = Math.cos(t * Math.PI * 0.5);
    if (Math.abs(v) < 1e-14)
        return 1;
    else
        return 1 - v;
}
function sineOut(t) {
    return Math.sin((t * Math.PI) / 2);
}

var easings = /*#__PURE__*/Object.freeze({
  __proto__: null,
  backIn: backIn,
  backInOut: backInOut,
  backOut: backOut,
  bounceIn: bounceIn,
  bounceInOut: bounceInOut,
  bounceOut: bounceOut,
  circIn: circIn,
  circInOut: circInOut,
  circOut: circOut,
  cubicIn: cubicIn,
  cubicInOut: cubicInOut,
  cubicOut: cubicOut,
  elasticIn: elasticIn,
  elasticInOut: elasticInOut,
  elasticOut: elasticOut,
  expoIn: expoIn,
  expoInOut: expoInOut,
  expoOut: expoOut,
  quadIn: quadIn,
  quadInOut: quadInOut,
  quadOut: quadOut,
  quartIn: quartIn,
  quartInOut: quartInOut,
  quartOut: quartOut,
  quintIn: quintIn,
  quintInOut: quintInOut,
  quintOut: quintOut,
  sineIn: sineIn,
  sineInOut: sineInOut,
  sineOut: sineOut,
  linear: identity
});

var _ = {
  $(selector) {
    if (typeof selector === "string") {
      return document.querySelector(selector);
    }
    return selector;
  },
  extend(...args) {
    return Object.assign(...args);
  },
  cumulativeOffset(element) {
    let top = 0;
    let left = 0;

    do {
      top += element.offsetTop || 0;
      left += element.offsetLeft || 0;
      element = element.offsetParent;
    } while (element);

    return {
      top: top,
      left: left
    };
  },
  directScroll(element) {
    return element && element !== document && element !== document.body;
  },
  scrollTop(element, value) {
    let inSetter = value !== undefined;
    if (this.directScroll(element)) {
      return inSetter ? (element.scrollTop = value) : element.scrollTop;
    } else {
      return inSetter
        ? (document.documentElement.scrollTop = document.body.scrollTop = value)
        : window.pageYOffset ||
            document.documentElement.scrollTop ||
            document.body.scrollTop ||
            0;
    }
  },
  scrollLeft(element, value) {
    let inSetter = value !== undefined;
    if (this.directScroll(element)) {
      return inSetter ? (element.scrollLeft = value) : element.scrollLeft;
    } else {
      return inSetter
        ? (document.documentElement.scrollLeft = document.body.scrollLeft = value)
        : window.pageXOffset ||
            document.documentElement.scrollLeft ||
            document.body.scrollLeft ||
            0;
    }
  }
};

const defaultOptions = {
  container: "body",
  duration: 500,
  delay: 0,
  offset: 0,
  easing: "cubicInOut",
  onStart: noop,
  onDone: noop,
  onAborting: noop,
  scrollX: false,
  scrollY: true
};

const _scrollTo = options => {
  let {
    offset,
    duration,
    delay,
    easing,
    x=0,
    y=0,
    scrollX,
    scrollY,
    onStart,
    onDone,
    container,
    onAborting,
    element
  } = options;

  if (typeof easing === "string") {
    easing = easings[easing];
  }
  if (typeof offset === "function") {
    offset = offset();
  }

  var cumulativeOffsetContainer = _.cumulativeOffset(container);
  var cumulativeOffsetTarget = element
    ? _.cumulativeOffset(element)
    : { top: y, left: x };

  var initialX = _.scrollLeft(container);
  var initialY = _.scrollTop(container);

  var targetX =
    cumulativeOffsetTarget.left - cumulativeOffsetContainer.left + offset;
  var targetY =
    cumulativeOffsetTarget.top - cumulativeOffsetContainer.top + offset;

  var diffX = targetX - initialX;
	var diffY = targetY - initialY;

  let scrolling = true;
  let started = false;
  let start_time = now() + delay;
  let end_time = start_time + duration;

  function scrollToTopLeft(element, top, left) {
    if (scrollX) _.scrollLeft(element, left);
    if (scrollY) _.scrollTop(element, top);
  }

  function start(delayStart) {
    if (!delayStart) {
      started = true;
      onStart(element, {x, y});
    }
  }

  function tick(progress) {
    scrollToTopLeft(
      container,
      initialY + diffY * progress,
      initialX + diffX * progress
    );
  }

  function stop() {
    scrolling = false;
  }

  loop(now => {
    if (!started && now >= start_time) {
      start(false);
    }

    if (started && now >= end_time) {
      tick(1);
      stop();
      onDone(element, {x, y});
    }

    if (!scrolling) {
      onAborting(element, {x, y});
      return false;
    }
    if (started) {
      const p = now - start_time;
      const t = 0 + 1 * easing(p / duration);
      tick(t);
    }

    return true;
  });

  start(delay);

  tick(0);

  return stop;
};

const proceedOptions = options => {
	let opts = _.extend({}, defaultOptions, options);
  opts.container = _.$(opts.container);
  opts.element = _.$(opts.element);
  return opts;
};

const scrollContainerHeight = containerElement => {
  if (
    containerElement &&
    containerElement !== document &&
    containerElement !== document.body
  ) {
    return containerElement.scrollHeight - containerElement.offsetHeight;
  } else {
    let body = document.body;
    let html = document.documentElement;

    return Math.max(
      body.scrollHeight,
      body.offsetHeight,
      html.clientHeight,
      html.scrollHeight,
      html.offsetHeight
    );
  }
};

const setGlobalOptions = options => {
	_.extend(defaultOptions, options || {});
};

const scrollTo = options => {
  return _scrollTo(proceedOptions(options));
};

const scrollToBottom = options => {
  options = proceedOptions(options);

  return _scrollTo(
    _.extend(options, {
      element: null,
      y: scrollContainerHeight(options.container)
    })
  );
};

const scrollToTop = options => {
  options = proceedOptions(options);

  return _scrollTo(
    _.extend(options, {
      element: null,
      y: 0
    })
  );
};

const makeScrollToAction = scrollToFunc => {
  return (node, options) => {
    let current = options;
    const handle = e => {
      e.preventDefault();
      scrollToFunc(
        typeof current === "string" ? { element: current } : current
      );
    };
    node.addEventListener("click", handle);
    node.addEventListener("touchstart", handle);
    return {
      update(options) {
        current = options;
      },
      destroy() {
        node.removeEventListener("click", handle);
        node.removeEventListener("touchstart", handle);
      }
    };
  };
};

const scrollto = makeScrollToAction(scrollTo);
const scrolltotop = makeScrollToAction(scrollToTop);
const scrolltobottom = makeScrollToAction(scrollToBottom);

var animateScroll = /*#__PURE__*/Object.freeze({
  __proto__: null,
  setGlobalOptions: setGlobalOptions,
  scrollTo: scrollTo,
  scrollToBottom: scrollToBottom,
  scrollToTop: scrollToTop,
  makeScrollToAction: makeScrollToAction,
  scrollto: scrollto,
  scrolltotop: scrolltotop,
  scrolltobottom: scrolltobottom
});

/* src\routes\_components\MenuIcon.svelte generated by Svelte v3.23.2 */
const file$1 = "src\\routes\\_components\\MenuIcon.svelte";

// (17:0) {#if isOpen}
function create_if_block$1(ctx) {
	let div;

	const block = {
		c: function create() {
			div = element("div");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			children(div).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "svelte-1jaf61n");
			add_location(div, file$1, 17, 4, 438);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$1.name,
		type: "if",
		source: "(17:0) {#if isOpen}",
		ctx
	});

	return block;
}

// (22:4) <svg slot='parent' on:click={handleToggle} x='0px' y='0px' viewBox='0 0 50 50' enable-background='new 0 0 50 50' xml:space='preserve' height='40px' width='40px'>
function create_parent_slot(ctx) {
	let svg;
	let path0;
	let path1;
	let path2;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			svg = svg_element("svg");
			path0 = svg_element("path");
			path1 = svg_element("path");
			path2 = svg_element("path");
			this.h();
		},
		l: function claim(nodes) {
			svg = claim_element(
				nodes,
				"svg",
				{
					slot: true,
					x: true,
					y: true,
					viewBox: true,
					"enable-background": true,
					"xml:space": true,
					height: true,
					width: true,
					class: true
				},
				1
			);

			var svg_nodes = children(svg);
			path0 = claim_element(svg_nodes, "path", { fill: true, d: true }, 1);
			children(path0).forEach(detach_dev);
			path1 = claim_element(svg_nodes, "path", { fill: true, d: true }, 1);
			children(path1).forEach(detach_dev);
			path2 = claim_element(svg_nodes, "path", { fill: true, d: true }, 1);
			children(path2).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(path0, "fill", "#ddd499");
			attr_dev(path0, "d", "M8.667,15h30c0.552,0,1-0.447,1-1s-0.448-1-1-1h-30c-0.552,0-1,0.447-1,1S8.114,15,8.667,15z");
			add_location(path0, file$1, 22, 12, 710);
			attr_dev(path1, "fill", "#ddd499");
			attr_dev(path1, "d", "M8.667,37h30c0.552,0,1-0.447,1-1s-0.448-1-1-1h-30c-0.552,0-1,0.447-1,1S8.114,37,8.667,37z");
			add_location(path1, file$1, 23, 12, 840);
			attr_dev(path2, "fill", "#ddd499");
			attr_dev(path2, "d", "M8.667,26h30c0.552,0,1-0.447,1-1s-0.448-1-1-1h-30c-0.552,0-1,0.447-1,1S8.114,26,8.667,26z");
			add_location(path2, file$1, 24, 12, 970);
			attr_dev(svg, "slot", "parent");
			attr_dev(svg, "x", "0px");
			attr_dev(svg, "y", "0px");
			attr_dev(svg, "viewBox", "0 0 50 50");
			attr_dev(svg, "enable-background", "new 0 0 50 50");
			attr_dev(svg, "xml:space", "preserve");
			attr_dev(svg, "height", "40px");
			attr_dev(svg, "width", "40px");
			attr_dev(svg, "class", "svelte-1jaf61n");
			add_location(svg, file$1, 21, 4, 535);
		},
		m: function mount(target, anchor) {
			insert_dev(target, svg, anchor);
			append_dev(svg, path0);
			append_dev(svg, path1);
			append_dev(svg, path2);

			if (!mounted) {
				dispose = listen_dev(svg, "click", /*handleToggle*/ ctx[1], false, false, false);
				mounted = true;
			}
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(svg);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_parent_slot.name,
		type: "slot",
		source: "(22:4) <svg slot='parent' on:click={handleToggle} x='0px' y='0px' viewBox='0 0 50 50' enable-background='new 0 0 50 50' xml:space='preserve' height='40px' width='40px'>",
		ctx
	});

	return block;
}

// (27:4) <ul slot='content'>
function create_content_slot(ctx) {
	let ul;
	let li0;
	let t0;
	let t1;
	let li1;
	let t2;
	let t3;
	let li2;
	let t4;
	let t5;
	let li3;
	let t6;
	let t7;
	let li4;
	let t8;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			ul = element("ul");
			li0 = element("li");
			t0 = text("Home");
			t1 = space();
			li1 = element("li");
			t2 = text("Our Story");
			t3 = space();
			li2 = element("li");
			t4 = text("Our Family");
			t5 = space();
			li3 = element("li");
			t6 = text("Remembering the Day");
			t7 = space();
			li4 = element("li");
			t8 = text("Propose a Toast");
			this.h();
		},
		l: function claim(nodes) {
			ul = claim_element(nodes, "UL", { slot: true, class: true });
			var ul_nodes = children(ul);
			li0 = claim_element(ul_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			t0 = claim_text(li0_nodes, "Home");
			li0_nodes.forEach(detach_dev);
			t1 = claim_space(ul_nodes);
			li1 = claim_element(ul_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			t2 = claim_text(li1_nodes, "Our Story");
			li1_nodes.forEach(detach_dev);
			t3 = claim_space(ul_nodes);
			li2 = claim_element(ul_nodes, "LI", { class: true });
			var li2_nodes = children(li2);
			t4 = claim_text(li2_nodes, "Our Family");
			li2_nodes.forEach(detach_dev);
			t5 = claim_space(ul_nodes);
			li3 = claim_element(ul_nodes, "LI", { class: true });
			var li3_nodes = children(li3);
			t6 = claim_text(li3_nodes, "Remembering the Day");
			li3_nodes.forEach(detach_dev);
			t7 = claim_space(ul_nodes);
			li4 = claim_element(ul_nodes, "LI", { class: true });
			var li4_nodes = children(li4);
			t8 = claim_text(li4_nodes, "Propose a Toast");
			li4_nodes.forEach(detach_dev);
			ul_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(li0, "class", "home svelte-1jaf61n");
			add_location(li0, file$1, 27, 8, 1134);
			attr_dev(li1, "class", "svelte-1jaf61n");
			add_location(li1, file$1, 28, 8, 1220);
			attr_dev(li2, "class", "svelte-1jaf61n");
			add_location(li2, file$1, 29, 8, 1299);
			attr_dev(li3, "class", "svelte-1jaf61n");
			add_location(li3, file$1, 30, 8, 1380);
			attr_dev(li4, "class", "svelte-1jaf61n");
			add_location(li4, file$1, 31, 8, 1470);
			attr_dev(ul, "slot", "content");
			attr_dev(ul, "class", "svelte-1jaf61n");
			add_location(ul, file$1, 26, 4, 1105);
		},
		m: function mount(target, anchor) {
			insert_dev(target, ul, anchor);
			append_dev(ul, li0);
			append_dev(li0, t0);
			append_dev(ul, t1);
			append_dev(ul, li1);
			append_dev(li1, t2);
			append_dev(ul, t3);
			append_dev(ul, li2);
			append_dev(li2, t4);
			append_dev(ul, t5);
			append_dev(ul, li3);
			append_dev(li3, t6);
			append_dev(ul, t7);
			append_dev(ul, li4);
			append_dev(li4, t8);

			if (!mounted) {
				dispose = [
					listen_dev(li0, "click", /*click_handler*/ ctx[3], false, false, false),
					listen_dev(li1, "click", /*click_handler_1*/ ctx[4], false, false, false),
					listen_dev(li2, "click", /*click_handler_2*/ ctx[5], false, false, false),
					listen_dev(li3, "click", /*click_handler_3*/ ctx[6], false, false, false),
					listen_dev(li4, "click", /*click_handler_4*/ ctx[7], false, false, false)
				];

				mounted = true;
			}
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(ul);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_content_slot.name,
		type: "slot",
		source: "(27:4) <ul slot='content'>",
		ctx
	});

	return block;
}

// (21:0) <Overlay on:toggle={handleToggle} zIndex={100} bind:isOpen={isOpen}>
function create_default_slot(ctx) {
	let t;

	const block = {
		c: function create() {
			t = space();
		},
		l: function claim(nodes) {
			t = claim_space(nodes);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(21:0) <Overlay on:toggle={handleToggle} zIndex={100} bind:isOpen={isOpen}>",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let t;
	let overlay;
	let updating_isOpen;
	let current;
	let if_block = /*isOpen*/ ctx[0] && create_if_block$1(ctx);

	function overlay_isOpen_binding(value) {
		/*overlay_isOpen_binding*/ ctx[8].call(null, value);
	}

	let overlay_props = {
		zIndex: 100,
		$$slots: {
			default: [create_default_slot],
			content: [create_content_slot],
			parent: [create_parent_slot]
		},
		$$scope: { ctx }
	};

	if (/*isOpen*/ ctx[0] !== void 0) {
		overlay_props.isOpen = /*isOpen*/ ctx[0];
	}

	overlay = new Overlay({ props: overlay_props, $$inline: true });
	binding_callbacks.push(() => bind(overlay, "isOpen", overlay_isOpen_binding));
	overlay.$on("toggle", /*handleToggle*/ ctx[1]);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			t = space();
			create_component(overlay.$$.fragment);
		},
		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			t = claim_space(nodes);
			claim_component(overlay.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, t, anchor);
			mount_component(overlay, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*isOpen*/ ctx[0]) {
				if (if_block) ; else {
					if_block = create_if_block$1(ctx);
					if_block.c();
					if_block.m(t.parentNode, t);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			const overlay_changes = {};

			if (dirty & /*$$scope*/ 512) {
				overlay_changes.$$scope = { dirty, ctx };
			}

			if (!updating_isOpen && dirty & /*isOpen*/ 1) {
				updating_isOpen = true;
				overlay_changes.isOpen = /*isOpen*/ ctx[0];
				add_flush_callback(() => updating_isOpen = false);
			}

			overlay.$set(overlay_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(overlay.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(overlay.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(t);
			destroy_component(overlay, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let isOpen = false;

	function handleToggle() {
		$$invalidate(0, isOpen = !isOpen);
	}

	function handleSectionSelection(section) {
		$$invalidate(0, isOpen = false);

		if (section == "home") {
			scrollToTop();
			return;
		}

		scrollTo({ element: "." + section });
	}

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<MenuIcon> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("MenuIcon", $$slots, []);

	const click_handler = () => {
		handleSectionSelection("home");
	};

	const click_handler_1 = () => {
		handleSectionSelection("story");
	};

	const click_handler_2 = () => {
		handleSectionSelection("family");
	};

	const click_handler_3 = () => {
		handleSectionSelection("toasts");
	};

	const click_handler_4 = () => {
		handleSectionSelection("propose");
	};

	function overlay_isOpen_binding(value) {
		isOpen = value;
		$$invalidate(0, isOpen);
	}

	$$self.$capture_state = () => ({
		Overlay,
		animateScroll,
		isOpen,
		handleToggle,
		handleSectionSelection
	});

	$$self.$inject_state = $$props => {
		if ("isOpen" in $$props) $$invalidate(0, isOpen = $$props.isOpen);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		isOpen,
		handleToggle,
		handleSectionSelection,
		click_handler,
		click_handler_1,
		click_handler_2,
		click_handler_3,
		click_handler_4,
		overlay_isOpen_binding
	];
}

class MenuIcon extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "MenuIcon",
			options,
			id: create_fragment$1.name
		});
	}
}

/* src\routes\_components\SectionHeader.svelte generated by Svelte v3.23.2 */
const file$2 = "src\\routes\\_components\\SectionHeader.svelte";

// (6:4) {#if isNav === true}
function create_if_block$2(ctx) {
	let p;
	let t0;
	let t1;
	let menuicon;
	let current;
	menuicon = new MenuIcon({ $$inline: true });

	const block = {
		c: function create() {
			p = element("p");
			t0 = text("#blameitonfate");
			t1 = space();
			create_component(menuicon.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t0 = claim_text(p_nodes, "#blameitonfate");
			p_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			claim_component(menuicon.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "svelte-ik2d4k");
			add_location(p, file$2, 6, 8, 142);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t0);
			insert_dev(target, t1, anchor);
			mount_component(menuicon, target, anchor);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(menuicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(menuicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
			if (detaching) detach_dev(t1);
			destroy_component(menuicon, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$2.name,
		type: "if",
		source: "(6:4) {#if isNav === true}",
		ctx
	});

	return block;
}

function create_fragment$2(ctx) {
	let div;
	let current;
	let if_block = /*isNav*/ ctx[0] === true && create_if_block$2(ctx);

	const block = {
		c: function create() {
			div = element("div");
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			if (if_block) if_block.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "svelte-ik2d4k");
			add_location(div, file$2, 4, 0, 101);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			if (if_block) if_block.m(div, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*isNav*/ ctx[0] === true) {
				if (if_block) {
					if (dirty & /*isNav*/ 1) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block$2(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(div, null);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (if_block) if_block.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let { isNav } = $$props;
	const writable_props = ["isNav"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<SectionHeader> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("SectionHeader", $$slots, []);

	$$self.$set = $$props => {
		if ("isNav" in $$props) $$invalidate(0, isNav = $$props.isNav);
	};

	$$self.$capture_state = () => ({ MenuIcon, isNav });

	$$self.$inject_state = $$props => {
		if ("isNav" in $$props) $$invalidate(0, isNav = $$props.isNav);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [isNav];
}

class SectionHeader extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, { isNav: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "SectionHeader",
			options,
			id: create_fragment$2.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*isNav*/ ctx[0] === undefined && !("isNav" in props)) {
			console.warn("<SectionHeader> was created without expected prop 'isNav'");
		}
	}

	get isNav() {
		throw new Error("<SectionHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isNav(value) {
		throw new Error("<SectionHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\routes\_components\Jumbotron.svelte generated by Svelte v3.23.2 */

const file$3 = "src\\routes\\_components\\Jumbotron.svelte";

function create_fragment$3(ctx) {
	let img;
	let img_src_value;

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", { src: true, alt: true, class: true });
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "LisaTimMainPhoto.jpg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "Lisa and Tim posing during a hike in the woods.");
			attr_dev(img, "class", "svelte-ypvhaw");
			add_location(img, file$3, 0, 0, 0);
		},
		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(img);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$3($$self, $$props) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Jumbotron> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Jumbotron", $$slots, []);
	return [];
}

class Jumbotron extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Jumbotron",
			options,
			id: create_fragment$3.name
		});
	}
}

/* src\routes\_components\Story.svelte generated by Svelte v3.23.2 */
const file$4 = "src\\routes\\_components\\Story.svelte";

function create_fragment$4(ctx) {
	let section;
	let sectionheader;
	let t0;
	let h1;
	let t1;
	let t2;
	let img;
	let img_src_value;
	let t3;
	let div;
	let p0;
	let t4;
	let t5;
	let p1;
	let t6;
	let t7;
	let p2;
	let t8;
	let t9;
	let p3;
	let t10;
	let t11;
	let p4;
	let t12;
	let t13;
	let p5;
	let t14;
	let t15;
	let p6;
	let t16;
	let t17;
	let p7;
	let t18;
	let t19;
	let p8;
	let t20;
	let t21;
	let p9;
	let t22;
	let current;
	sectionheader = new SectionHeader({ props: { isNav: false }, $$inline: true });

	const block = {
		c: function create() {
			section = element("section");
			create_component(sectionheader.$$.fragment);
			t0 = space();
			h1 = element("h1");
			t1 = text("Our Story");
			t2 = space();
			img = element("img");
			t3 = space();
			div = element("div");
			p0 = element("p");
			t4 = text("Once upon a time there was a king and a viking princess. They did not know it, but the gods had set the table for them to be together.");
			t5 = space();
			p1 = element("p");
			t6 = text("As the gods planned out their destiny, they couldn't quite agree on the path these two should take to get there. One of the gods set up their first meeting. As they were both looking to learn more about the world around them, they attended the Academy at the same time. The first god set it up so that they lived in close proximity. Once the other gods noticed, they intervened and kept them from meeting each other. It was not their time yet.");
			t7 = space();
			p2 = element("p");
			t8 = text("Both the king and the viking princess went on to have families of their own. Another one of the gods thought that this was the time and moved them to the same town. Both of their families grew up at the same time. The king had two daughters and the viking princess had two sons and two daughters. The kids grew up with each other and became friends. The eldest viking son and the eldest princess of the king both pursued the bardic arts together. The youngest viking daughter and the youngest princess of the king battled for the raiders through volley after volley of balls flung by the invading armies. Through all of this the other gods decided it was not time for the king and the viking princess to meet, and kept them apart. It was not their time yet.");
			t9 = space();
			p3 = element("p");
			t10 = text("A third god decided to make his move and arranged it so the viking princess joined the Parent Teacher Student Guild along with the Queen. Both were valiant champions in making sure the children of the kingdom were getting the appropriate education. Throughout their many meetings and public events, the other gods decided to intervene and not allow the king and viking princess to cross paths. It was not their time yet.");
			t11 = space();
			p4 = element("p");
			t12 = text("The viking princess pursued her advancement in the Parent Teacher Student Guild with fervor and eventually reached the rank of Teacher of The Native Tongue. A fourth god decided this would be the perfect time to introduce the king and the viking princess. This god arranged for the king's youngest princess to become an apprentice of the viking princess. Alas, the other gods intervened yet again and did not let their paths cross. It was not their time yet.");
			t13 = space();
			p5 = element("p");
			t14 = text("Living within the same kingdom, they were often in the market at the same time. Neither taking notice of each other. The gods had again decided to keep them away from each other. It was not their time yet.");
			t15 = space();
			p6 = element("p");
			t16 = text("By this point in time, both had moved on from their previous relationships. While there were times where they were happy, they knew deep down that something was missing. Their sons and daughters had grown up and had families of their own. The gods finally decided it was time.");
			t17 = space();
			p7 = element("p");
			t18 = text("One fateful day, they aligned the stars to allow them to meet. The king was discussing life with a noble friend of his in the market when the viking princess entered. Their paths would have crossed yet again without interaction, but the gods had carefully laid out this moment. The noble that the king was talking to happened to also be the brother in law of the eldest viking daughter. The noble noticed the viking princess and decided to make an introduction. After the noble left, they continued their shopping, glancing at each other through the market stalls. The strands of fate spinning stronger and stronger with each passing. Humans tend to be unpredictable and resist their destinies. The viking princess abruptly left the market without talking with the king further.");
			t19 = space();
			p8 = element("p");
			t20 = text("The gods didn't like this. They filled her head with doubt and her heart with excitement. She knew she veered from their plans and decided to take her shot. She sent out messengers to find the king. They eventually tracked him down and arranged for them to meet again. A quick meeting at the tavern turned into a long conversations leading into the dead of night, yet somehow time felt like it was standing still. Everything was falling into place and the match felt like a perfect fit. But as a human himself, the king was stubborn and decided he wasn't ready for his destiny.");
			t21 = space();
			p9 = element("p");
			t22 = text("The gods didn't like this. One day as the king was at the theater watching the newest play, he took note of one of the characters. This character was a viking. He thought back to the viking princess and began to doubt his choices. The king decided to give it another chance. This time when they met, they were both ready to embrace their destinies.");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			claim_component(sectionheader.$$.fragment, section_nodes);
			t0 = claim_space(section_nodes);
			h1 = claim_element(section_nodes, "H1", {});
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Our Story");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(section_nodes);
			img = claim_element(section_nodes, "IMG", { alt: true, src: true });
			t3 = claim_space(section_nodes);
			div = claim_element(section_nodes, "DIV", {});
			var div_nodes = children(div);
			p0 = claim_element(div_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t4 = claim_text(p0_nodes, "Once upon a time there was a king and a viking princess. They did not know it, but the gods had set the table for them to be together.");
			p0_nodes.forEach(detach_dev);
			t5 = claim_space(div_nodes);
			p1 = claim_element(div_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t6 = claim_text(p1_nodes, "As the gods planned out their destiny, they couldn't quite agree on the path these two should take to get there. One of the gods set up their first meeting. As they were both looking to learn more about the world around them, they attended the Academy at the same time. The first god set it up so that they lived in close proximity. Once the other gods noticed, they intervened and kept them from meeting each other. It was not their time yet.");
			p1_nodes.forEach(detach_dev);
			t7 = claim_space(div_nodes);
			p2 = claim_element(div_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t8 = claim_text(p2_nodes, "Both the king and the viking princess went on to have families of their own. Another one of the gods thought that this was the time and moved them to the same town. Both of their families grew up at the same time. The king had two daughters and the viking princess had two sons and two daughters. The kids grew up with each other and became friends. The eldest viking son and the eldest princess of the king both pursued the bardic arts together. The youngest viking daughter and the youngest princess of the king battled for the raiders through volley after volley of balls flung by the invading armies. Through all of this the other gods decided it was not time for the king and the viking princess to meet, and kept them apart. It was not their time yet.");
			p2_nodes.forEach(detach_dev);
			t9 = claim_space(div_nodes);
			p3 = claim_element(div_nodes, "P", { class: true });
			var p3_nodes = children(p3);
			t10 = claim_text(p3_nodes, "A third god decided to make his move and arranged it so the viking princess joined the Parent Teacher Student Guild along with the Queen. Both were valiant champions in making sure the children of the kingdom were getting the appropriate education. Throughout their many meetings and public events, the other gods decided to intervene and not allow the king and viking princess to cross paths. It was not their time yet.");
			p3_nodes.forEach(detach_dev);
			t11 = claim_space(div_nodes);
			p4 = claim_element(div_nodes, "P", { class: true });
			var p4_nodes = children(p4);
			t12 = claim_text(p4_nodes, "The viking princess pursued her advancement in the Parent Teacher Student Guild with fervor and eventually reached the rank of Teacher of The Native Tongue. A fourth god decided this would be the perfect time to introduce the king and the viking princess. This god arranged for the king's youngest princess to become an apprentice of the viking princess. Alas, the other gods intervened yet again and did not let their paths cross. It was not their time yet.");
			p4_nodes.forEach(detach_dev);
			t13 = claim_space(div_nodes);
			p5 = claim_element(div_nodes, "P", { class: true });
			var p5_nodes = children(p5);
			t14 = claim_text(p5_nodes, "Living within the same kingdom, they were often in the market at the same time. Neither taking notice of each other. The gods had again decided to keep them away from each other. It was not their time yet.");
			p5_nodes.forEach(detach_dev);
			t15 = claim_space(div_nodes);
			p6 = claim_element(div_nodes, "P", { class: true });
			var p6_nodes = children(p6);
			t16 = claim_text(p6_nodes, "By this point in time, both had moved on from their previous relationships. While there were times where they were happy, they knew deep down that something was missing. Their sons and daughters had grown up and had families of their own. The gods finally decided it was time.");
			p6_nodes.forEach(detach_dev);
			t17 = claim_space(div_nodes);
			p7 = claim_element(div_nodes, "P", { class: true });
			var p7_nodes = children(p7);
			t18 = claim_text(p7_nodes, "One fateful day, they aligned the stars to allow them to meet. The king was discussing life with a noble friend of his in the market when the viking princess entered. Their paths would have crossed yet again without interaction, but the gods had carefully laid out this moment. The noble that the king was talking to happened to also be the brother in law of the eldest viking daughter. The noble noticed the viking princess and decided to make an introduction. After the noble left, they continued their shopping, glancing at each other through the market stalls. The strands of fate spinning stronger and stronger with each passing. Humans tend to be unpredictable and resist their destinies. The viking princess abruptly left the market without talking with the king further.");
			p7_nodes.forEach(detach_dev);
			t19 = claim_space(div_nodes);
			p8 = claim_element(div_nodes, "P", { class: true });
			var p8_nodes = children(p8);
			t20 = claim_text(p8_nodes, "The gods didn't like this. They filled her head with doubt and her heart with excitement. She knew she veered from their plans and decided to take her shot. She sent out messengers to find the king. They eventually tracked him down and arranged for them to meet again. A quick meeting at the tavern turned into a long conversations leading into the dead of night, yet somehow time felt like it was standing still. Everything was falling into place and the match felt like a perfect fit. But as a human himself, the king was stubborn and decided he wasn't ready for his destiny.");
			p8_nodes.forEach(detach_dev);
			t21 = claim_space(div_nodes);
			p9 = claim_element(div_nodes, "P", { class: true });
			var p9_nodes = children(p9);
			t22 = claim_text(p9_nodes, "The gods didn't like this. One day as the king was at the theater watching the newest play, he took note of one of the characters. This character was a viking. He thought back to the viking princess and began to doubt his choices. The king decided to give it another chance. This time when they met, they were both ready to embrace their destinies.");
			p9_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h1, file$4, 6, 4, 146);
			attr_dev(img, "alt", "Heading Decoration");
			if (img.src !== (img_src_value = "./HeadingDecorator.png")) attr_dev(img, "src", img_src_value);
			add_location(img, file$4, 7, 4, 170);
			attr_dev(p0, "class", "svelte-1ooxxts");
			add_location(p0, file$4, 9, 8, 251);
			attr_dev(p1, "class", "svelte-1ooxxts");
			add_location(p1, file$4, 10, 8, 402);
			attr_dev(p2, "class", "svelte-1ooxxts");
			add_location(p2, file$4, 11, 8, 862);
			attr_dev(p3, "class", "svelte-1ooxxts");
			add_location(p3, file$4, 12, 8, 1636);
			attr_dev(p4, "class", "svelte-1ooxxts");
			add_location(p4, file$4, 13, 8, 2073);
			attr_dev(p5, "class", "svelte-1ooxxts");
			add_location(p5, file$4, 14, 8, 2548);
			attr_dev(p6, "class", "svelte-1ooxxts");
			add_location(p6, file$4, 15, 8, 2770);
			attr_dev(p7, "class", "svelte-1ooxxts");
			add_location(p7, file$4, 16, 8, 3063);
			attr_dev(p8, "class", "svelte-1ooxxts");
			add_location(p8, file$4, 17, 8, 3858);
			attr_dev(p9, "class", "svelte-1ooxxts");
			add_location(p9, file$4, 18, 8, 4452);
			add_location(div, file$4, 8, 4, 236);
			attr_dev(section, "class", "story");
			add_location(section, file$4, 4, 0, 80);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			mount_component(sectionheader, section, null);
			append_dev(section, t0);
			append_dev(section, h1);
			append_dev(h1, t1);
			append_dev(section, t2);
			append_dev(section, img);
			append_dev(section, t3);
			append_dev(section, div);
			append_dev(div, p0);
			append_dev(p0, t4);
			append_dev(div, t5);
			append_dev(div, p1);
			append_dev(p1, t6);
			append_dev(div, t7);
			append_dev(div, p2);
			append_dev(p2, t8);
			append_dev(div, t9);
			append_dev(div, p3);
			append_dev(p3, t10);
			append_dev(div, t11);
			append_dev(div, p4);
			append_dev(p4, t12);
			append_dev(div, t13);
			append_dev(div, p5);
			append_dev(p5, t14);
			append_dev(div, t15);
			append_dev(div, p6);
			append_dev(p6, t16);
			append_dev(div, t17);
			append_dev(div, p7);
			append_dev(p7, t18);
			append_dev(div, t19);
			append_dev(div, p8);
			append_dev(p8, t20);
			append_dev(div, t21);
			append_dev(div, p9);
			append_dev(p9, t22);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(sectionheader.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(sectionheader.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			destroy_component(sectionheader);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$4.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$4($$self, $$props, $$invalidate) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Story> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Story", $$slots, []);
	$$self.$capture_state = () => ({ SectionHeader });
	return [];
}

class Story extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$4, create_fragment$4, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Story",
			options,
			id: create_fragment$4.name
		});
	}
}

/* src\routes\_components\Family.svelte generated by Svelte v3.23.2 */

const file$5 = "src\\routes\\_components\\Family.svelte";

function create_fragment$5(ctx) {
	let section;
	let h1;
	let t0;
	let t1;
	let img;
	let img_src_value;

	const block = {
		c: function create() {
			section = element("section");
			h1 = element("h1");
			t0 = text("Our Family");
			t1 = space();
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			h1 = claim_element(section_nodes, "H1", {});
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "Our Family");
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(section_nodes);
			img = claim_element(section_nodes, "IMG", { alt: true, src: true, class: true });
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h1, file$5, 1, 4, 30);
			attr_dev(img, "alt", "Heading Decoration");
			if (img.src !== (img_src_value = "./HeadingDecorator.png")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "class", "svelte-ij2qc1");
			add_location(img, file$5, 2, 4, 55);
			attr_dev(section, "class", "family");
			add_location(section, file$5, 0, 0, 0);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, h1);
			append_dev(h1, t0);
			append_dev(section, t1);
			append_dev(section, img);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$5.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$5($$self, $$props) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Family> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Family", $$slots, []);
	return [];
}

class Family extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$5, create_fragment$5, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Family",
			options,
			id: create_fragment$5.name
		});
	}
}

/* src\routes\_components\Toasts.svelte generated by Svelte v3.23.2 */
const file$6 = "src\\routes\\_components\\Toasts.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

// (17:8) {#each toasts as toast}
function create_each_block(ctx) {
	let p0;
	let t0_value = /*toast*/ ctx[1].toastContent + "";
	let t0;
	let t1;
	let p1;
	let t2;
	let t3_value = /*toast*/ ctx[1].toasterName + "";
	let t3;
	let t4;
	let t5_value = /*toast*/ ctx[1].toasterRelationship + "";
	let t5;
	let t6;

	let t7_value = (/*toast*/ ctx[1].toasterAssociation == true
	? "Bride"
	: "Groom") + "";

	let t7;

	const block = {
		c: function create() {
			p0 = element("p");
			t0 = text(t0_value);
			t1 = space();
			p1 = element("p");
			t2 = text("- ");
			t3 = text(t3_value);
			t4 = text(", ");
			t5 = text(t5_value);
			t6 = text(" of the ");
			t7 = text(t7_value);
			this.h();
		},
		l: function claim(nodes) {
			p0 = claim_element(nodes, "P", {});
			var p0_nodes = children(p0);
			t0 = claim_text(p0_nodes, t0_value);
			p0_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			p1 = claim_element(nodes, "P", {});
			var p1_nodes = children(p1);
			t2 = claim_text(p1_nodes, "- ");
			t3 = claim_text(p1_nodes, t3_value);
			t4 = claim_text(p1_nodes, ", ");
			t5 = claim_text(p1_nodes, t5_value);
			t6 = claim_text(p1_nodes, " of the ");
			t7 = claim_text(p1_nodes, t7_value);
			p1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(p0, file$6, 17, 12, 461);
			add_location(p1, file$6, 18, 12, 502);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p0, anchor);
			append_dev(p0, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, p1, anchor);
			append_dev(p1, t2);
			append_dev(p1, t3);
			append_dev(p1, t4);
			append_dev(p1, t5);
			append_dev(p1, t6);
			append_dev(p1, t7);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*toasts*/ 1 && t0_value !== (t0_value = /*toast*/ ctx[1].toastContent + "")) set_data_dev(t0, t0_value);
			if (dirty & /*toasts*/ 1 && t3_value !== (t3_value = /*toast*/ ctx[1].toasterName + "")) set_data_dev(t3, t3_value);
			if (dirty & /*toasts*/ 1 && t5_value !== (t5_value = /*toast*/ ctx[1].toasterRelationship + "")) set_data_dev(t5, t5_value);

			if (dirty & /*toasts*/ 1 && t7_value !== (t7_value = (/*toast*/ ctx[1].toasterAssociation == true
			? "Bride"
			: "Groom") + "")) set_data_dev(t7, t7_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(p1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(17:8) {#each toasts as toast}",
		ctx
	});

	return block;
}

function create_fragment$6(ctx) {
	let section;
	let h1;
	let t0;
	let t1;
	let img;
	let img_src_value;
	let t2;
	let div;
	let each_value = /*toasts*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			section = element("section");
			h1 = element("h1");
			t0 = text("Toasts");
			t1 = space();
			img = element("img");
			t2 = space();
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			h1 = claim_element(section_nodes, "H1", {});
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "Toasts");
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(section_nodes);
			img = claim_element(section_nodes, "IMG", { alt: true, src: true });
			t2 = claim_space(section_nodes);
			div = claim_element(section_nodes, "DIV", {});
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h1, file$6, 13, 4, 322);
			attr_dev(img, "alt", "Heading Decoration");
			if (img.src !== (img_src_value = "./HeadingDecorator.png")) attr_dev(img, "src", img_src_value);
			add_location(img, file$6, 14, 4, 343);
			add_location(div, file$6, 15, 4, 409);
			attr_dev(section, "class", "toasts");
			add_location(section, file$6, 12, 0, 292);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, h1);
			append_dev(h1, t0);
			append_dev(section, t1);
			append_dev(section, img);
			append_dev(section, t2);
			append_dev(section, div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*toasts*/ 1) {
				each_value = /*toasts*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$6.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$6($$self, $$props, $$invalidate) {
	
	let toasts = [];

	onMount(async () => {
		await fetch("api/toastController", { method: "GET" }).then(toasts => toasts.json()).then(toastsData => {
			$$invalidate(0, toasts = toastsData);
		});
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Toasts> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Toasts", $$slots, []);
	$$self.$capture_state = () => ({ onMount, toasts });

	$$self.$inject_state = $$props => {
		if ("toasts" in $$props) $$invalidate(0, toasts = $$props.toasts);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [toasts];
}

class Toasts extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$6, create_fragment$6, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Toasts",
			options,
			id: create_fragment$6.name
		});
	}
}

/* src\routes\_components\ProposeToastForm.svelte generated by Svelte v3.23.2 */

const file$7 = "src\\routes\\_components\\ProposeToastForm.svelte";

function create_fragment$7(ctx) {
	let section;
	let div5;
	let div0;
	let p;
	let t0;
	let t1;
	let input;
	let t2;
	let div4;
	let div1;
	let select0;
	let option0;
	let t3;
	let option1;
	let t4;
	let option2;
	let t5;
	let option3;
	let t6;
	let option4;
	let t7;
	let option5;
	let t8;
	let option6;
	let t9;
	let option7;
	let t10;
	let t11;
	let div2;
	let t12;
	let t13;
	let div3;
	let select1;
	let option8;
	let t14;
	let option9;
	let t15;
	let t16;
	let textarea;
	let t17;
	let br;
	let t18;
	let button;
	let t19;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			section = element("section");
			div5 = element("div");
			div0 = element("div");
			p = element("p");
			t0 = text("Propose a Toast...");
			t1 = space();
			input = element("input");
			t2 = space();
			div4 = element("div");
			div1 = element("div");
			select0 = element("select");
			option0 = element("option");
			t3 = text("Father");
			option1 = element("option");
			t4 = text("Mother");
			option2 = element("option");
			t5 = text("Brother");
			option3 = element("option");
			t6 = text("Sister");
			option4 = element("option");
			t7 = text("Son");
			option5 = element("option");
			t8 = text("Daughter");
			option6 = element("option");
			t9 = text("Relative");
			option7 = element("option");
			t10 = text("Friend");
			t11 = space();
			div2 = element("div");
			t12 = text("of the");
			t13 = space();
			div3 = element("div");
			select1 = element("select");
			option8 = element("option");
			t14 = text("Groom");
			option9 = element("option");
			t15 = text("Bride");
			t16 = space();
			textarea = element("textarea");
			t17 = space();
			br = element("br");
			t18 = space();
			button = element("button");
			t19 = text("Propose!");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div5 = claim_element(section_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div0 = claim_element(div5_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			p = claim_element(div0_nodes, "P", { class: true });
			var p_nodes = children(p);
			t0 = claim_text(p_nodes, "Propose a Toast...");
			p_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(div5_nodes);

			input = claim_element(div5_nodes, "INPUT", {
				type: true,
				placeholder: true,
				class: true
			});

			t2 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div1 = claim_element(div4_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			select0 = claim_element(div1_nodes, "SELECT", {});
			var select0_nodes = children(select0);
			option0 = claim_element(select0_nodes, "OPTION", { value: true });
			var option0_nodes = children(option0);
			t3 = claim_text(option0_nodes, "Father");
			option0_nodes.forEach(detach_dev);
			option1 = claim_element(select0_nodes, "OPTION", { value: true });
			var option1_nodes = children(option1);
			t4 = claim_text(option1_nodes, "Mother");
			option1_nodes.forEach(detach_dev);
			option2 = claim_element(select0_nodes, "OPTION", { value: true });
			var option2_nodes = children(option2);
			t5 = claim_text(option2_nodes, "Brother");
			option2_nodes.forEach(detach_dev);
			option3 = claim_element(select0_nodes, "OPTION", { value: true });
			var option3_nodes = children(option3);
			t6 = claim_text(option3_nodes, "Sister");
			option3_nodes.forEach(detach_dev);
			option4 = claim_element(select0_nodes, "OPTION", { value: true });
			var option4_nodes = children(option4);
			t7 = claim_text(option4_nodes, "Son");
			option4_nodes.forEach(detach_dev);
			option5 = claim_element(select0_nodes, "OPTION", { value: true });
			var option5_nodes = children(option5);
			t8 = claim_text(option5_nodes, "Daughter");
			option5_nodes.forEach(detach_dev);
			option6 = claim_element(select0_nodes, "OPTION", { value: true });
			var option6_nodes = children(option6);
			t9 = claim_text(option6_nodes, "Relative");
			option6_nodes.forEach(detach_dev);
			option7 = claim_element(select0_nodes, "OPTION", { value: true });
			var option7_nodes = children(option7);
			t10 = claim_text(option7_nodes, "Friend");
			option7_nodes.forEach(detach_dev);
			select0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t11 = claim_space(div4_nodes);
			div2 = claim_element(div4_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			t12 = claim_text(div2_nodes, "of the");
			div2_nodes.forEach(detach_dev);
			t13 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			select1 = claim_element(div3_nodes, "SELECT", {});
			var select1_nodes = children(select1);
			option8 = claim_element(select1_nodes, "OPTION", { value: true });
			var option8_nodes = children(option8);
			t14 = claim_text(option8_nodes, "Groom");
			option8_nodes.forEach(detach_dev);
			option9 = claim_element(select1_nodes, "OPTION", { value: true });
			var option9_nodes = children(option9);
			t15 = claim_text(option9_nodes, "Bride");
			option9_nodes.forEach(detach_dev);
			select1_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t16 = claim_space(div5_nodes);

			textarea = claim_element(div5_nodes, "TEXTAREA", {
				rows: true,
				placeholder: true,
				class: true
			});

			children(textarea).forEach(detach_dev);
			t17 = claim_space(div5_nodes);
			br = claim_element(div5_nodes, "BR", {});
			t18 = claim_space(div5_nodes);
			button = claim_element(div5_nodes, "BUTTON", {});
			var button_nodes = children(button);
			t19 = claim_text(button_nodes, "Propose!");
			button_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "heading svelte-jozr7y");
			add_location(p, file$7, 23, 12, 560);
			attr_dev(div0, "class", "header svelte-jozr7y");
			add_location(div0, file$7, 22, 8, 526);
			attr_dev(input, "type", "text");
			attr_dev(input, "placeholder", "Name");
			attr_dev(input, "class", "svelte-jozr7y");
			add_location(input, file$7, 25, 8, 627);
			option0.__value = "Father";
			option0.value = option0.__value;
			add_location(option0, file$7, 29, 16, 844);
			option1.__value = "Mother";
			option1.value = option1.__value;
			add_location(option1, file$7, 30, 16, 900);
			option2.__value = "Brother";
			option2.value = option2.__value;
			add_location(option2, file$7, 31, 16, 956);
			option3.__value = "Sister";
			option3.value = option3.__value;
			add_location(option3, file$7, 32, 16, 1014);
			option4.__value = "Son";
			option4.value = option4.__value;
			add_location(option4, file$7, 33, 16, 1070);
			option5.__value = "Daughter";
			option5.value = option5.__value;
			add_location(option5, file$7, 34, 16, 1120);
			option6.__value = "Relative";
			option6.value = option6.__value;
			add_location(option6, file$7, 35, 16, 1180);
			option7.__value = "Friend";
			option7.value = option7.__value;
			add_location(option7, file$7, 36, 16, 1240);
			if (/*toast*/ ctx[0].toasterRelationship === void 0) add_render_callback(() => /*select0_change_handler*/ ctx[3].call(select0));
			add_location(select0, file$7, 28, 12, 779);
			attr_dev(div1, "class", "selectstuff svelte-jozr7y");
			add_location(div1, file$7, 27, 8, 740);
			attr_dev(div2, "class", "selectstuff svelte-jozr7y");
			add_location(div2, file$7, 39, 8, 1327);
			option8.__value = "Groom";
			option8.value = option8.__value;
			add_location(option8, file$7, 42, 16, 1477);
			option9.__value = "Bride";
			option9.value = option9.__value;
			add_location(option9, file$7, 43, 16, 1531);
			if (/*toast*/ ctx[0].toasterAssociation === void 0) add_render_callback(() => /*select1_change_handler*/ ctx[4].call(select1));
			add_location(select1, file$7, 41, 12, 1413);
			attr_dev(div3, "class", "selectstuff svelte-jozr7y");
			add_location(div3, file$7, 40, 8, 1374);
			attr_dev(div4, "class", "container svelte-jozr7y");
			add_location(div4, file$7, 26, 8, 707);
			attr_dev(textarea, "rows", "7");
			attr_dev(textarea, "placeholder", "Message");
			attr_dev(textarea, "class", "svelte-jozr7y");
			add_location(textarea, file$7, 47, 8, 1632);
			add_location(br, file$7, 48, 8, 1726);
			add_location(button, file$7, 49, 8, 1741);
			attr_dev(div5, "class", "form svelte-jozr7y");
			add_location(div5, file$7, 21, 4, 498);
			attr_dev(section, "class", "propose svelte-jozr7y");
			add_location(section, file$7, 20, 0, 467);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, div5);
			append_dev(div5, div0);
			append_dev(div0, p);
			append_dev(p, t0);
			append_dev(div5, t1);
			append_dev(div5, input);
			set_input_value(input, /*toast*/ ctx[0].toasterName);
			append_dev(div5, t2);
			append_dev(div5, div4);
			append_dev(div4, div1);
			append_dev(div1, select0);
			append_dev(select0, option0);
			append_dev(option0, t3);
			append_dev(select0, option1);
			append_dev(option1, t4);
			append_dev(select0, option2);
			append_dev(option2, t5);
			append_dev(select0, option3);
			append_dev(option3, t6);
			append_dev(select0, option4);
			append_dev(option4, t7);
			append_dev(select0, option5);
			append_dev(option5, t8);
			append_dev(select0, option6);
			append_dev(option6, t9);
			append_dev(select0, option7);
			append_dev(option7, t10);
			select_option(select0, /*toast*/ ctx[0].toasterRelationship);
			append_dev(div4, t11);
			append_dev(div4, div2);
			append_dev(div2, t12);
			append_dev(div4, t13);
			append_dev(div4, div3);
			append_dev(div3, select1);
			append_dev(select1, option8);
			append_dev(option8, t14);
			append_dev(select1, option9);
			append_dev(option9, t15);
			select_option(select1, /*toast*/ ctx[0].toasterAssociation);
			append_dev(div5, t16);
			append_dev(div5, textarea);
			set_input_value(textarea, /*toast*/ ctx[0].toastContent);
			append_dev(div5, t17);
			append_dev(div5, br);
			append_dev(div5, t18);
			append_dev(div5, button);
			append_dev(button, t19);

			if (!mounted) {
				dispose = [
					listen_dev(input, "input", /*input_input_handler*/ ctx[2]),
					listen_dev(select0, "change", /*select0_change_handler*/ ctx[3]),
					listen_dev(select1, "change", /*select1_change_handler*/ ctx[4]),
					listen_dev(textarea, "input", /*textarea_input_handler*/ ctx[5]),
					listen_dev(button, "click", /*proposeToast*/ ctx[1], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*toast*/ 1 && input.value !== /*toast*/ ctx[0].toasterName) {
				set_input_value(input, /*toast*/ ctx[0].toasterName);
			}

			if (dirty & /*toast*/ 1) {
				select_option(select0, /*toast*/ ctx[0].toasterRelationship);
			}

			if (dirty & /*toast*/ 1) {
				select_option(select1, /*toast*/ ctx[0].toasterAssociation);
			}

			if (dirty & /*toast*/ 1) {
				set_input_value(textarea, /*toast*/ ctx[0].toastContent);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$7.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$7($$self, $$props, $$invalidate) {
	

	let toast = {
		toasterName: "",
		toasterRelationship: "",
		toasterAssociation: "",
		toastContent: ""
	};

	async function proposeToast() {
		if (toast.toasterName == "" || toast.toastContent == "") {
			return;
		}

		await fetch("/api/toastController", {
			method: "POST",
			body: JSON.stringify({ toast }),
			headers: { "Content-type": "application/json" }
		});
	}

	
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<ProposeToastForm> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("ProposeToastForm", $$slots, []);

	function input_input_handler() {
		toast.toasterName = this.value;
		$$invalidate(0, toast);
	}

	function select0_change_handler() {
		toast.toasterRelationship = select_value(this);
		$$invalidate(0, toast);
	}

	function select1_change_handler() {
		toast.toasterAssociation = select_value(this);
		$$invalidate(0, toast);
	}

	function textarea_input_handler() {
		toast.toastContent = this.value;
		$$invalidate(0, toast);
	}

	$$self.$capture_state = () => ({ toast, proposeToast });

	$$self.$inject_state = $$props => {
		if ("toast" in $$props) $$invalidate(0, toast = $$props.toast);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		toast,
		proposeToast,
		input_input_handler,
		select0_change_handler,
		select1_change_handler,
		textarea_input_handler
	];
}

class ProposeToastForm extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$7, create_fragment$7, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ProposeToastForm",
			options,
			id: create_fragment$7.name
		});
	}
}

/* src\routes\index.svelte generated by Svelte v3.23.2 */

function create_fragment$8(ctx) {
	let sectionheader;
	let t0;
	let jumbotron;
	let t1;
	let story;
	let t2;
	let family;
	let t3;
	let toasts;
	let t4;
	let proposetoastform;
	let current;
	sectionheader = new SectionHeader({ props: { isNav: true }, $$inline: true });
	jumbotron = new Jumbotron({ $$inline: true });
	story = new Story({ $$inline: true });
	family = new Family({ $$inline: true });
	toasts = new Toasts({ $$inline: true });
	proposetoastform = new ProposeToastForm({ $$inline: true });

	const block = {
		c: function create() {
			create_component(sectionheader.$$.fragment);
			t0 = space();
			create_component(jumbotron.$$.fragment);
			t1 = space();
			create_component(story.$$.fragment);
			t2 = space();
			create_component(family.$$.fragment);
			t3 = space();
			create_component(toasts.$$.fragment);
			t4 = space();
			create_component(proposetoastform.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(sectionheader.$$.fragment, nodes);
			t0 = claim_space(nodes);
			claim_component(jumbotron.$$.fragment, nodes);
			t1 = claim_space(nodes);
			claim_component(story.$$.fragment, nodes);
			t2 = claim_space(nodes);
			claim_component(family.$$.fragment, nodes);
			t3 = claim_space(nodes);
			claim_component(toasts.$$.fragment, nodes);
			t4 = claim_space(nodes);
			claim_component(proposetoastform.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(sectionheader, target, anchor);
			insert_dev(target, t0, anchor);
			mount_component(jumbotron, target, anchor);
			insert_dev(target, t1, anchor);
			mount_component(story, target, anchor);
			insert_dev(target, t2, anchor);
			mount_component(family, target, anchor);
			insert_dev(target, t3, anchor);
			mount_component(toasts, target, anchor);
			insert_dev(target, t4, anchor);
			mount_component(proposetoastform, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(sectionheader.$$.fragment, local);
			transition_in(jumbotron.$$.fragment, local);
			transition_in(story.$$.fragment, local);
			transition_in(family.$$.fragment, local);
			transition_in(toasts.$$.fragment, local);
			transition_in(proposetoastform.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(sectionheader.$$.fragment, local);
			transition_out(jumbotron.$$.fragment, local);
			transition_out(story.$$.fragment, local);
			transition_out(family.$$.fragment, local);
			transition_out(toasts.$$.fragment, local);
			transition_out(proposetoastform.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(sectionheader, detaching);
			if (detaching) detach_dev(t0);
			destroy_component(jumbotron, detaching);
			if (detaching) detach_dev(t1);
			destroy_component(story, detaching);
			if (detaching) detach_dev(t2);
			destroy_component(family, detaching);
			if (detaching) detach_dev(t3);
			destroy_component(toasts, detaching);
			if (detaching) detach_dev(t4);
			destroy_component(proposetoastform, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$8.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$8($$self, $$props, $$invalidate) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Routes", $$slots, []);

	$$self.$capture_state = () => ({
		SectionHeader,
		Jumbotron,
		Story,
		Family,
		Toasts,
		ProposeToastForm
	});

	return [];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$8, create_fragment$8, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment$8.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
