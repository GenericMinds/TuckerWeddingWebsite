import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, c as claim_element, a as children, b as detach_dev, f as attr_dev, g as add_location, h as insert_dev, n as noop, j as create_component, k as space, t as text, l as claim_component, m as claim_space, o as claim_text, p as mount_component, q as append_dev, r as transition_in, u as transition_out, w as destroy_component, x as create_slot, y as createEventDispatcher, z as onMount, A as listen_dev, B as update_slot, C as run_all, D as validate_each_argument, E as destroy_each, F as null_to_empty, G as group_outros, H as check_outros, I as binding_callbacks, J as svg_element, K as assign, L as get_spread_update, M as get_spread_object, N as set_style, O as empty, P as add_render_callback, Q as set_input_value, R as select_option, T as prop_dev, U as select_value, V as listen, W as bubble, X as compute_rest_props, Y as exclude_internal_props, Z as current_component, _ as set_attributes, $ as toggle_class, a0 as action_destroyer, a1 as set_svg_attributes, a2 as xlink_attr, a3 as set_data_dev, a4 as is_function, a5 as identity, a6 as create_bidirectional_transition, a7 as bind, a8 as add_flush_callback, a9 as globals, aa as onDestroy, ab as beforeUpdate, ac as tick, ad as now, ae as loop } from './client.f6b0d9a6.js';

/* src\routes\_components\SectionHeader.svelte generated by Svelte v3.23.2 */

const file = "src\\routes\\_components\\SectionHeader.svelte";

function create_fragment(ctx) {
	let div;

	const block = {
		c: function create() {
			div = element("div");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "svelte-oyalow");
			add_location(div, file, 0, 0, 0);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<SectionHeader> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("SectionHeader", $$slots, []);
	return [];
}

class SectionHeader extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "SectionHeader",
			options,
			id: create_fragment.name
		});
	}
}

/* src\routes\_components\Jumbotron.svelte generated by Svelte v3.23.2 */

const file$1 = "src\\routes\\_components\\Jumbotron.svelte";

function create_fragment$1(ctx) {
	let img;
	let img_src_value;

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", { src: true, alt: true, class: true });
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "LisaTimMainPhoto.jpg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "Lisa and Tim posing during a hike in the woods.");
			attr_dev(img, "class", "svelte-ypvhaw");
			add_location(img, file$1, 0, 0, 0);
		},
		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(img);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Jumbotron> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Jumbotron", $$slots, []);
	return [];
}

class Jumbotron extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Jumbotron",
			options,
			id: create_fragment$1.name
		});
	}
}

/* src\routes\_components\Story.svelte generated by Svelte v3.23.2 */
const file$2 = "src\\routes\\_components\\Story.svelte";

function create_fragment$2(ctx) {
	let section;
	let sectionheader;
	let t0;
	let h1;
	let t1;
	let t2;
	let img;
	let img_src_value;
	let t3;
	let div;
	let p0;
	let t4;
	let t5;
	let p1;
	let t6;
	let t7;
	let p2;
	let t8;
	let t9;
	let p3;
	let t10;
	let t11;
	let p4;
	let t12;
	let t13;
	let p5;
	let t14;
	let t15;
	let p6;
	let t16;
	let t17;
	let p7;
	let t18;
	let t19;
	let p8;
	let t20;
	let t21;
	let p9;
	let t22;
	let current;
	sectionheader = new SectionHeader({ props: { isNav: false }, $$inline: true });

	const block = {
		c: function create() {
			section = element("section");
			create_component(sectionheader.$$.fragment);
			t0 = space();
			h1 = element("h1");
			t1 = text("Our Story");
			t2 = space();
			img = element("img");
			t3 = space();
			div = element("div");
			p0 = element("p");
			t4 = text("Once upon a time there was a king and a viking princess. They did not know it, but the gods had set the table for them to be together.");
			t5 = space();
			p1 = element("p");
			t6 = text("As the gods planned out their destiny, they couldn't quite agree on the path these two should take to get there. One of the gods set up their first meeting. As they were both looking to learn more about the world around them, they attended the Academy at the same time. The first god set it up so that they lived in close proximity. Once the other gods noticed, they intervened and kept them from meeting each other. It was not their time yet.");
			t7 = space();
			p2 = element("p");
			t8 = text("Both the king and the viking princess went on to have families of their own. Another one of the gods thought that this was the time and moved them to the same town. Both of their families grew up at the same time. The king had two daughters and the viking princess had two sons and two daughters. The kids grew up with each other and became friends. The eldest viking son and the eldest princess of the king both pursued the bardic arts together. The youngest viking daughter and the youngest princess of the king battled for the raiders through volley after volley of balls flung by the invading armies. Through all of this the other gods decided it was not time for the king and the viking princess to meet, and kept them apart. It was not their time yet.");
			t9 = space();
			p3 = element("p");
			t10 = text("A third god decided to make his move and arranged it so the viking princess joined the Parent Teacher Student Guild along with the Queen. Both were valiant champions in making sure the children of the kingdom were getting the appropriate education. Throughout their many meetings and public events, the other gods decided to intervene and not allow the king and viking princess to cross paths. It was not their time yet.");
			t11 = space();
			p4 = element("p");
			t12 = text("The viking princess pursued her advancement in the Parent Teacher Student Guild with fervor and eventually reached the rank of Teacher of The Native Tongue. A fourth god decided this would be the perfect time to introduce the king and the viking princess. This god arranged for the king's youngest princess to become an apprentice of the viking princess. Alas, the other gods intervened yet again and did not let their paths cross. It was not their time yet.");
			t13 = space();
			p5 = element("p");
			t14 = text("Living within the same kingdom, they were often in the market at the same time. Neither taking notice of each other. The gods had again decided to keep them away from each other. It was not their time yet.");
			t15 = space();
			p6 = element("p");
			t16 = text("By this point in time, both had moved on from their previous relationships. While there were times where they were happy, they knew deep down that something was missing. Their sons and daughters had grown up and had families of their own. The gods finally decided it was time.");
			t17 = space();
			p7 = element("p");
			t18 = text("One fateful day, they aligned the stars to allow them to meet. The king was discussing life with a noble friend of his in the market when the viking princess entered. Their paths would have crossed yet again without interaction, but the gods had carefully laid out this moment. The noble that the king was talking to happened to also be the brother in law of the eldest viking daughter. The noble noticed the viking princess and decided to make an introduction. After the noble left, they continued their shopping, glancing at each other through the market stalls. The strands of fate spinning stronger and stronger with each passing. Humans tend to be unpredictable and resist their destinies. The viking princess abruptly left the market without talking with the king further.");
			t19 = space();
			p8 = element("p");
			t20 = text("The gods didn't like this. They filled her head with doubt and her heart with excitement. She knew she veered from their plans and decided to take her shot. She sent out messengers to find the king. They eventually tracked him down and arranged for them to meet again. A quick meeting at the tavern turned into a long conversations leading into the dead of night, yet somehow time felt like it was standing still. Everything was falling into place and the match felt like a perfect fit. But as a human himself, the king was stubborn and decided he wasn't ready for his destiny.");
			t21 = space();
			p9 = element("p");
			t22 = text("The gods didn't like this. One day as the king was at the theater watching the newest play, he took note of one of the characters. This character was a viking. He thought back to the viking princess and began to doubt his choices. The king decided to give it another chance. This time when they met, they were both ready to embrace their destinies.");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			claim_component(sectionheader.$$.fragment, section_nodes);
			t0 = claim_space(section_nodes);
			h1 = claim_element(section_nodes, "H1", {});
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Our Story");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(section_nodes);
			img = claim_element(section_nodes, "IMG", { alt: true, src: true });
			t3 = claim_space(section_nodes);
			div = claim_element(section_nodes, "DIV", {});
			var div_nodes = children(div);
			p0 = claim_element(div_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t4 = claim_text(p0_nodes, "Once upon a time there was a king and a viking princess. They did not know it, but the gods had set the table for them to be together.");
			p0_nodes.forEach(detach_dev);
			t5 = claim_space(div_nodes);
			p1 = claim_element(div_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t6 = claim_text(p1_nodes, "As the gods planned out their destiny, they couldn't quite agree on the path these two should take to get there. One of the gods set up their first meeting. As they were both looking to learn more about the world around them, they attended the Academy at the same time. The first god set it up so that they lived in close proximity. Once the other gods noticed, they intervened and kept them from meeting each other. It was not their time yet.");
			p1_nodes.forEach(detach_dev);
			t7 = claim_space(div_nodes);
			p2 = claim_element(div_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t8 = claim_text(p2_nodes, "Both the king and the viking princess went on to have families of their own. Another one of the gods thought that this was the time and moved them to the same town. Both of their families grew up at the same time. The king had two daughters and the viking princess had two sons and two daughters. The kids grew up with each other and became friends. The eldest viking son and the eldest princess of the king both pursued the bardic arts together. The youngest viking daughter and the youngest princess of the king battled for the raiders through volley after volley of balls flung by the invading armies. Through all of this the other gods decided it was not time for the king and the viking princess to meet, and kept them apart. It was not their time yet.");
			p2_nodes.forEach(detach_dev);
			t9 = claim_space(div_nodes);
			p3 = claim_element(div_nodes, "P", { class: true });
			var p3_nodes = children(p3);
			t10 = claim_text(p3_nodes, "A third god decided to make his move and arranged it so the viking princess joined the Parent Teacher Student Guild along with the Queen. Both were valiant champions in making sure the children of the kingdom were getting the appropriate education. Throughout their many meetings and public events, the other gods decided to intervene and not allow the king and viking princess to cross paths. It was not their time yet.");
			p3_nodes.forEach(detach_dev);
			t11 = claim_space(div_nodes);
			p4 = claim_element(div_nodes, "P", { class: true });
			var p4_nodes = children(p4);
			t12 = claim_text(p4_nodes, "The viking princess pursued her advancement in the Parent Teacher Student Guild with fervor and eventually reached the rank of Teacher of The Native Tongue. A fourth god decided this would be the perfect time to introduce the king and the viking princess. This god arranged for the king's youngest princess to become an apprentice of the viking princess. Alas, the other gods intervened yet again and did not let their paths cross. It was not their time yet.");
			p4_nodes.forEach(detach_dev);
			t13 = claim_space(div_nodes);
			p5 = claim_element(div_nodes, "P", { class: true });
			var p5_nodes = children(p5);
			t14 = claim_text(p5_nodes, "Living within the same kingdom, they were often in the market at the same time. Neither taking notice of each other. The gods had again decided to keep them away from each other. It was not their time yet.");
			p5_nodes.forEach(detach_dev);
			t15 = claim_space(div_nodes);
			p6 = claim_element(div_nodes, "P", { class: true });
			var p6_nodes = children(p6);
			t16 = claim_text(p6_nodes, "By this point in time, both had moved on from their previous relationships. While there were times where they were happy, they knew deep down that something was missing. Their sons and daughters had grown up and had families of their own. The gods finally decided it was time.");
			p6_nodes.forEach(detach_dev);
			t17 = claim_space(div_nodes);
			p7 = claim_element(div_nodes, "P", { class: true });
			var p7_nodes = children(p7);
			t18 = claim_text(p7_nodes, "One fateful day, they aligned the stars to allow them to meet. The king was discussing life with a noble friend of his in the market when the viking princess entered. Their paths would have crossed yet again without interaction, but the gods had carefully laid out this moment. The noble that the king was talking to happened to also be the brother in law of the eldest viking daughter. The noble noticed the viking princess and decided to make an introduction. After the noble left, they continued their shopping, glancing at each other through the market stalls. The strands of fate spinning stronger and stronger with each passing. Humans tend to be unpredictable and resist their destinies. The viking princess abruptly left the market without talking with the king further.");
			p7_nodes.forEach(detach_dev);
			t19 = claim_space(div_nodes);
			p8 = claim_element(div_nodes, "P", { class: true });
			var p8_nodes = children(p8);
			t20 = claim_text(p8_nodes, "The gods didn't like this. They filled her head with doubt and her heart with excitement. She knew she veered from their plans and decided to take her shot. She sent out messengers to find the king. They eventually tracked him down and arranged for them to meet again. A quick meeting at the tavern turned into a long conversations leading into the dead of night, yet somehow time felt like it was standing still. Everything was falling into place and the match felt like a perfect fit. But as a human himself, the king was stubborn and decided he wasn't ready for his destiny.");
			p8_nodes.forEach(detach_dev);
			t21 = claim_space(div_nodes);
			p9 = claim_element(div_nodes, "P", { class: true });
			var p9_nodes = children(p9);
			t22 = claim_text(p9_nodes, "The gods didn't like this. One day as the king was at the theater watching the newest play, he took note of one of the characters. This character was a viking. He thought back to the viking princess and began to doubt his choices. The king decided to give it another chance. This time when they met, they were both ready to embrace their destinies.");
			p9_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h1, file$2, 6, 4, 146);
			attr_dev(img, "alt", "Heading Decoration");
			if (img.src !== (img_src_value = "./HeadingDecorator.png")) attr_dev(img, "src", img_src_value);
			add_location(img, file$2, 7, 4, 170);
			attr_dev(p0, "class", "svelte-1ooxxts");
			add_location(p0, file$2, 9, 8, 251);
			attr_dev(p1, "class", "svelte-1ooxxts");
			add_location(p1, file$2, 10, 8, 402);
			attr_dev(p2, "class", "svelte-1ooxxts");
			add_location(p2, file$2, 11, 8, 862);
			attr_dev(p3, "class", "svelte-1ooxxts");
			add_location(p3, file$2, 12, 8, 1636);
			attr_dev(p4, "class", "svelte-1ooxxts");
			add_location(p4, file$2, 13, 8, 2073);
			attr_dev(p5, "class", "svelte-1ooxxts");
			add_location(p5, file$2, 14, 8, 2548);
			attr_dev(p6, "class", "svelte-1ooxxts");
			add_location(p6, file$2, 15, 8, 2770);
			attr_dev(p7, "class", "svelte-1ooxxts");
			add_location(p7, file$2, 16, 8, 3063);
			attr_dev(p8, "class", "svelte-1ooxxts");
			add_location(p8, file$2, 17, 8, 3858);
			attr_dev(p9, "class", "svelte-1ooxxts");
			add_location(p9, file$2, 18, 8, 4452);
			add_location(div, file$2, 8, 4, 236);
			attr_dev(section, "class", "story");
			add_location(section, file$2, 4, 0, 80);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			mount_component(sectionheader, section, null);
			append_dev(section, t0);
			append_dev(section, h1);
			append_dev(h1, t1);
			append_dev(section, t2);
			append_dev(section, img);
			append_dev(section, t3);
			append_dev(section, div);
			append_dev(div, p0);
			append_dev(p0, t4);
			append_dev(div, t5);
			append_dev(div, p1);
			append_dev(p1, t6);
			append_dev(div, t7);
			append_dev(div, p2);
			append_dev(p2, t8);
			append_dev(div, t9);
			append_dev(div, p3);
			append_dev(p3, t10);
			append_dev(div, t11);
			append_dev(div, p4);
			append_dev(p4, t12);
			append_dev(div, t13);
			append_dev(div, p5);
			append_dev(p5, t14);
			append_dev(div, t15);
			append_dev(div, p6);
			append_dev(p6, t16);
			append_dev(div, t17);
			append_dev(div, p7);
			append_dev(p7, t18);
			append_dev(div, t19);
			append_dev(div, p8);
			append_dev(p8, t20);
			append_dev(div, t21);
			append_dev(div, p9);
			append_dev(p9, t22);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(sectionheader.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(sectionheader.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			destroy_component(sectionheader);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Story> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Story", $$slots, []);
	$$self.$capture_state = () => ({ SectionHeader });
	return [];
}

class Story extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Story",
			options,
			id: create_fragment$2.name
		});
	}
}

/* src\routes\_components\Blended.svelte generated by Svelte v3.23.2 */

const file$3 = "src\\routes\\_components\\Blended.svelte";

function create_fragment$3(ctx) {
	let section;
	let h1;
	let t0;
	let t1;
	let img;
	let img_src_value;
	let t2;
	let div;
	let p0;
	let t3;
	let t4;
	let p1;
	let t5;
	let t6;
	let p2;
	let t7;
	let t8;
	let p3;
	let t9;
	let t10;
	let br0;
	let t11;
	let p4;
	let t12;
	let t13;
	let p5;
	let t14;
	let t15;
	let p6;
	let t16;
	let t17;
	let p7;
	let t18;
	let t19;
	let br1;
	let t20;
	let p8;
	let t21;
	let t22;
	let p9;
	let t23;
	let t24;
	let p10;
	let t25;
	let t26;
	let p11;
	let t27;
	let t28;
	let br2;
	let t29;
	let p12;
	let t30;
	let t31;
	let p13;
	let t32;
	let t33;
	let p14;
	let t34;
	let t35;
	let p15;
	let t36;
	let t37;
	let br3;
	let t38;
	let p16;
	let t39;
	let t40;
	let p17;
	let t41;
	let t42;
	let p18;
	let t43;
	let t44;
	let p19;
	let t45;

	const block = {
		c: function create() {
			section = element("section");
			h1 = element("h1");
			t0 = text("Blended Family Recipe");
			t1 = space();
			img = element("img");
			t2 = space();
			div = element("div");
			p0 = element("p");
			t3 = text("Put a good and honest man");
			t4 = space();
			p1 = element("p");
			t5 = text("into a mixing pan.");
			t6 = space();
			p2 = element("p");
			t7 = text("Combine one loving woman");
			t8 = space();
			p3 = element("p");
			t9 = text("and blend well with the man.");
			t10 = space();
			br0 = element("br");
			t11 = space();
			p4 = element("p");
			t12 = text("Add the children of the man,");
			t13 = space();
			p5 = element("p");
			t14 = text("and the woman's children too.");
			t15 = space();
			p6 = element("p");
			t16 = text("Mix them all together");
			t17 = space();
			p7 = element("p");
			t18 = text("as you would a pot of stew.");
			t19 = space();
			br1 = element("br");
			t20 = space();
			p8 = element("p");
			t21 = text("Slowly stir in patience.");
			t22 = space();
			p9 = element("p");
			t23 = text("It will really help a lot.");
			t24 = space();
			p10 = element("p");
			t25 = text("If you're not sure how much,");
			t26 = space();
			p11 = element("p");
			t27 = text("throw in all you've got.");
			t28 = space();
			br2 = element("br");
			t29 = space();
			p12 = element("p");
			t30 = text("Then, six cups of sweetener");
			t31 = space();
			p13 = element("p");
			t32 = text("and fourteen cups of love.");
			t33 = space();
			p14 = element("p");
			t34 = text("Sprinkle in some blessings");
			t35 = space();
			p15 = element("p");
			t36 = text("from the heavens high above.");
			t37 = space();
			br3 = element("br");
			t38 = space();
			p16 = element("p");
			t39 = text("When the mixture is complete,");
			t40 = space();
			p17 = element("p");
			t41 = text("with great joy you will see...");
			t42 = space();
			p18 = element("p");
			t43 = text("creation of our awesome,");
			t44 = space();
			p19 = element("p");
			t45 = text("loving blended family.");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			h1 = claim_element(section_nodes, "H1", {});
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "Blended Family Recipe");
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(section_nodes);
			img = claim_element(section_nodes, "IMG", { alt: true, src: true });
			t2 = claim_space(section_nodes);
			div = claim_element(section_nodes, "DIV", {});
			var div_nodes = children(div);
			p0 = claim_element(div_nodes, "P", {});
			var p0_nodes = children(p0);
			t3 = claim_text(p0_nodes, "Put a good and honest man");
			p0_nodes.forEach(detach_dev);
			t4 = claim_space(div_nodes);
			p1 = claim_element(div_nodes, "P", {});
			var p1_nodes = children(p1);
			t5 = claim_text(p1_nodes, "into a mixing pan.");
			p1_nodes.forEach(detach_dev);
			t6 = claim_space(div_nodes);
			p2 = claim_element(div_nodes, "P", {});
			var p2_nodes = children(p2);
			t7 = claim_text(p2_nodes, "Combine one loving woman");
			p2_nodes.forEach(detach_dev);
			t8 = claim_space(div_nodes);
			p3 = claim_element(div_nodes, "P", {});
			var p3_nodes = children(p3);
			t9 = claim_text(p3_nodes, "and blend well with the man.");
			p3_nodes.forEach(detach_dev);
			t10 = claim_space(div_nodes);
			br0 = claim_element(div_nodes, "BR", {});
			t11 = claim_space(div_nodes);
			p4 = claim_element(div_nodes, "P", {});
			var p4_nodes = children(p4);
			t12 = claim_text(p4_nodes, "Add the children of the man,");
			p4_nodes.forEach(detach_dev);
			t13 = claim_space(div_nodes);
			p5 = claim_element(div_nodes, "P", {});
			var p5_nodes = children(p5);
			t14 = claim_text(p5_nodes, "and the woman's children too.");
			p5_nodes.forEach(detach_dev);
			t15 = claim_space(div_nodes);
			p6 = claim_element(div_nodes, "P", {});
			var p6_nodes = children(p6);
			t16 = claim_text(p6_nodes, "Mix them all together");
			p6_nodes.forEach(detach_dev);
			t17 = claim_space(div_nodes);
			p7 = claim_element(div_nodes, "P", {});
			var p7_nodes = children(p7);
			t18 = claim_text(p7_nodes, "as you would a pot of stew.");
			p7_nodes.forEach(detach_dev);
			t19 = claim_space(div_nodes);
			br1 = claim_element(div_nodes, "BR", {});
			t20 = claim_space(div_nodes);
			p8 = claim_element(div_nodes, "P", {});
			var p8_nodes = children(p8);
			t21 = claim_text(p8_nodes, "Slowly stir in patience.");
			p8_nodes.forEach(detach_dev);
			t22 = claim_space(div_nodes);
			p9 = claim_element(div_nodes, "P", {});
			var p9_nodes = children(p9);
			t23 = claim_text(p9_nodes, "It will really help a lot.");
			p9_nodes.forEach(detach_dev);
			t24 = claim_space(div_nodes);
			p10 = claim_element(div_nodes, "P", {});
			var p10_nodes = children(p10);
			t25 = claim_text(p10_nodes, "If you're not sure how much,");
			p10_nodes.forEach(detach_dev);
			t26 = claim_space(div_nodes);
			p11 = claim_element(div_nodes, "P", {});
			var p11_nodes = children(p11);
			t27 = claim_text(p11_nodes, "throw in all you've got.");
			p11_nodes.forEach(detach_dev);
			t28 = claim_space(div_nodes);
			br2 = claim_element(div_nodes, "BR", {});
			t29 = claim_space(div_nodes);
			p12 = claim_element(div_nodes, "P", {});
			var p12_nodes = children(p12);
			t30 = claim_text(p12_nodes, "Then, six cups of sweetener");
			p12_nodes.forEach(detach_dev);
			t31 = claim_space(div_nodes);
			p13 = claim_element(div_nodes, "P", {});
			var p13_nodes = children(p13);
			t32 = claim_text(p13_nodes, "and fourteen cups of love.");
			p13_nodes.forEach(detach_dev);
			t33 = claim_space(div_nodes);
			p14 = claim_element(div_nodes, "P", {});
			var p14_nodes = children(p14);
			t34 = claim_text(p14_nodes, "Sprinkle in some blessings");
			p14_nodes.forEach(detach_dev);
			t35 = claim_space(div_nodes);
			p15 = claim_element(div_nodes, "P", {});
			var p15_nodes = children(p15);
			t36 = claim_text(p15_nodes, "from the heavens high above.");
			p15_nodes.forEach(detach_dev);
			t37 = claim_space(div_nodes);
			br3 = claim_element(div_nodes, "BR", {});
			t38 = claim_space(div_nodes);
			p16 = claim_element(div_nodes, "P", {});
			var p16_nodes = children(p16);
			t39 = claim_text(p16_nodes, "When the mixture is complete,");
			p16_nodes.forEach(detach_dev);
			t40 = claim_space(div_nodes);
			p17 = claim_element(div_nodes, "P", {});
			var p17_nodes = children(p17);
			t41 = claim_text(p17_nodes, "with great joy you will see...");
			p17_nodes.forEach(detach_dev);
			t42 = claim_space(div_nodes);
			p18 = claim_element(div_nodes, "P", {});
			var p18_nodes = children(p18);
			t43 = claim_text(p18_nodes, "creation of our awesome,");
			p18_nodes.forEach(detach_dev);
			t44 = claim_space(div_nodes);
			p19 = claim_element(div_nodes, "P", {});
			var p19_nodes = children(p19);
			t45 = claim_text(p19_nodes, "loving blended family.");
			p19_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h1, file$3, 1, 4, 31);
			attr_dev(img, "alt", "Heading Decoration");
			if (img.src !== (img_src_value = "./HeadingDecorator.png")) attr_dev(img, "src", img_src_value);
			add_location(img, file$3, 2, 4, 67);
			add_location(p0, file$3, 4, 8, 148);
			add_location(p1, file$3, 5, 8, 190);
			add_location(p2, file$3, 6, 8, 225);
			add_location(p3, file$3, 7, 8, 266);
			add_location(br0, file$3, 8, 8, 311);
			add_location(p4, file$3, 9, 8, 326);
			add_location(p5, file$3, 10, 8, 371);
			add_location(p6, file$3, 11, 8, 417);
			add_location(p7, file$3, 12, 8, 455);
			add_location(br1, file$3, 13, 8, 499);
			add_location(p8, file$3, 14, 8, 514);
			add_location(p9, file$3, 15, 8, 555);
			add_location(p10, file$3, 16, 8, 598);
			add_location(p11, file$3, 17, 8, 643);
			add_location(br2, file$3, 18, 8, 684);
			add_location(p12, file$3, 19, 8, 699);
			add_location(p13, file$3, 20, 8, 743);
			add_location(p14, file$3, 21, 8, 786);
			add_location(p15, file$3, 22, 8, 829);
			add_location(br3, file$3, 23, 8, 874);
			add_location(p16, file$3, 24, 8, 889);
			add_location(p17, file$3, 25, 8, 935);
			add_location(p18, file$3, 26, 8, 982);
			add_location(p19, file$3, 27, 8, 1023);
			add_location(div, file$3, 3, 4, 133);
			attr_dev(section, "class", "blended");
			add_location(section, file$3, 0, 0, 0);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, h1);
			append_dev(h1, t0);
			append_dev(section, t1);
			append_dev(section, img);
			append_dev(section, t2);
			append_dev(section, div);
			append_dev(div, p0);
			append_dev(p0, t3);
			append_dev(div, t4);
			append_dev(div, p1);
			append_dev(p1, t5);
			append_dev(div, t6);
			append_dev(div, p2);
			append_dev(p2, t7);
			append_dev(div, t8);
			append_dev(div, p3);
			append_dev(p3, t9);
			append_dev(div, t10);
			append_dev(div, br0);
			append_dev(div, t11);
			append_dev(div, p4);
			append_dev(p4, t12);
			append_dev(div, t13);
			append_dev(div, p5);
			append_dev(p5, t14);
			append_dev(div, t15);
			append_dev(div, p6);
			append_dev(p6, t16);
			append_dev(div, t17);
			append_dev(div, p7);
			append_dev(p7, t18);
			append_dev(div, t19);
			append_dev(div, br1);
			append_dev(div, t20);
			append_dev(div, p8);
			append_dev(p8, t21);
			append_dev(div, t22);
			append_dev(div, p9);
			append_dev(p9, t23);
			append_dev(div, t24);
			append_dev(div, p10);
			append_dev(p10, t25);
			append_dev(div, t26);
			append_dev(div, p11);
			append_dev(p11, t27);
			append_dev(div, t28);
			append_dev(div, br2);
			append_dev(div, t29);
			append_dev(div, p12);
			append_dev(p12, t30);
			append_dev(div, t31);
			append_dev(div, p13);
			append_dev(p13, t32);
			append_dev(div, t33);
			append_dev(div, p14);
			append_dev(p14, t34);
			append_dev(div, t35);
			append_dev(div, p15);
			append_dev(p15, t36);
			append_dev(div, t37);
			append_dev(div, br3);
			append_dev(div, t38);
			append_dev(div, p16);
			append_dev(p16, t39);
			append_dev(div, t40);
			append_dev(div, p17);
			append_dev(p17, t41);
			append_dev(div, t42);
			append_dev(div, p18);
			append_dev(p18, t43);
			append_dev(div, t44);
			append_dev(div, p19);
			append_dev(p19, t45);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$3($$self, $$props) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Blended> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Blended", $$slots, []);
	return [];
}

class Blended extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Blended",
			options,
			id: create_fragment$3.name
		});
	}
}

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function unwrapExports (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, basedir, module) {
	return module = {
	  path: basedir,
	  exports: {},
	  require: function (path, base) {
      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
    }
	}, fn(module, module.exports), module.exports;
}

function commonjsRequire () {
	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
}

var siema_min = createCommonjsModule(function (module, exports) {
!function(e,t){module.exports=t();}("undefined"!=typeof self?self:commonjsGlobal,function(){return function(e){function t(r){if(i[r])return i[r].exports;var n=i[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,t),n.l=!0,n.exports}var i={};return t.m=e,t.c=i,t.d=function(e,i,r){t.o(e,i)||Object.defineProperty(e,i,{configurable:!1,enumerable:!0,get:r});},t.n=function(e){var i=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(i,"a",i),i},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,i){function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s=function(){function e(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r);}}return function(t,i,r){return i&&e(t.prototype,i),r&&e(t,r),t}}(),l=function(){function e(t){var i=this;if(r(this,e),this.config=e.mergeSettings(t),this.selector="string"==typeof this.config.selector?document.querySelector(this.config.selector):this.config.selector,null===this.selector)throw new Error("Something wrong with your selector 😭");this.resolveSlidesNumber(),this.selectorWidth=this.selector.offsetWidth,this.innerElements=[].slice.call(this.selector.children),this.currentSlide=this.config.loop?this.config.startIndex%this.innerElements.length:Math.max(0,Math.min(this.config.startIndex,this.innerElements.length-this.perPage)),this.transformProperty=e.webkitOrNot(),["resizeHandler","touchstartHandler","touchendHandler","touchmoveHandler","mousedownHandler","mouseupHandler","mouseleaveHandler","mousemoveHandler","clickHandler"].forEach(function(e){i[e]=i[e].bind(i);}),this.init();}return s(e,[{key:"attachEvents",value:function(){window.addEventListener("resize",this.resizeHandler),this.config.draggable&&(this.pointerDown=!1,this.drag={startX:0,endX:0,startY:0,letItGo:null,preventClick:!1},this.selector.addEventListener("touchstart",this.touchstartHandler),this.selector.addEventListener("touchend",this.touchendHandler),this.selector.addEventListener("touchmove",this.touchmoveHandler),this.selector.addEventListener("mousedown",this.mousedownHandler),this.selector.addEventListener("mouseup",this.mouseupHandler),this.selector.addEventListener("mouseleave",this.mouseleaveHandler),this.selector.addEventListener("mousemove",this.mousemoveHandler),this.selector.addEventListener("click",this.clickHandler));}},{key:"detachEvents",value:function(){window.removeEventListener("resize",this.resizeHandler),this.selector.removeEventListener("touchstart",this.touchstartHandler),this.selector.removeEventListener("touchend",this.touchendHandler),this.selector.removeEventListener("touchmove",this.touchmoveHandler),this.selector.removeEventListener("mousedown",this.mousedownHandler),this.selector.removeEventListener("mouseup",this.mouseupHandler),this.selector.removeEventListener("mouseleave",this.mouseleaveHandler),this.selector.removeEventListener("mousemove",this.mousemoveHandler),this.selector.removeEventListener("click",this.clickHandler);}},{key:"init",value:function(){this.attachEvents(),this.selector.style.overflow="hidden",this.selector.style.direction=this.config.rtl?"rtl":"ltr",this.buildSliderFrame(),this.config.onInit.call(this);}},{key:"buildSliderFrame",value:function(){var e=this.selectorWidth/this.perPage,t=this.config.loop?this.innerElements.length+2*this.perPage:this.innerElements.length;this.sliderFrame=document.createElement("div"),this.sliderFrame.style.width=e*t+"px",this.enableTransition(),this.config.draggable&&(this.selector.style.cursor="-webkit-grab");var i=document.createDocumentFragment();if(this.config.loop)for(var r=this.innerElements.length-this.perPage;r<this.innerElements.length;r++){var n=this.buildSliderFrameItem(this.innerElements[r].cloneNode(!0));i.appendChild(n);}for(var s=0;s<this.innerElements.length;s++){var l=this.buildSliderFrameItem(this.innerElements[s]);i.appendChild(l);}if(this.config.loop)for(var o=0;o<this.perPage;o++){var a=this.buildSliderFrameItem(this.innerElements[o].cloneNode(!0));i.appendChild(a);}this.sliderFrame.appendChild(i),this.selector.innerHTML="",this.selector.appendChild(this.sliderFrame),this.slideToCurrent();}},{key:"buildSliderFrameItem",value:function(e){var t=document.createElement("div");return t.style.cssFloat=this.config.rtl?"right":"left",t.style.float=this.config.rtl?"right":"left",t.style.width=(this.config.loop?100/(this.innerElements.length+2*this.perPage):100/this.innerElements.length)+"%",t.appendChild(e),t}},{key:"resolveSlidesNumber",value:function(){if("number"==typeof this.config.perPage)this.perPage=this.config.perPage;else if("object"===n(this.config.perPage)){this.perPage=1;for(var e in this.config.perPage)window.innerWidth>=e&&(this.perPage=this.config.perPage[e]);}}},{key:"prev",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments[1];if(!(this.innerElements.length<=this.perPage)){var i=this.currentSlide;if(this.config.loop){if(this.currentSlide-e<0){this.disableTransition();var r=this.currentSlide+this.innerElements.length,n=this.perPage,s=r+n,l=(this.config.rtl?1:-1)*s*(this.selectorWidth/this.perPage),o=this.config.draggable?this.drag.endX-this.drag.startX:0;this.sliderFrame.style[this.transformProperty]="translate3d("+(l+o)+"px, 0, 0)",this.currentSlide=r-e;}else this.currentSlide=this.currentSlide-e;}else this.currentSlide=Math.max(this.currentSlide-e,0);i!==this.currentSlide&&(this.slideToCurrent(this.config.loop),this.config.onChange.call(this),t&&t.call(this));}}},{key:"next",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments[1];if(!(this.innerElements.length<=this.perPage)){var i=this.currentSlide;if(this.config.loop){if(this.currentSlide+e>this.innerElements.length-this.perPage){this.disableTransition();var r=this.currentSlide-this.innerElements.length,n=this.perPage,s=r+n,l=(this.config.rtl?1:-1)*s*(this.selectorWidth/this.perPage),o=this.config.draggable?this.drag.endX-this.drag.startX:0;this.sliderFrame.style[this.transformProperty]="translate3d("+(l+o)+"px, 0, 0)",this.currentSlide=r+e;}else this.currentSlide=this.currentSlide+e;}else this.currentSlide=Math.min(this.currentSlide+e,this.innerElements.length-this.perPage);i!==this.currentSlide&&(this.slideToCurrent(this.config.loop),this.config.onChange.call(this),t&&t.call(this));}}},{key:"disableTransition",value:function(){this.sliderFrame.style.webkitTransition="all 0ms "+this.config.easing,this.sliderFrame.style.transition="all 0ms "+this.config.easing;}},{key:"enableTransition",value:function(){this.sliderFrame.style.webkitTransition="all "+this.config.duration+"ms "+this.config.easing,this.sliderFrame.style.transition="all "+this.config.duration+"ms "+this.config.easing;}},{key:"goTo",value:function(e,t){if(!(this.innerElements.length<=this.perPage)){var i=this.currentSlide;this.currentSlide=this.config.loop?e%this.innerElements.length:Math.min(Math.max(e,0),this.innerElements.length-this.perPage),i!==this.currentSlide&&(this.slideToCurrent(),this.config.onChange.call(this),t&&t.call(this));}}},{key:"slideToCurrent",value:function(e){var t=this,i=this.config.loop?this.currentSlide+this.perPage:this.currentSlide,r=(this.config.rtl?1:-1)*i*(this.selectorWidth/this.perPage);e?requestAnimationFrame(function(){requestAnimationFrame(function(){t.enableTransition(),t.sliderFrame.style[t.transformProperty]="translate3d("+r+"px, 0, 0)";});}):this.sliderFrame.style[this.transformProperty]="translate3d("+r+"px, 0, 0)";}},{key:"updateAfterDrag",value:function(){var e=(this.config.rtl?-1:1)*(this.drag.endX-this.drag.startX),t=Math.abs(e),i=this.config.multipleDrag?Math.ceil(t/(this.selectorWidth/this.perPage)):1,r=e>0&&this.currentSlide-i<0,n=e<0&&this.currentSlide+i>this.innerElements.length-this.perPage;e>0&&t>this.config.threshold&&this.innerElements.length>this.perPage?this.prev(i):e<0&&t>this.config.threshold&&this.innerElements.length>this.perPage&&this.next(i),this.slideToCurrent(r||n);}},{key:"resizeHandler",value:function(){this.resolveSlidesNumber(),this.currentSlide+this.perPage>this.innerElements.length&&(this.currentSlide=this.innerElements.length<=this.perPage?0:this.innerElements.length-this.perPage),this.selectorWidth=this.selector.offsetWidth,this.buildSliderFrame();}},{key:"clearDrag",value:function(){this.drag={startX:0,endX:0,startY:0,letItGo:null,preventClick:this.drag.preventClick};}},{key:"touchstartHandler",value:function(e){-1!==["TEXTAREA","OPTION","INPUT","SELECT"].indexOf(e.target.nodeName)||(e.stopPropagation(),this.pointerDown=!0,this.drag.startX=e.touches[0].pageX,this.drag.startY=e.touches[0].pageY);}},{key:"touchendHandler",value:function(e){e.stopPropagation(),this.pointerDown=!1,this.enableTransition(),this.drag.endX&&this.updateAfterDrag(),this.clearDrag();}},{key:"touchmoveHandler",value:function(e){if(e.stopPropagation(),null===this.drag.letItGo&&(this.drag.letItGo=Math.abs(this.drag.startY-e.touches[0].pageY)<Math.abs(this.drag.startX-e.touches[0].pageX)),this.pointerDown&&this.drag.letItGo){e.preventDefault(),this.drag.endX=e.touches[0].pageX,this.sliderFrame.style.webkitTransition="all 0ms "+this.config.easing,this.sliderFrame.style.transition="all 0ms "+this.config.easing;var t=this.config.loop?this.currentSlide+this.perPage:this.currentSlide,i=t*(this.selectorWidth/this.perPage),r=this.drag.endX-this.drag.startX,n=this.config.rtl?i+r:i-r;this.sliderFrame.style[this.transformProperty]="translate3d("+(this.config.rtl?1:-1)*n+"px, 0, 0)";}}},{key:"mousedownHandler",value:function(e){-1!==["TEXTAREA","OPTION","INPUT","SELECT"].indexOf(e.target.nodeName)||(e.preventDefault(),e.stopPropagation(),this.pointerDown=!0,this.drag.startX=e.pageX);}},{key:"mouseupHandler",value:function(e){e.stopPropagation(),this.pointerDown=!1,this.selector.style.cursor="-webkit-grab",this.enableTransition(),this.drag.endX&&this.updateAfterDrag(),this.clearDrag();}},{key:"mousemoveHandler",value:function(e){if(e.preventDefault(),this.pointerDown){"A"===e.target.nodeName&&(this.drag.preventClick=!0),this.drag.endX=e.pageX,this.selector.style.cursor="-webkit-grabbing",this.sliderFrame.style.webkitTransition="all 0ms "+this.config.easing,this.sliderFrame.style.transition="all 0ms "+this.config.easing;var t=this.config.loop?this.currentSlide+this.perPage:this.currentSlide,i=t*(this.selectorWidth/this.perPage),r=this.drag.endX-this.drag.startX,n=this.config.rtl?i+r:i-r;this.sliderFrame.style[this.transformProperty]="translate3d("+(this.config.rtl?1:-1)*n+"px, 0, 0)";}}},{key:"mouseleaveHandler",value:function(e){this.pointerDown&&(this.pointerDown=!1,this.selector.style.cursor="-webkit-grab",this.drag.endX=e.pageX,this.drag.preventClick=!1,this.enableTransition(),this.updateAfterDrag(),this.clearDrag());}},{key:"clickHandler",value:function(e){this.drag.preventClick&&e.preventDefault(),this.drag.preventClick=!1;}},{key:"remove",value:function(e,t){if(e<0||e>=this.innerElements.length)throw new Error("Item to remove doesn't exist 😭");var i=e<this.currentSlide,r=this.currentSlide+this.perPage-1===e;(i||r)&&this.currentSlide--,this.innerElements.splice(e,1),this.buildSliderFrame(),t&&t.call(this);}},{key:"insert",value:function(e,t,i){if(t<0||t>this.innerElements.length+1)throw new Error("Unable to inset it at this index 😭");if(-1!==this.innerElements.indexOf(e))throw new Error("The same item in a carousel? Really? Nope 😭");var r=t<=this.currentSlide>0&&this.innerElements.length;this.currentSlide=r?this.currentSlide+1:this.currentSlide,this.innerElements.splice(t,0,e),this.buildSliderFrame(),i&&i.call(this);}},{key:"prepend",value:function(e,t){this.insert(e,0),t&&t.call(this);}},{key:"append",value:function(e,t){this.insert(e,this.innerElements.length+1),t&&t.call(this);}},{key:"destroy",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments[1];if(this.detachEvents(),this.selector.style.cursor="auto",e){for(var i=document.createDocumentFragment(),r=0;r<this.innerElements.length;r++)i.appendChild(this.innerElements[r]);this.selector.innerHTML="",this.selector.appendChild(i),this.selector.removeAttribute("style");}t&&t.call(this);}}],[{key:"mergeSettings",value:function(e){var t={selector:".siema",duration:200,easing:"ease-out",perPage:1,startIndex:0,draggable:!0,multipleDrag:!0,threshold:20,loop:!1,rtl:!1,onInit:function(){},onChange:function(){}},i=e;for(var r in i)t[r]=i[r];return t}},{key:"webkitOrNot",value:function(){return "string"==typeof document.documentElement.style.transform?"transform":"WebkitTransform"}}]),e}();t.default=l,e.exports=t.default;}])});
});

var Siema = /*@__PURE__*/unwrapExports(siema_min);

/* node_modules\@beyonk\svelte-carousel\src\Carousel.svelte generated by Svelte v3.23.2 */
const file$4 = "node_modules\\@beyonk\\svelte-carousel\\src\\Carousel.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[31] = list[i];
	child_ctx[33] = i;
	return child_ctx;
}

const get_right_control_slot_changes = dirty => ({});
const get_right_control_slot_context = ctx => ({});
const get_left_control_slot_changes = dirty => ({});
const get_left_control_slot_context = ctx => ({});

// (6:1) {#if controls}
function create_if_block_1(ctx) {
	let button0;
	let t;
	let button1;
	let current;
	let mounted;
	let dispose;
	const left_control_slot_template = /*$$slots*/ ctx[23]["left-control"];
	const left_control_slot = create_slot(left_control_slot_template, ctx, /*$$scope*/ ctx[22], get_left_control_slot_context);
	const right_control_slot_template = /*$$slots*/ ctx[23]["right-control"];
	const right_control_slot = create_slot(right_control_slot_template, ctx, /*$$scope*/ ctx[22], get_right_control_slot_context);

	const block = {
		c: function create() {
			button0 = element("button");
			if (left_control_slot) left_control_slot.c();
			t = space();
			button1 = element("button");
			if (right_control_slot) right_control_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			button0 = claim_element(nodes, "BUTTON", { class: true, "aria-label": true });
			var button0_nodes = children(button0);
			if (left_control_slot) left_control_slot.l(button0_nodes);
			button0_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			button1 = claim_element(nodes, "BUTTON", { class: true, "aria-label": true });
			var button1_nodes = children(button1);
			if (right_control_slot) right_control_slot.l(button1_nodes);
			button1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(button0, "class", "left svelte-1d83jxb");
			attr_dev(button0, "aria-label", "left");
			add_location(button0, file$4, 6, 1, 105);
			attr_dev(button1, "class", "right svelte-1d83jxb");
			attr_dev(button1, "aria-label", "right");
			add_location(button1, file$4, 9, 1, 209);
		},
		m: function mount(target, anchor) {
			insert_dev(target, button0, anchor);

			if (left_control_slot) {
				left_control_slot.m(button0, null);
			}

			insert_dev(target, t, anchor);
			insert_dev(target, button1, anchor);

			if (right_control_slot) {
				right_control_slot.m(button1, null);
			}

			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(button0, "click", /*left*/ ctx[3], false, false, false),
					listen_dev(button1, "click", /*right*/ ctx[4], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (left_control_slot) {
				if (left_control_slot.p && dirty[0] & /*$$scope*/ 4194304) {
					update_slot(left_control_slot, left_control_slot_template, ctx, /*$$scope*/ ctx[22], dirty, get_left_control_slot_changes, get_left_control_slot_context);
				}
			}

			if (right_control_slot) {
				if (right_control_slot.p && dirty[0] & /*$$scope*/ 4194304) {
					update_slot(right_control_slot, right_control_slot_template, ctx, /*$$scope*/ ctx[22], dirty, get_right_control_slot_changes, get_right_control_slot_context);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(left_control_slot, local);
			transition_in(right_control_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(left_control_slot, local);
			transition_out(right_control_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(button0);
			if (left_control_slot) left_control_slot.d(detaching);
			if (detaching) detach_dev(t);
			if (detaching) detach_dev(button1);
			if (right_control_slot) right_control_slot.d(detaching);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(6:1) {#if controls}",
		ctx
	});

	return block;
}

// (14:4) {#if dots}
function create_if_block(ctx) {
	let ul;
	let each_value = { length: /*totalDots*/ ctx[9] };
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			ul = element("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			ul = claim_element(nodes, "UL", { class: true });
			var ul_nodes = children(ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(ul, "class", "svelte-1d83jxb");
			add_location(ul, file$4, 14, 1, 339);
		},
		m: function mount(target, anchor) {
			insert_dev(target, ul, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*isDotActive, currentIndex, go, currentPerPage, totalDots*/ 868) {
				each_value = { length: /*totalDots*/ ctx[9] };
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(ul);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(14:4) {#if dots}",
		ctx
	});

	return block;
}

// (16:2) {#each {length: totalDots} as _, i}
function create_each_block(ctx) {
	let li;
	let li_class_value;
	let mounted;
	let dispose;

	function click_handler(...args) {
		return /*click_handler*/ ctx[25](/*i*/ ctx[33], ...args);
	}

	const block = {
		c: function create() {
			li = element("li");
			this.h();
		},
		l: function claim(nodes) {
			li = claim_element(nodes, "LI", { class: true });
			children(li).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(li, "class", li_class_value = "" + (null_to_empty(/*isDotActive*/ ctx[2](/*currentIndex*/ ctx[6], /*i*/ ctx[33])
			? "active"
			: "") + " svelte-1d83jxb"));

			add_location(li, file$4, 16, 2, 384);
		},
		m: function mount(target, anchor) {
			insert_dev(target, li, anchor);

			if (!mounted) {
				dispose = listen_dev(li, "click", click_handler, false, false, false);
				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;

			if (dirty[0] & /*currentIndex*/ 64 && li_class_value !== (li_class_value = "" + (null_to_empty(/*isDotActive*/ ctx[2](/*currentIndex*/ ctx[6], /*i*/ ctx[33])
			? "active"
			: "") + " svelte-1d83jxb"))) {
				attr_dev(li, "class", li_class_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(li);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(16:2) {#each {length: totalDots} as _, i}",
		ctx
	});

	return block;
}

function create_fragment$4(ctx) {
	let div1;
	let div0;
	let t0;
	let t1;
	let current;
	const default_slot_template = /*$$slots*/ ctx[23].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[22], null);
	let if_block0 = /*controls*/ ctx[1] && create_if_block_1(ctx);
	let if_block1 = /*dots*/ ctx[0] && create_if_block(ctx);

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			if (default_slot) default_slot.c();
			t0 = space();
			if (if_block0) if_block0.c();
			t1 = space();
			if (if_block1) if_block1.c();
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			if (default_slot) default_slot.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(div1_nodes);
			if (if_block0) if_block0.l(div1_nodes);
			t1 = claim_space(div1_nodes);
			if (if_block1) if_block1.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "slides");
			add_location(div0, file$4, 2, 1, 25);
			attr_dev(div1, "class", "carousel svelte-1d83jxb");
			add_location(div1, file$4, 1, 0, 1);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);

			if (default_slot) {
				default_slot.m(div0, null);
			}

			/*div0_binding*/ ctx[24](div0);
			append_dev(div1, t0);
			if (if_block0) if_block0.m(div1, null);
			append_dev(div1, t1);
			if (if_block1) if_block1.m(div1, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (default_slot) {
				if (default_slot.p && dirty[0] & /*$$scope*/ 4194304) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[22], dirty, null, null);
				}
			}

			if (/*controls*/ ctx[1]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty[0] & /*controls*/ 2) {
						transition_in(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_1(ctx);
					if_block0.c();
					transition_in(if_block0, 1);
					if_block0.m(div1, t1);
				}
			} else if (if_block0) {
				group_outros();

				transition_out(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				check_outros();
			}

			if (/*dots*/ ctx[0]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					if_block1.m(div1, null);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			transition_in(if_block0);
			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			transition_out(if_block0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			if (default_slot) default_slot.d(detaching);
			/*div0_binding*/ ctx[24](null);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$4.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$4($$self, $$props, $$invalidate) {
	let { perPage = 3 } = $$props;
	let { loop = true } = $$props;
	let { autoplay = 0 } = $$props;
	let { duration = 200 } = $$props;
	let { easing = "ease-out" } = $$props;
	let { startIndex = 0 } = $$props;
	let { draggable = true } = $$props;
	let { multipleDrag = true } = $$props;
	let { dots = true } = $$props;
	let { controls = true } = $$props;
	let { threshold = 20 } = $$props;
	let { rtl = false } = $$props;
	let currentIndex = startIndex;
	let siema;
	let controller;
	let timer;
	const dispatch = createEventDispatcher();

	onMount(() => {
		$$invalidate(26, controller = new Siema({
				selector: siema,
				perPage: typeof perPage === "object" ? perPage : Number(perPage),
				loop,
				duration,
				easing,
				startIndex,
				draggable,
				multipleDrag,
				threshold,
				rtl,
				onChange: handleChange
			}));

		if (autoplay) {
			timer = setInterval(right, autoplay);
		}

		return () => {
			autoplay && clearInterval(timer);
			controller.destroy();
		};
	});

	function isDotActive(currentIndex, dotIndex) {
		if (currentIndex < 0) currentIndex = pips.length + currentIndex;
		return currentIndex >= dotIndex * currentPerPage && currentIndex < dotIndex * currentPerPage + currentPerPage;
	}

	function left() {
		controller.prev();
	}

	function right() {
		controller.next();
	}

	function go(index) {
		controller.goTo(index);
	}

	function pause() {
		clearInterval(timer);
	}

	function resume() {
		if (autoplay) {
			timer = setInterval(right, autoplay);
		}
	}

	function handleChange(event) {
		$$invalidate(6, currentIndex = controller.currentSlide);

		dispatch("change", {
			currentSlide: controller.currentSlide,
			slideCount: controller.innerElements.length
		});
	}

	const writable_props = [
		"perPage",
		"loop",
		"autoplay",
		"duration",
		"easing",
		"startIndex",
		"draggable",
		"multipleDrag",
		"dots",
		"controls",
		"threshold",
		"rtl"
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Carousel> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Carousel", $$slots, ['default','left-control','right-control']);

	function div0_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			siema = $$value;
			$$invalidate(7, siema);
		});
	}

	const click_handler = i => go(i * currentPerPage);

	$$self.$set = $$props => {
		if ("perPage" in $$props) $$invalidate(10, perPage = $$props.perPage);
		if ("loop" in $$props) $$invalidate(11, loop = $$props.loop);
		if ("autoplay" in $$props) $$invalidate(12, autoplay = $$props.autoplay);
		if ("duration" in $$props) $$invalidate(13, duration = $$props.duration);
		if ("easing" in $$props) $$invalidate(14, easing = $$props.easing);
		if ("startIndex" in $$props) $$invalidate(15, startIndex = $$props.startIndex);
		if ("draggable" in $$props) $$invalidate(16, draggable = $$props.draggable);
		if ("multipleDrag" in $$props) $$invalidate(17, multipleDrag = $$props.multipleDrag);
		if ("dots" in $$props) $$invalidate(0, dots = $$props.dots);
		if ("controls" in $$props) $$invalidate(1, controls = $$props.controls);
		if ("threshold" in $$props) $$invalidate(18, threshold = $$props.threshold);
		if ("rtl" in $$props) $$invalidate(19, rtl = $$props.rtl);
		if ("$$scope" in $$props) $$invalidate(22, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({
		Siema,
		onMount,
		createEventDispatcher,
		perPage,
		loop,
		autoplay,
		duration,
		easing,
		startIndex,
		draggable,
		multipleDrag,
		dots,
		controls,
		threshold,
		rtl,
		currentIndex,
		siema,
		controller,
		timer,
		dispatch,
		isDotActive,
		left,
		right,
		go,
		pause,
		resume,
		handleChange,
		pips,
		currentPerPage,
		totalDots
	});

	$$self.$inject_state = $$props => {
		if ("perPage" in $$props) $$invalidate(10, perPage = $$props.perPage);
		if ("loop" in $$props) $$invalidate(11, loop = $$props.loop);
		if ("autoplay" in $$props) $$invalidate(12, autoplay = $$props.autoplay);
		if ("duration" in $$props) $$invalidate(13, duration = $$props.duration);
		if ("easing" in $$props) $$invalidate(14, easing = $$props.easing);
		if ("startIndex" in $$props) $$invalidate(15, startIndex = $$props.startIndex);
		if ("draggable" in $$props) $$invalidate(16, draggable = $$props.draggable);
		if ("multipleDrag" in $$props) $$invalidate(17, multipleDrag = $$props.multipleDrag);
		if ("dots" in $$props) $$invalidate(0, dots = $$props.dots);
		if ("controls" in $$props) $$invalidate(1, controls = $$props.controls);
		if ("threshold" in $$props) $$invalidate(18, threshold = $$props.threshold);
		if ("rtl" in $$props) $$invalidate(19, rtl = $$props.rtl);
		if ("currentIndex" in $$props) $$invalidate(6, currentIndex = $$props.currentIndex);
		if ("siema" in $$props) $$invalidate(7, siema = $$props.siema);
		if ("controller" in $$props) $$invalidate(26, controller = $$props.controller);
		if ("timer" in $$props) timer = $$props.timer;
		if ("pips" in $$props) pips = $$props.pips;
		if ("currentPerPage" in $$props) $$invalidate(8, currentPerPage = $$props.currentPerPage);
		if ("totalDots" in $$props) $$invalidate(9, totalDots = $$props.totalDots);
	};

	let pips;
	let currentPerPage;
	let totalDots;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty[0] & /*controller*/ 67108864) {
			 pips = controller ? controller.innerElements : [];
		}

		if ($$self.$$.dirty[0] & /*controller, perPage*/ 67109888) {
			 $$invalidate(8, currentPerPage = controller ? controller.perPage : perPage);
		}

		if ($$self.$$.dirty[0] & /*controller, currentPerPage*/ 67109120) {
			 $$invalidate(9, totalDots = controller
			? Math.ceil(controller.innerElements.length / currentPerPage)
			: []);
		}
	};

	return [
		dots,
		controls,
		isDotActive,
		left,
		right,
		go,
		currentIndex,
		siema,
		currentPerPage,
		totalDots,
		perPage,
		loop,
		autoplay,
		duration,
		easing,
		startIndex,
		draggable,
		multipleDrag,
		threshold,
		rtl,
		pause,
		resume,
		$$scope,
		$$slots,
		div0_binding,
		click_handler
	];
}

class Carousel extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(
			this,
			options,
			instance$4,
			create_fragment$4,
			safe_not_equal,
			{
				perPage: 10,
				loop: 11,
				autoplay: 12,
				duration: 13,
				easing: 14,
				startIndex: 15,
				draggable: 16,
				multipleDrag: 17,
				dots: 0,
				controls: 1,
				threshold: 18,
				rtl: 19,
				isDotActive: 2,
				left: 3,
				right: 4,
				go: 5,
				pause: 20,
				resume: 21
			},
			[-1, -1]
		);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Carousel",
			options,
			id: create_fragment$4.name
		});
	}

	get perPage() {
		throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set perPage(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get loop() {
		throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set loop(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get autoplay() {
		throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set autoplay(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get duration() {
		throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set duration(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get easing() {
		throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set easing(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get startIndex() {
		throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set startIndex(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get draggable() {
		throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set draggable(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get multipleDrag() {
		throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set multipleDrag(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get dots() {
		throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set dots(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get controls() {
		throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set controls(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get threshold() {
		throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set threshold(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get rtl() {
		throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set rtl(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get isDotActive() {
		return this.$$.ctx[2];
	}

	set isDotActive(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get left() {
		return this.$$.ctx[3];
	}

	set left(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get right() {
		return this.$$.ctx[4];
	}

	set right(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get go() {
		return this.$$.ctx[5];
	}

	set go(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get pause() {
		return this.$$.ctx[20];
	}

	set pause(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get resume() {
		return this.$$.ctx[21];
	}

	set resume(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* node_modules\svelte-feather-icons\src\icons\ChevronLeftIcon.svelte generated by Svelte v3.23.2 */

const file$5 = "node_modules\\svelte-feather-icons\\src\\icons\\ChevronLeftIcon.svelte";

function create_fragment$5(ctx) {
	let svg;
	let polyline;
	let svg_class_value;

	const block = {
		c: function create() {
			svg = svg_element("svg");
			polyline = svg_element("polyline");
			this.h();
		},
		l: function claim(nodes) {
			svg = claim_element(
				nodes,
				"svg",
				{
					xmlns: true,
					width: true,
					height: true,
					fill: true,
					viewBox: true,
					stroke: true,
					"stroke-width": true,
					"stroke-linecap": true,
					"stroke-linejoin": true,
					class: true
				},
				1
			);

			var svg_nodes = children(svg);
			polyline = claim_element(svg_nodes, "polyline", { points: true }, 1);
			children(polyline).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(polyline, "points", "15 18 9 12 15 6");
			add_location(polyline, file$5, 12, 237, 493);
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg, "width", /*size*/ ctx[0]);
			attr_dev(svg, "height", /*size*/ ctx[0]);
			attr_dev(svg, "fill", "none");
			attr_dev(svg, "viewBox", "0 0 24 24");
			attr_dev(svg, "stroke", "currentColor");
			attr_dev(svg, "stroke-width", "2");
			attr_dev(svg, "stroke-linecap", "round");
			attr_dev(svg, "stroke-linejoin", "round");
			attr_dev(svg, "class", svg_class_value = "feather feather-chevron-left " + /*customClass*/ ctx[1]);
			add_location(svg, file$5, 12, 0, 256);
		},
		m: function mount(target, anchor) {
			insert_dev(target, svg, anchor);
			append_dev(svg, polyline);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*size*/ 1) {
				attr_dev(svg, "width", /*size*/ ctx[0]);
			}

			if (dirty & /*size*/ 1) {
				attr_dev(svg, "height", /*size*/ ctx[0]);
			}

			if (dirty & /*customClass*/ 2 && svg_class_value !== (svg_class_value = "feather feather-chevron-left " + /*customClass*/ ctx[1])) {
				attr_dev(svg, "class", svg_class_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(svg);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$5.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$5($$self, $$props, $$invalidate) {
	let { size = "100%" } = $$props;
	let { class: customClass = "" } = $$props;

	if (size !== "100%") {
		size = size.slice(-1) === "x"
		? size.slice(0, size.length - 1) + "em"
		: parseInt(size) + "px";
	}

	const writable_props = ["size", "class"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<ChevronLeftIcon> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("ChevronLeftIcon", $$slots, []);

	$$self.$set = $$props => {
		if ("size" in $$props) $$invalidate(0, size = $$props.size);
		if ("class" in $$props) $$invalidate(1, customClass = $$props.class);
	};

	$$self.$capture_state = () => ({ size, customClass });

	$$self.$inject_state = $$props => {
		if ("size" in $$props) $$invalidate(0, size = $$props.size);
		if ("customClass" in $$props) $$invalidate(1, customClass = $$props.customClass);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [size, customClass];
}

class ChevronLeftIcon extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$5, create_fragment$5, safe_not_equal, { size: 0, class: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ChevronLeftIcon",
			options,
			id: create_fragment$5.name
		});
	}

	get size() {
		throw new Error("<ChevronLeftIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set size(value) {
		throw new Error("<ChevronLeftIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get class() {
		throw new Error("<ChevronLeftIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set class(value) {
		throw new Error("<ChevronLeftIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* node_modules\svelte-feather-icons\src\icons\ChevronRightIcon.svelte generated by Svelte v3.23.2 */

const file$6 = "node_modules\\svelte-feather-icons\\src\\icons\\ChevronRightIcon.svelte";

function create_fragment$6(ctx) {
	let svg;
	let polyline;
	let svg_class_value;

	const block = {
		c: function create() {
			svg = svg_element("svg");
			polyline = svg_element("polyline");
			this.h();
		},
		l: function claim(nodes) {
			svg = claim_element(
				nodes,
				"svg",
				{
					xmlns: true,
					width: true,
					height: true,
					fill: true,
					viewBox: true,
					stroke: true,
					"stroke-width": true,
					"stroke-linecap": true,
					"stroke-linejoin": true,
					class: true
				},
				1
			);

			var svg_nodes = children(svg);
			polyline = claim_element(svg_nodes, "polyline", { points: true }, 1);
			children(polyline).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(polyline, "points", "9 18 15 12 9 6");
			add_location(polyline, file$6, 12, 238, 494);
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg, "width", /*size*/ ctx[0]);
			attr_dev(svg, "height", /*size*/ ctx[0]);
			attr_dev(svg, "fill", "none");
			attr_dev(svg, "viewBox", "0 0 24 24");
			attr_dev(svg, "stroke", "currentColor");
			attr_dev(svg, "stroke-width", "2");
			attr_dev(svg, "stroke-linecap", "round");
			attr_dev(svg, "stroke-linejoin", "round");
			attr_dev(svg, "class", svg_class_value = "feather feather-chevron-right " + /*customClass*/ ctx[1]);
			add_location(svg, file$6, 12, 0, 256);
		},
		m: function mount(target, anchor) {
			insert_dev(target, svg, anchor);
			append_dev(svg, polyline);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*size*/ 1) {
				attr_dev(svg, "width", /*size*/ ctx[0]);
			}

			if (dirty & /*size*/ 1) {
				attr_dev(svg, "height", /*size*/ ctx[0]);
			}

			if (dirty & /*customClass*/ 2 && svg_class_value !== (svg_class_value = "feather feather-chevron-right " + /*customClass*/ ctx[1])) {
				attr_dev(svg, "class", svg_class_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(svg);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$6.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$6($$self, $$props, $$invalidate) {
	let { size = "100%" } = $$props;
	let { class: customClass = "" } = $$props;

	if (size !== "100%") {
		size = size.slice(-1) === "x"
		? size.slice(0, size.length - 1) + "em"
		: parseInt(size) + "px";
	}

	const writable_props = ["size", "class"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<ChevronRightIcon> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("ChevronRightIcon", $$slots, []);

	$$self.$set = $$props => {
		if ("size" in $$props) $$invalidate(0, size = $$props.size);
		if ("class" in $$props) $$invalidate(1, customClass = $$props.class);
	};

	$$self.$capture_state = () => ({ size, customClass });

	$$self.$inject_state = $$props => {
		if ("size" in $$props) $$invalidate(0, size = $$props.size);
		if ("customClass" in $$props) $$invalidate(1, customClass = $$props.customClass);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [size, customClass];
}

class ChevronRightIcon extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$6, create_fragment$6, safe_not_equal, { size: 0, class: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ChevronRightIcon",
			options,
			id: create_fragment$6.name
		});
	}

	get size() {
		throw new Error("<ChevronRightIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set size(value) {
		throw new Error("<ChevronRightIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get class() {
		throw new Error("<ChevronRightIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set class(value) {
		throw new Error("<ChevronRightIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\routes\_components\Clan.svelte generated by Svelte v3.23.2 */
const file$7 = "src\\routes\\_components\\Clan.svelte";

function get_each_context$1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

// (22:8) <span class="control" slot="left-control">
function create_left_control_slot(ctx) {
	let span;
	let chevronlefticon;
	let current;
	chevronlefticon = new ChevronLeftIcon({ $$inline: true });

	const block = {
		c: function create() {
			span = element("span");
			create_component(chevronlefticon.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { class: true, slot: true });
			var span_nodes = children(span);
			claim_component(chevronlefticon.$$.fragment, span_nodes);
			span_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span, "class", "control svelte-18paw8z");
			attr_dev(span, "slot", "left-control");
			add_location(span, file$7, 21, 8, 500);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
			mount_component(chevronlefticon, span, null);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(chevronlefticon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(chevronlefticon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
			destroy_component(chevronlefticon);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_left_control_slot.name,
		type: "slot",
		source: "(22:8) <span class=\\\"control\\\" slot=\\\"left-control\\\">",
		ctx
	});

	return block;
}

// (113:8) <span class="control" slot="right-control">
function create_right_control_slot(ctx) {
	let span;
	let chevronrighticon;
	let current;
	chevronrighticon = new ChevronRightIcon({ $$inline: true });

	const block = {
		c: function create() {
			span = element("span");
			create_component(chevronrighticon.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { class: true, slot: true });
			var span_nodes = children(span);
			claim_component(chevronrighticon.$$.fragment, span_nodes);
			span_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span, "class", "control svelte-18paw8z");
			attr_dev(span, "slot", "right-control");
			add_location(span, file$7, 112, 8, 4781);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
			mount_component(chevronrighticon, span, null);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(chevronrighticon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(chevronrighticon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
			destroy_component(chevronrighticon);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_right_control_slot.name,
		type: "slot",
		source: "(113:8) <span class=\\\"control\\\" slot=\\\"right-control\\\">",
		ctx
	});

	return block;
}

// (21:4) <Carousel {...carousel} dots={false}>
function create_default_slot(ctx) {
	let t0;
	let div0;
	let header0;
	let t1;
	let div1;
	let header1;
	let t2;
	let div2;
	let header2;
	let t3;
	let div3;
	let header3;
	let t4;
	let div4;
	let header4;
	let t5;
	let div5;
	let header5;
	let t6;
	let div6;
	let header6;
	let t7;
	let div7;
	let header7;
	let t8;
	let div8;
	let header8;
	let t9;
	let div9;
	let header9;
	let t10;
	let div10;
	let header10;
	let t11;
	let div11;
	let header11;
	let t12;
	let div12;
	let header12;
	let t13;
	let div13;
	let header13;
	let t14;
	let div14;
	let header14;
	let t15;
	let div15;
	let header15;
	let t16;
	let div16;
	let header16;
	let t17;
	let div17;
	let header17;
	let t18;
	let div18;
	let header18;
	let t19;
	let div19;
	let header19;
	let t20;
	let div20;
	let header20;
	let t21;
	let div21;
	let header21;
	let t22;

	const block = {
		c: function create() {
			t0 = space();
			div0 = element("div");
			header0 = element("header");
			t1 = space();
			div1 = element("div");
			header1 = element("header");
			t2 = space();
			div2 = element("div");
			header2 = element("header");
			t3 = space();
			div3 = element("div");
			header3 = element("header");
			t4 = space();
			div4 = element("div");
			header4 = element("header");
			t5 = space();
			div5 = element("div");
			header5 = element("header");
			t6 = space();
			div6 = element("div");
			header6 = element("header");
			t7 = space();
			div7 = element("div");
			header7 = element("header");
			t8 = space();
			div8 = element("div");
			header8 = element("header");
			t9 = space();
			div9 = element("div");
			header9 = element("header");
			t10 = space();
			div10 = element("div");
			header10 = element("header");
			t11 = space();
			div11 = element("div");
			header11 = element("header");
			t12 = space();
			div12 = element("div");
			header12 = element("header");
			t13 = space();
			div13 = element("div");
			header13 = element("header");
			t14 = space();
			div14 = element("div");
			header14 = element("header");
			t15 = space();
			div15 = element("div");
			header15 = element("header");
			t16 = space();
			div16 = element("div");
			header16 = element("header");
			t17 = space();
			div17 = element("div");
			header17 = element("header");
			t18 = space();
			div18 = element("div");
			header18 = element("header");
			t19 = space();
			div19 = element("div");
			header19 = element("header");
			t20 = space();
			div20 = element("div");
			header20 = element("header");
			t21 = space();
			div21 = element("div");
			header21 = element("header");
			t22 = space();
			this.h();
		},
		l: function claim(nodes) {
			t0 = claim_space(nodes);
			div0 = claim_element(nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			header0 = claim_element(div0_nodes, "HEADER", { style: true, class: true });
			var header0_nodes = children(header0);
			header0_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			header1 = claim_element(div1_nodes, "HEADER", { style: true, class: true });
			var header1_nodes = children(header1);
			header1_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			header2 = claim_element(div2_nodes, "HEADER", { style: true, class: true });
			var header2_nodes = children(header2);
			header2_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t3 = claim_space(nodes);
			div3 = claim_element(nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			header3 = claim_element(div3_nodes, "HEADER", { style: true, class: true });
			var header3_nodes = children(header3);
			header3_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);
			div4 = claim_element(nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			header4 = claim_element(div4_nodes, "HEADER", { style: true, class: true });
			var header4_nodes = children(header4);
			header4_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t5 = claim_space(nodes);
			div5 = claim_element(nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			header5 = claim_element(div5_nodes, "HEADER", { style: true, class: true });
			var header5_nodes = children(header5);
			header5_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t6 = claim_space(nodes);
			div6 = claim_element(nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			header6 = claim_element(div6_nodes, "HEADER", { style: true, class: true });
			var header6_nodes = children(header6);
			header6_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t7 = claim_space(nodes);
			div7 = claim_element(nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			header7 = claim_element(div7_nodes, "HEADER", { style: true, class: true });
			var header7_nodes = children(header7);
			header7_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			t8 = claim_space(nodes);
			div8 = claim_element(nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			header8 = claim_element(div8_nodes, "HEADER", { style: true, class: true });
			var header8_nodes = children(header8);
			header8_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			t9 = claim_space(nodes);
			div9 = claim_element(nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			header9 = claim_element(div9_nodes, "HEADER", { style: true, class: true });
			var header9_nodes = children(header9);
			header9_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			t10 = claim_space(nodes);
			div10 = claim_element(nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			header10 = claim_element(div10_nodes, "HEADER", { style: true, class: true });
			var header10_nodes = children(header10);
			header10_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			t11 = claim_space(nodes);
			div11 = claim_element(nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			header11 = claim_element(div11_nodes, "HEADER", { style: true, class: true });
			var header11_nodes = children(header11);
			header11_nodes.forEach(detach_dev);
			div11_nodes.forEach(detach_dev);
			t12 = claim_space(nodes);
			div12 = claim_element(nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			header12 = claim_element(div12_nodes, "HEADER", { style: true, class: true });
			var header12_nodes = children(header12);
			header12_nodes.forEach(detach_dev);
			div12_nodes.forEach(detach_dev);
			t13 = claim_space(nodes);
			div13 = claim_element(nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			header13 = claim_element(div13_nodes, "HEADER", { style: true, class: true });
			var header13_nodes = children(header13);
			header13_nodes.forEach(detach_dev);
			div13_nodes.forEach(detach_dev);
			t14 = claim_space(nodes);
			div14 = claim_element(nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			header14 = claim_element(div14_nodes, "HEADER", { style: true, class: true });
			var header14_nodes = children(header14);
			header14_nodes.forEach(detach_dev);
			div14_nodes.forEach(detach_dev);
			t15 = claim_space(nodes);
			div15 = claim_element(nodes, "DIV", { class: true });
			var div15_nodes = children(div15);
			header15 = claim_element(div15_nodes, "HEADER", { style: true, class: true });
			var header15_nodes = children(header15);
			header15_nodes.forEach(detach_dev);
			div15_nodes.forEach(detach_dev);
			t16 = claim_space(nodes);
			div16 = claim_element(nodes, "DIV", { class: true });
			var div16_nodes = children(div16);
			header16 = claim_element(div16_nodes, "HEADER", { style: true, class: true });
			var header16_nodes = children(header16);
			header16_nodes.forEach(detach_dev);
			div16_nodes.forEach(detach_dev);
			t17 = claim_space(nodes);
			div17 = claim_element(nodes, "DIV", { class: true });
			var div17_nodes = children(div17);
			header17 = claim_element(div17_nodes, "HEADER", { style: true, class: true });
			var header17_nodes = children(header17);
			header17_nodes.forEach(detach_dev);
			div17_nodes.forEach(detach_dev);
			t18 = claim_space(nodes);
			div18 = claim_element(nodes, "DIV", { class: true });
			var div18_nodes = children(div18);
			header18 = claim_element(div18_nodes, "HEADER", { style: true, class: true });
			var header18_nodes = children(header18);
			header18_nodes.forEach(detach_dev);
			div18_nodes.forEach(detach_dev);
			t19 = claim_space(nodes);
			div19 = claim_element(nodes, "DIV", { class: true });
			var div19_nodes = children(div19);
			header19 = claim_element(div19_nodes, "HEADER", { style: true, class: true });
			var header19_nodes = children(header19);
			header19_nodes.forEach(detach_dev);
			div19_nodes.forEach(detach_dev);
			t20 = claim_space(nodes);
			div20 = claim_element(nodes, "DIV", { class: true });
			var div20_nodes = children(div20);
			header20 = claim_element(div20_nodes, "HEADER", { style: true, class: true });
			var header20_nodes = children(header20);
			header20_nodes.forEach(detach_dev);
			div20_nodes.forEach(detach_dev);
			t21 = claim_space(nodes);
			div21 = claim_element(nodes, "DIV", { class: true });
			var div21_nodes = children(div21);
			header21 = claim_element(div21_nodes, "HEADER", { style: true, class: true });
			var header21_nodes = children(header21);
			header21_nodes.forEach(detach_dev);
			div21_nodes.forEach(detach_dev);
			t22 = claim_space(nodes);
			this.h();
		},
		h: function hydrate() {
			set_style(header0, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/GrandchildrenWithBarb.jpg)");
			attr_dev(header0, "class", "svelte-18paw8z");
			add_location(header0, file$7, 25, 12, 643);
			attr_dev(div0, "class", "slide-content svelte-18paw8z");
			add_location(div0, file$7, 24, 8, 602);
			set_style(header1, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/Cheese.jpg)");
			attr_dev(header1, "class", "svelte-18paw8z");
			add_location(header1, file$7, 29, 12, 842);
			attr_dev(div1, "class", "slide-content svelte-18paw8z");
			add_location(div1, file$7, 28, 8, 801);
			set_style(header2, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/MovingDay.jpg)");
			attr_dev(header2, "class", "svelte-18paw8z");
			add_location(header2, file$7, 33, 12, 1028);
			attr_dev(div2, "class", "slide-content svelte-18paw8z");
			add_location(div2, file$7, 32, 8, 987);
			set_style(header3, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/FireAndIce.jpg)");
			attr_dev(header3, "class", "svelte-18paw8z");
			add_location(header3, file$7, 37, 12, 1215);
			attr_dev(div3, "class", "slide-content svelte-18paw8z");
			add_location(div3, file$7, 36, 8, 1174);
			set_style(header4, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/WithLiam.jpg)");
			attr_dev(header4, "class", "svelte-18paw8z");
			add_location(header4, file$7, 41, 12, 1404);
			attr_dev(div4, "class", "slide-content svelte-18paw8z");
			add_location(div4, file$7, 40, 8, 1363);
			set_style(header5, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/Lake.jpg)");
			attr_dev(header5, "class", "svelte-18paw8z");
			add_location(header5, file$7, 45, 12, 1590);
			attr_dev(div5, "class", "slide-content svelte-18paw8z");
			add_location(div5, file$7, 44, 8, 1549);
			set_style(header6, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/WithNora.jpg)");
			attr_dev(header6, "class", "svelte-18paw8z");
			add_location(header6, file$7, 49, 12, 1773);
			attr_dev(div6, "class", "slide-content svelte-18paw8z");
			add_location(div6, file$7, 48, 8, 1732);
			set_style(header7, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/Masks.jpg)");
			attr_dev(header7, "class", "svelte-18paw8z");
			add_location(header7, file$7, 53, 12, 1959);
			attr_dev(div7, "class", "slide-content svelte-18paw8z");
			add_location(div7, file$7, 52, 8, 1918);
			set_style(header8, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/CarenaAndDog.jpg)");
			attr_dev(header8, "class", "svelte-18paw8z");
			add_location(header8, file$7, 57, 12, 2142);
			attr_dev(div8, "class", "slide-content svelte-18paw8z");
			add_location(div8, file$7, 56, 8, 2101);
			set_style(header9, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/Masks2.jpg)");
			attr_dev(header9, "class", "svelte-18paw8z");
			add_location(header9, file$7, 61, 12, 2332);
			attr_dev(div9, "class", "slide-content svelte-18paw8z");
			add_location(div9, file$7, 60, 8, 2291);
			set_style(header10, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/RhiannahAndAdam.jpg)");
			attr_dev(header10, "class", "svelte-18paw8z");
			add_location(header10, file$7, 65, 12, 2520);
			attr_dev(div10, "class", "slide-content svelte-18paw8z");
			add_location(div10, file$7, 64, 8, 2479);
			set_style(header11, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/SportsBar.jpg)");
			attr_dev(header11, "class", "svelte-18paw8z");
			add_location(header11, file$7, 69, 12, 2713);
			attr_dev(div11, "class", "slide-content svelte-18paw8z");
			add_location(div11, file$7, 68, 8, 2672);
			set_style(header12, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/SummerAndClan.jpg)");
			attr_dev(header12, "class", "svelte-18paw8z");
			add_location(header12, file$7, 73, 12, 2902);
			attr_dev(div12, "class", "slide-content svelte-18paw8z");
			add_location(div12, file$7, 72, 8, 2861);
			set_style(header13, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/StPatricksDay.jpg)");
			attr_dev(header13, "class", "svelte-18paw8z");
			add_location(header13, file$7, 77, 12, 3093);
			attr_dev(div13, "class", "slide-content svelte-18paw8z");
			add_location(div13, file$7, 76, 8, 3052);
			set_style(header14, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/ToryAndCarenaAndBri.jpg)");
			attr_dev(header14, "class", "svelte-18paw8z");
			add_location(header14, file$7, 81, 12, 3284);
			attr_dev(div14, "class", "slide-content svelte-18paw8z");
			add_location(div14, file$7, 80, 8, 3243);
			set_style(header15, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/ToryAndClan.jpg)");
			attr_dev(header15, "class", "svelte-18paw8z");
			add_location(header15, file$7, 85, 12, 3481);
			attr_dev(div15, "class", "slide-content svelte-18paw8z");
			add_location(div15, file$7, 84, 8, 3440);
			set_style(header16, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/AustinAndClan.jpg)");
			attr_dev(header16, "class", "svelte-18paw8z");
			add_location(header16, file$7, 89, 12, 3670);
			attr_dev(div16, "class", "slide-content svelte-18paw8z");
			add_location(div16, file$7, 88, 8, 3629);
			set_style(header17, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/Grandchildren.jpg)");
			attr_dev(header17, "class", "svelte-18paw8z");
			add_location(header17, file$7, 93, 12, 3869);
			attr_dev(div17, "class", "slide-content svelte-18paw8z");
			add_location(div17, file$7, 92, 8, 3828);
			set_style(header18, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/ShannonAndClan.jpg)");
			attr_dev(header18, "class", "svelte-18paw8z");
			add_location(header18, file$7, 97, 12, 4060);
			attr_dev(div18, "class", "slide-content svelte-18paw8z");
			add_location(div18, file$7, 96, 8, 4019);
			set_style(header19, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/WithRhiannah.jpg)");
			attr_dev(header19, "class", "svelte-18paw8z");
			add_location(header19, file$7, 101, 12, 4252);
			attr_dev(div19, "class", "slide-content svelte-18paw8z");
			add_location(div19, file$7, 100, 8, 4211);
			set_style(header20, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/LisaAndAdam.jpg)");
			attr_dev(header20, "class", "svelte-18paw8z");
			add_location(header20, file$7, 105, 12, 4442);
			attr_dev(div20, "class", "slide-content svelte-18paw8z");
			add_location(div20, file$7, 104, 8, 4401);
			set_style(header21, "background-image", "url(https://lisaandtimpictures.s3.amazonaws.com/NanaAndPoppop.jpg)");
			attr_dev(header21, "class", "svelte-18paw8z");
			add_location(header21, file$7, 109, 12, 4631);
			attr_dev(div21, "class", "slide-content svelte-18paw8z");
			add_location(div21, file$7, 108, 8, 4590);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div0, anchor);
			append_dev(div0, header0);
			insert_dev(target, t1, anchor);
			insert_dev(target, div1, anchor);
			append_dev(div1, header1);
			insert_dev(target, t2, anchor);
			insert_dev(target, div2, anchor);
			append_dev(div2, header2);
			insert_dev(target, t3, anchor);
			insert_dev(target, div3, anchor);
			append_dev(div3, header3);
			insert_dev(target, t4, anchor);
			insert_dev(target, div4, anchor);
			append_dev(div4, header4);
			insert_dev(target, t5, anchor);
			insert_dev(target, div5, anchor);
			append_dev(div5, header5);
			insert_dev(target, t6, anchor);
			insert_dev(target, div6, anchor);
			append_dev(div6, header6);
			insert_dev(target, t7, anchor);
			insert_dev(target, div7, anchor);
			append_dev(div7, header7);
			insert_dev(target, t8, anchor);
			insert_dev(target, div8, anchor);
			append_dev(div8, header8);
			insert_dev(target, t9, anchor);
			insert_dev(target, div9, anchor);
			append_dev(div9, header9);
			insert_dev(target, t10, anchor);
			insert_dev(target, div10, anchor);
			append_dev(div10, header10);
			insert_dev(target, t11, anchor);
			insert_dev(target, div11, anchor);
			append_dev(div11, header11);
			insert_dev(target, t12, anchor);
			insert_dev(target, div12, anchor);
			append_dev(div12, header12);
			insert_dev(target, t13, anchor);
			insert_dev(target, div13, anchor);
			append_dev(div13, header13);
			insert_dev(target, t14, anchor);
			insert_dev(target, div14, anchor);
			append_dev(div14, header14);
			insert_dev(target, t15, anchor);
			insert_dev(target, div15, anchor);
			append_dev(div15, header15);
			insert_dev(target, t16, anchor);
			insert_dev(target, div16, anchor);
			append_dev(div16, header16);
			insert_dev(target, t17, anchor);
			insert_dev(target, div17, anchor);
			append_dev(div17, header17);
			insert_dev(target, t18, anchor);
			insert_dev(target, div18, anchor);
			append_dev(div18, header18);
			insert_dev(target, t19, anchor);
			insert_dev(target, div19, anchor);
			append_dev(div19, header19);
			insert_dev(target, t20, anchor);
			insert_dev(target, div20, anchor);
			append_dev(div20, header20);
			insert_dev(target, t21, anchor);
			insert_dev(target, div21, anchor);
			append_dev(div21, header21);
			insert_dev(target, t22, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(div1);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(div2);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(div3);
			if (detaching) detach_dev(t4);
			if (detaching) detach_dev(div4);
			if (detaching) detach_dev(t5);
			if (detaching) detach_dev(div5);
			if (detaching) detach_dev(t6);
			if (detaching) detach_dev(div6);
			if (detaching) detach_dev(t7);
			if (detaching) detach_dev(div7);
			if (detaching) detach_dev(t8);
			if (detaching) detach_dev(div8);
			if (detaching) detach_dev(t9);
			if (detaching) detach_dev(div9);
			if (detaching) detach_dev(t10);
			if (detaching) detach_dev(div10);
			if (detaching) detach_dev(t11);
			if (detaching) detach_dev(div11);
			if (detaching) detach_dev(t12);
			if (detaching) detach_dev(div12);
			if (detaching) detach_dev(t13);
			if (detaching) detach_dev(div13);
			if (detaching) detach_dev(t14);
			if (detaching) detach_dev(div14);
			if (detaching) detach_dev(t15);
			if (detaching) detach_dev(div15);
			if (detaching) detach_dev(t16);
			if (detaching) detach_dev(div16);
			if (detaching) detach_dev(t17);
			if (detaching) detach_dev(div17);
			if (detaching) detach_dev(t18);
			if (detaching) detach_dev(div18);
			if (detaching) detach_dev(t19);
			if (detaching) detach_dev(div19);
			if (detaching) detach_dev(t20);
			if (detaching) detach_dev(div20);
			if (detaching) detach_dev(t21);
			if (detaching) detach_dev(div21);
			if (detaching) detach_dev(t22);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(21:4) <Carousel {...carousel} dots={false}>",
		ctx
	});

	return block;
}

// (20:4) {#each carousels as carousel}
function create_each_block$1(ctx) {
	let carousel;
	let t0;
	let br0;
	let t1;
	let br1;
	let current;
	const carousel_spread_levels = [/*carousel*/ ctx[1], { dots: false }];

	let carousel_props = {
		$$slots: {
			default: [create_default_slot],
			"right-control": [create_right_control_slot],
			"left-control": [create_left_control_slot]
		},
		$$scope: { ctx }
	};

	for (let i = 0; i < carousel_spread_levels.length; i += 1) {
		carousel_props = assign(carousel_props, carousel_spread_levels[i]);
	}

	carousel = new Carousel({ props: carousel_props, $$inline: true });

	const block = {
		c: function create() {
			create_component(carousel.$$.fragment);
			t0 = space();
			br0 = element("br");
			t1 = space();
			br1 = element("br");
			this.h();
		},
		l: function claim(nodes) {
			claim_component(carousel.$$.fragment, nodes);
			t0 = claim_space(nodes);
			br0 = claim_element(nodes, "BR", {});
			t1 = claim_space(nodes);
			br1 = claim_element(nodes, "BR", {});
			this.h();
		},
		h: function hydrate() {
			add_location(br0, file$7, 116, 4, 4898);
			add_location(br1, file$7, 117, 4, 4909);
		},
		m: function mount(target, anchor) {
			mount_component(carousel, target, anchor);
			insert_dev(target, t0, anchor);
			insert_dev(target, br0, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, br1, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const carousel_changes = (dirty & /*carousels*/ 1)
			? get_spread_update(carousel_spread_levels, [get_spread_object(/*carousel*/ ctx[1]), carousel_spread_levels[1]])
			: {};

			if (dirty & /*$$scope*/ 16) {
				carousel_changes.$$scope = { dirty, ctx };
			}

			carousel.$set(carousel_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(carousel.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(carousel.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(carousel, detaching);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(br0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(br1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block$1.name,
		type: "each",
		source: "(20:4) {#each carousels as carousel}",
		ctx
	});

	return block;
}

function create_fragment$7(ctx) {
	let section;
	let h1;
	let t0;
	let t1;
	let img;
	let img_src_value;
	let t2;
	let div;
	let current;
	let each_value = /*carousels*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			section = element("section");
			h1 = element("h1");
			t0 = text("Our Clan");
			t1 = space();
			img = element("img");
			t2 = space();
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			h1 = claim_element(section_nodes, "H1", {});
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "Our Clan");
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(section_nodes);
			img = claim_element(section_nodes, "IMG", { alt: true, class: true, src: true });
			section_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h1, file$7, 15, 4, 272);
			attr_dev(img, "alt", "Heading Decoration");
			attr_dev(img, "class", "headingDecorator svelte-18paw8z");
			if (img.src !== (img_src_value = "./HeadingDecorator.png")) attr_dev(img, "src", img_src_value);
			add_location(img, file$7, 16, 4, 295);
			attr_dev(section, "class", "clan");
			add_location(section, file$7, 14, 0, 244);
			attr_dev(div, "class", "demo svelte-18paw8z");
			add_location(div, file$7, 18, 0, 394);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, h1);
			append_dev(h1, t0);
			append_dev(section, t1);
			append_dev(section, img);
			insert_dev(target, t2, anchor);
			insert_dev(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*carousels*/ 1) {
				each_value = /*carousels*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context$1(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block$1(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$7.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$7($$self, $$props, $$invalidate) {
	let carousels = [{ perPage: 1 }, { perPage: 1, controls: false }];
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Clan> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Clan", $$slots, []);

	$$self.$capture_state = () => ({
		Carousel,
		ChevronLeftIcon,
		ChevronRightIcon,
		carousels
	});

	$$self.$inject_state = $$props => {
		if ("carousels" in $$props) $$invalidate(0, carousels = $$props.carousels);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [carousels];
}

class Clan extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$7, create_fragment$7, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Clan",
			options,
			id: create_fragment$7.name
		});
	}
}

/* src\routes\_components\ToastForm.svelte generated by Svelte v3.23.2 */
const file$8 = "src\\routes\\_components\\ToastForm.svelte";

// (40:12) {:else}
function create_else_block_1(ctx) {
	let p;
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text("Propose a Toast...");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, "Propose a Toast...");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "heading svelte-1tmojol");
			add_location(p, file$8, 40, 16, 1232);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block_1.name,
		type: "else",
		source: "(40:12) {:else}",
		ctx
	});

	return block;
}

// (38:12) {#if isEdittingToast}
function create_if_block_3(ctx) {
	let p;
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text("Editting Toast...");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, "Editting Toast...");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "heading svelte-1tmojol");
			add_location(p, file$8, 38, 16, 1153);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(38:12) {#if isEdittingToast}",
		ctx
	});

	return block;
}

// (68:8) {#if !isLoggedIn}
function create_if_block_2(ctx) {
	let button;
	let t;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			button = element("button");
			t = text("Log in with Facebook to Propose");
			this.h();
		},
		l: function claim(nodes) {
			button = claim_element(nodes, "BUTTON", { class: true });
			var button_nodes = children(button);
			t = claim_text(button_nodes, "Log in with Facebook to Propose");
			button_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(button, "class", "facebook-button svelte-1tmojol");
			add_location(button, file$8, 68, 12, 2573);
		},
		m: function mount(target, anchor) {
			insert_dev(target, button, anchor);
			append_dev(button, t);

			if (!mounted) {
				dispose = listen_dev(button, "click", /*logIn*/ ctx[5], false, false, false);
				mounted = true;
			}
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(button);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(68:8) {#if !isLoggedIn}",
		ctx
	});

	return block;
}

// (71:8) {#if isLoggedIn}
function create_if_block$1(ctx) {
	let if_block_anchor;

	function select_block_type_1(ctx, dirty) {
		if (/*isEdittingToast*/ ctx[2]) return create_if_block_1$1;
		return create_else_block;
	}

	let current_block_type = select_block_type_1(ctx);
	let if_block = current_block_type(ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (current_block_type === (current_block_type = select_block_type_1(ctx)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			}
		},
		d: function destroy(detaching) {
			if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$1.name,
		type: "if",
		source: "(71:8) {#if isLoggedIn}",
		ctx
	});

	return block;
}

// (74:12) {:else}
function create_else_block(ctx) {
	let button;
	let t;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			button = element("button");
			t = text("Propose!");
			this.h();
		},
		l: function claim(nodes) {
			button = claim_element(nodes, "BUTTON", { class: true });
			var button_nodes = children(button);
			t = claim_text(button_nodes, "Propose!");
			button_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(button, "class", "propose-button svelte-1tmojol");
			add_location(button, file$8, 74, 16, 2865);
		},
		m: function mount(target, anchor) {
			insert_dev(target, button, anchor);
			append_dev(button, t);

			if (!mounted) {
				dispose = listen_dev(button, "click", /*proposeToast*/ ctx[3], false, false, false);
				mounted = true;
			}
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(button);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(74:12) {:else}",
		ctx
	});

	return block;
}

// (72:12) {#if isEdittingToast}
function create_if_block_1$1(ctx) {
	let button;
	let t;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			button = element("button");
			t = text("Update!");
			this.h();
		},
		l: function claim(nodes) {
			button = claim_element(nodes, "BUTTON", { class: true });
			var button_nodes = children(button);
			t = claim_text(button_nodes, "Update!");
			button_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(button, "class", "propose-button svelte-1tmojol");
			add_location(button, file$8, 72, 16, 2756);
		},
		m: function mount(target, anchor) {
			insert_dev(target, button, anchor);
			append_dev(button, t);

			if (!mounted) {
				dispose = listen_dev(button, "click", /*updateToast*/ ctx[4], false, false, false);
				mounted = true;
			}
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(button);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1$1.name,
		type: "if",
		source: "(72:12) {#if isEdittingToast}",
		ctx
	});

	return block;
}

function create_fragment$8(ctx) {
	let section;
	let div5;
	let div0;
	let t0;
	let input;
	let input_disabled_value;
	let t1;
	let div4;
	let div1;
	let select0;
	let option0;
	let t2;
	let option1;
	let t3;
	let option2;
	let t4;
	let option3;
	let t5;
	let option4;
	let t6;
	let option5;
	let t7;
	let option6;
	let t8;
	let option7;
	let t9;
	let select0_disabled_value;
	let t10;
	let div2;
	let t11;
	let t12;
	let div3;
	let select1;
	let option8;
	let t13;
	let option9;
	let t14;
	let select1_disabled_value;
	let t15;
	let textarea;
	let textarea_disabled_value;
	let t16;
	let br;
	let t17;
	let t18;
	let mounted;
	let dispose;

	function select_block_type(ctx, dirty) {
		if (/*isEdittingToast*/ ctx[2]) return create_if_block_3;
		return create_else_block_1;
	}

	let current_block_type = select_block_type(ctx);
	let if_block0 = current_block_type(ctx);
	let if_block1 = !/*isLoggedIn*/ ctx[1] && create_if_block_2(ctx);
	let if_block2 = /*isLoggedIn*/ ctx[1] && create_if_block$1(ctx);

	const block = {
		c: function create() {
			section = element("section");
			div5 = element("div");
			div0 = element("div");
			if_block0.c();
			t0 = space();
			input = element("input");
			t1 = space();
			div4 = element("div");
			div1 = element("div");
			select0 = element("select");
			option0 = element("option");
			t2 = text("Father");
			option1 = element("option");
			t3 = text("Mother");
			option2 = element("option");
			t4 = text("Brother");
			option3 = element("option");
			t5 = text("Sister");
			option4 = element("option");
			t6 = text("Son");
			option5 = element("option");
			t7 = text("Daughter");
			option6 = element("option");
			t8 = text("Relative");
			option7 = element("option");
			t9 = text("Friend");
			t10 = space();
			div2 = element("div");
			t11 = text("of the");
			t12 = space();
			div3 = element("div");
			select1 = element("select");
			option8 = element("option");
			t13 = text("Groom");
			option9 = element("option");
			t14 = text("Bride");
			t15 = space();
			textarea = element("textarea");
			t16 = space();
			br = element("br");
			t17 = space();
			if (if_block1) if_block1.c();
			t18 = space();
			if (if_block2) if_block2.c();
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div5 = claim_element(section_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div0 = claim_element(div5_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			if_block0.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(div5_nodes);

			input = claim_element(div5_nodes, "INPUT", {
				type: true,
				disabled: true,
				placeholder: true,
				class: true
			});

			t1 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div1 = claim_element(div4_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			select0 = claim_element(div1_nodes, "SELECT", { disabled: true, class: true });
			var select0_nodes = children(select0);
			option0 = claim_element(select0_nodes, "OPTION", { value: true, selected: true });
			var option0_nodes = children(option0);
			t2 = claim_text(option0_nodes, "Father");
			option0_nodes.forEach(detach_dev);
			option1 = claim_element(select0_nodes, "OPTION", { value: true });
			var option1_nodes = children(option1);
			t3 = claim_text(option1_nodes, "Mother");
			option1_nodes.forEach(detach_dev);
			option2 = claim_element(select0_nodes, "OPTION", { value: true });
			var option2_nodes = children(option2);
			t4 = claim_text(option2_nodes, "Brother");
			option2_nodes.forEach(detach_dev);
			option3 = claim_element(select0_nodes, "OPTION", { value: true });
			var option3_nodes = children(option3);
			t5 = claim_text(option3_nodes, "Sister");
			option3_nodes.forEach(detach_dev);
			option4 = claim_element(select0_nodes, "OPTION", { value: true });
			var option4_nodes = children(option4);
			t6 = claim_text(option4_nodes, "Son");
			option4_nodes.forEach(detach_dev);
			option5 = claim_element(select0_nodes, "OPTION", { value: true });
			var option5_nodes = children(option5);
			t7 = claim_text(option5_nodes, "Daughter");
			option5_nodes.forEach(detach_dev);
			option6 = claim_element(select0_nodes, "OPTION", { value: true });
			var option6_nodes = children(option6);
			t8 = claim_text(option6_nodes, "Relative");
			option6_nodes.forEach(detach_dev);
			option7 = claim_element(select0_nodes, "OPTION", { value: true });
			var option7_nodes = children(option7);
			t9 = claim_text(option7_nodes, "Friend");
			option7_nodes.forEach(detach_dev);
			select0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t10 = claim_space(div4_nodes);
			div2 = claim_element(div4_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			t11 = claim_text(div2_nodes, "of the");
			div2_nodes.forEach(detach_dev);
			t12 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			select1 = claim_element(div3_nodes, "SELECT", { disabled: true, class: true });
			var select1_nodes = children(select1);
			option8 = claim_element(select1_nodes, "OPTION", { value: true, selected: true });
			var option8_nodes = children(option8);
			t13 = claim_text(option8_nodes, "Groom");
			option8_nodes.forEach(detach_dev);
			option9 = claim_element(select1_nodes, "OPTION", { value: true });
			var option9_nodes = children(option9);
			t14 = claim_text(option9_nodes, "Bride");
			option9_nodes.forEach(detach_dev);
			select1_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t15 = claim_space(div5_nodes);

			textarea = claim_element(div5_nodes, "TEXTAREA", {
				disabled: true,
				rows: true,
				placeholder: true,
				class: true
			});

			children(textarea).forEach(detach_dev);
			t16 = claim_space(div5_nodes);
			br = claim_element(div5_nodes, "BR", {});
			t17 = claim_space(div5_nodes);
			if (if_block1) if_block1.l(div5_nodes);
			t18 = claim_space(div5_nodes);
			if (if_block2) if_block2.l(div5_nodes);
			div5_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "header svelte-1tmojol");
			add_location(div0, file$8, 36, 8, 1080);
			attr_dev(input, "type", "text");
			input.disabled = input_disabled_value = !/*isLoggedIn*/ ctx[1];
			attr_dev(input, "placeholder", "Name");
			attr_dev(input, "class", "svelte-1tmojol");
			add_location(input, file$8, 43, 8, 1318);
			option0.__value = "Father";
			option0.value = option0.__value;
			option0.selected = true;
			add_location(option0, file$8, 47, 16, 1581);
			option1.__value = "Mother";
			option1.value = option1.__value;
			add_location(option1, file$8, 48, 16, 1646);
			option2.__value = "Brother";
			option2.value = option2.__value;
			add_location(option2, file$8, 49, 16, 1702);
			option3.__value = "Sister";
			option3.value = option3.__value;
			add_location(option3, file$8, 50, 16, 1760);
			option4.__value = "Son";
			option4.value = option4.__value;
			add_location(option4, file$8, 51, 16, 1816);
			option5.__value = "Daughter";
			option5.value = option5.__value;
			add_location(option5, file$8, 52, 16, 1866);
			option6.__value = "Relative";
			option6.value = option6.__value;
			add_location(option6, file$8, 53, 16, 1926);
			option7.__value = "Friend";
			option7.value = option7.__value;
			add_location(option7, file$8, 54, 16, 1986);
			select0.disabled = select0_disabled_value = !/*isLoggedIn*/ ctx[1];
			attr_dev(select0, "class", "svelte-1tmojol");
			if (/*toast*/ ctx[0].toasterRelationship === void 0) add_render_callback(() => /*select0_change_handler*/ ctx[8].call(select0));
			add_location(select0, file$8, 46, 12, 1493);
			attr_dev(div1, "class", "selectstuff svelte-1tmojol");
			add_location(div1, file$8, 45, 8, 1454);
			attr_dev(div2, "class", "selectstuff svelte-1tmojol");
			add_location(div2, file$8, 57, 8, 2073);
			option8.__value = "Groom";
			option8.value = option8.__value;
			option8.selected = true;
			add_location(option8, file$8, 60, 16, 2246);
			option9.__value = "Bride";
			option9.value = option9.__value;
			add_location(option9, file$8, 61, 16, 2309);
			select1.disabled = select1_disabled_value = !/*isLoggedIn*/ ctx[1];
			attr_dev(select1, "class", "svelte-1tmojol");
			if (/*toast*/ ctx[0].toasterAssociation === void 0) add_render_callback(() => /*select1_change_handler*/ ctx[9].call(select1));
			add_location(select1, file$8, 59, 12, 2159);
			attr_dev(div3, "class", "selectstuff svelte-1tmojol");
			add_location(div3, file$8, 58, 8, 2120);
			attr_dev(div4, "class", "container svelte-1tmojol");
			add_location(div4, file$8, 44, 8, 1421);
			textarea.disabled = textarea_disabled_value = !/*isLoggedIn*/ ctx[1];
			attr_dev(textarea, "rows", "7");
			attr_dev(textarea, "placeholder", "Message");
			attr_dev(textarea, "class", "svelte-1tmojol");
			add_location(textarea, file$8, 65, 8, 2410);
			add_location(br, file$8, 66, 8, 2527);
			attr_dev(div5, "class", "form svelte-1tmojol");
			add_location(div5, file$8, 35, 4, 1052);
			attr_dev(section, "class", "propose svelte-1tmojol");
			add_location(section, file$8, 34, 0, 1021);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, div5);
			append_dev(div5, div0);
			if_block0.m(div0, null);
			append_dev(div5, t0);
			append_dev(div5, input);
			set_input_value(input, /*toast*/ ctx[0].toasterName);
			append_dev(div5, t1);
			append_dev(div5, div4);
			append_dev(div4, div1);
			append_dev(div1, select0);
			append_dev(select0, option0);
			append_dev(option0, t2);
			append_dev(select0, option1);
			append_dev(option1, t3);
			append_dev(select0, option2);
			append_dev(option2, t4);
			append_dev(select0, option3);
			append_dev(option3, t5);
			append_dev(select0, option4);
			append_dev(option4, t6);
			append_dev(select0, option5);
			append_dev(option5, t7);
			append_dev(select0, option6);
			append_dev(option6, t8);
			append_dev(select0, option7);
			append_dev(option7, t9);
			select_option(select0, /*toast*/ ctx[0].toasterRelationship);
			append_dev(div4, t10);
			append_dev(div4, div2);
			append_dev(div2, t11);
			append_dev(div4, t12);
			append_dev(div4, div3);
			append_dev(div3, select1);
			append_dev(select1, option8);
			append_dev(option8, t13);
			append_dev(select1, option9);
			append_dev(option9, t14);
			select_option(select1, /*toast*/ ctx[0].toasterAssociation);
			append_dev(div5, t15);
			append_dev(div5, textarea);
			set_input_value(textarea, /*toast*/ ctx[0].toastContent);
			append_dev(div5, t16);
			append_dev(div5, br);
			append_dev(div5, t17);
			if (if_block1) if_block1.m(div5, null);
			append_dev(div5, t18);
			if (if_block2) if_block2.m(div5, null);

			if (!mounted) {
				dispose = [
					listen_dev(input, "input", /*input_input_handler*/ ctx[7]),
					listen_dev(select0, "change", /*select0_change_handler*/ ctx[8]),
					listen_dev(select1, "change", /*select1_change_handler*/ ctx[9]),
					listen_dev(textarea, "input", /*textarea_input_handler*/ ctx[10])
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (current_block_type !== (current_block_type = select_block_type(ctx))) {
				if_block0.d(1);
				if_block0 = current_block_type(ctx);

				if (if_block0) {
					if_block0.c();
					if_block0.m(div0, null);
				}
			}

			if (dirty & /*isLoggedIn*/ 2 && input_disabled_value !== (input_disabled_value = !/*isLoggedIn*/ ctx[1])) {
				prop_dev(input, "disabled", input_disabled_value);
			}

			if (dirty & /*toast*/ 1 && input.value !== /*toast*/ ctx[0].toasterName) {
				set_input_value(input, /*toast*/ ctx[0].toasterName);
			}

			if (dirty & /*isLoggedIn*/ 2 && select0_disabled_value !== (select0_disabled_value = !/*isLoggedIn*/ ctx[1])) {
				prop_dev(select0, "disabled", select0_disabled_value);
			}

			if (dirty & /*toast*/ 1) {
				select_option(select0, /*toast*/ ctx[0].toasterRelationship);
			}

			if (dirty & /*isLoggedIn*/ 2 && select1_disabled_value !== (select1_disabled_value = !/*isLoggedIn*/ ctx[1])) {
				prop_dev(select1, "disabled", select1_disabled_value);
			}

			if (dirty & /*toast*/ 1) {
				select_option(select1, /*toast*/ ctx[0].toasterAssociation);
			}

			if (dirty & /*isLoggedIn*/ 2 && textarea_disabled_value !== (textarea_disabled_value = !/*isLoggedIn*/ ctx[1])) {
				prop_dev(textarea, "disabled", textarea_disabled_value);
			}

			if (dirty & /*toast*/ 1) {
				set_input_value(textarea, /*toast*/ ctx[0].toastContent);
			}

			if (!/*isLoggedIn*/ ctx[1]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block_2(ctx);
					if_block1.c();
					if_block1.m(div5, t18);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (/*isLoggedIn*/ ctx[1]) {
				if (if_block2) {
					if_block2.p(ctx, dirty);
				} else {
					if_block2 = create_if_block$1(ctx);
					if_block2.c();
					if_block2.m(div5, null);
				}
			} else if (if_block2) {
				if_block2.d(1);
				if_block2 = null;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			if_block0.d();
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$8.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$8($$self, $$props, $$invalidate) {
	
	const dispatch = createEventDispatcher();
	let { isLoggedIn } = $$props;
	let { facebookUserId } = $$props;
	let { toast } = $$props;
	let { isEdittingToast } = $$props;

	async function proposeToast() {
		if (toast.toasterName == "" || toast.toastContent == "") {
			return;
		}

		$$invalidate(0, toast.toasterFacebookId = facebookUserId, toast);

		await fetch("/api/toastController", {
			method: "POST",
			body: JSON.stringify({ toast }),
			headers: { "Content-type": "application/json" }
		}).then(response => window.location.reload());
	}

	

	async function updateToast() {
		if (toast.toasterName == "" || toast.toastContent == "") {
			return;
		}

		await fetch("/api/toastController", {
			method: "PUT",
			body: JSON.stringify({ toast }),
			headers: { "Content-type": "application/json" }
		}).then(response => window.location.reload());
	}

	function logIn() {
		dispatch("toggleLogIn");
	}

	const writable_props = ["isLoggedIn", "facebookUserId", "toast", "isEdittingToast"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<ToastForm> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("ToastForm", $$slots, []);

	function input_input_handler() {
		toast.toasterName = this.value;
		$$invalidate(0, toast);
	}

	function select0_change_handler() {
		toast.toasterRelationship = select_value(this);
		$$invalidate(0, toast);
	}

	function select1_change_handler() {
		toast.toasterAssociation = select_value(this);
		$$invalidate(0, toast);
	}

	function textarea_input_handler() {
		toast.toastContent = this.value;
		$$invalidate(0, toast);
	}

	$$self.$set = $$props => {
		if ("isLoggedIn" in $$props) $$invalidate(1, isLoggedIn = $$props.isLoggedIn);
		if ("facebookUserId" in $$props) $$invalidate(6, facebookUserId = $$props.facebookUserId);
		if ("toast" in $$props) $$invalidate(0, toast = $$props.toast);
		if ("isEdittingToast" in $$props) $$invalidate(2, isEdittingToast = $$props.isEdittingToast);
	};

	$$self.$capture_state = () => ({
		createEventDispatcher,
		dispatch,
		isLoggedIn,
		facebookUserId,
		toast,
		isEdittingToast,
		proposeToast,
		updateToast,
		logIn
	});

	$$self.$inject_state = $$props => {
		if ("isLoggedIn" in $$props) $$invalidate(1, isLoggedIn = $$props.isLoggedIn);
		if ("facebookUserId" in $$props) $$invalidate(6, facebookUserId = $$props.facebookUserId);
		if ("toast" in $$props) $$invalidate(0, toast = $$props.toast);
		if ("isEdittingToast" in $$props) $$invalidate(2, isEdittingToast = $$props.isEdittingToast);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		toast,
		isLoggedIn,
		isEdittingToast,
		proposeToast,
		updateToast,
		logIn,
		facebookUserId,
		input_input_handler,
		select0_change_handler,
		select1_change_handler,
		textarea_input_handler
	];
}

class ToastForm extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$8, create_fragment$8, safe_not_equal, {
			isLoggedIn: 1,
			facebookUserId: 6,
			toast: 0,
			isEdittingToast: 2
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ToastForm",
			options,
			id: create_fragment$8.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*isLoggedIn*/ ctx[1] === undefined && !("isLoggedIn" in props)) {
			console.warn("<ToastForm> was created without expected prop 'isLoggedIn'");
		}

		if (/*facebookUserId*/ ctx[6] === undefined && !("facebookUserId" in props)) {
			console.warn("<ToastForm> was created without expected prop 'facebookUserId'");
		}

		if (/*toast*/ ctx[0] === undefined && !("toast" in props)) {
			console.warn("<ToastForm> was created without expected prop 'toast'");
		}

		if (/*isEdittingToast*/ ctx[2] === undefined && !("isEdittingToast" in props)) {
			console.warn("<ToastForm> was created without expected prop 'isEdittingToast'");
		}
	}

	get isLoggedIn() {
		throw new Error("<ToastForm>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isLoggedIn(value) {
		throw new Error("<ToastForm>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get facebookUserId() {
		throw new Error("<ToastForm>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set facebookUserId(value) {
		throw new Error("<ToastForm>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get toast() {
		throw new Error("<ToastForm>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set toast(value) {
		throw new Error("<ToastForm>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get isEdittingToast() {
		throw new Error("<ToastForm>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isEdittingToast(value) {
		throw new Error("<ToastForm>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

function getEventsAction(component) {
    return node => {
      const events = Object.keys(component.$$.callbacks);
      const listeners = [];

      events.forEach(
          event => listeners.push(
              listen(node, event, e =>  bubble(component, e))
            )
        );
  
      return {
        destroy: () => {
            listeners.forEach(
                listener => listener()
            );
        }
      }
    };
}

/* node_modules\svelte-chota\cmp\Card.svelte generated by Svelte v3.23.2 */
const file$9 = "node_modules\\svelte-chota\\cmp\\Card.svelte";
const get_footer_slot_changes = dirty => ({});
const get_footer_slot_context = ctx => ({});
const get_header_slot_changes = dirty => ({});
const get_header_slot_context = ctx => ({});

// (12:0) {#if is_header}
function create_if_block_1$2(ctx) {
	let header;
	let current;
	const header_slot_template = /*$$slots*/ ctx[5].header;
	const header_slot = create_slot(header_slot_template, ctx, /*$$scope*/ ctx[4], get_header_slot_context);

	const block = {
		c: function create() {
			header = element("header");
			if (header_slot) header_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			header = claim_element(nodes, "HEADER", {});
			var header_nodes = children(header);
			if (header_slot) header_slot.l(header_nodes);
			header_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(header, file$9, 12, 1, 392);
		},
		m: function mount(target, anchor) {
			insert_dev(target, header, anchor);

			if (header_slot) {
				header_slot.m(header, null);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			if (header_slot) {
				if (header_slot.p && dirty & /*$$scope*/ 16) {
					update_slot(header_slot, header_slot_template, ctx, /*$$scope*/ ctx[4], dirty, get_header_slot_changes, get_header_slot_context);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(header_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(header_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(header);
			if (header_slot) header_slot.d(detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1$2.name,
		type: "if",
		source: "(12:0) {#if is_header}",
		ctx
	});

	return block;
}

// (18:0) {#if is_footer}
function create_if_block$2(ctx) {
	let footer;
	let current;
	const footer_slot_template = /*$$slots*/ ctx[5].footer;
	const footer_slot = create_slot(footer_slot_template, ctx, /*$$scope*/ ctx[4], get_footer_slot_context);

	const block = {
		c: function create() {
			footer = element("footer");
			if (footer_slot) footer_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			footer = claim_element(nodes, "FOOTER", {});
			var footer_nodes = children(footer);
			if (footer_slot) footer_slot.l(footer_nodes);
			footer_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(footer, file$9, 18, 1, 485);
		},
		m: function mount(target, anchor) {
			insert_dev(target, footer, anchor);

			if (footer_slot) {
				footer_slot.m(footer, null);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			if (footer_slot) {
				if (footer_slot.p && dirty & /*$$scope*/ 16) {
					update_slot(footer_slot, footer_slot_template, ctx, /*$$scope*/ ctx[4], dirty, get_footer_slot_changes, get_footer_slot_context);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(footer_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(footer_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(footer);
			if (footer_slot) footer_slot.d(detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$2.name,
		type: "if",
		source: "(18:0) {#if is_footer}",
		ctx
	});

	return block;
}

function create_fragment$9(ctx) {
	let div;
	let t0;
	let t1;
	let events_action;
	let current;
	let mounted;
	let dispose;
	let if_block0 = /*is_header*/ ctx[1] && create_if_block_1$2(ctx);
	const default_slot_template = /*$$slots*/ ctx[5].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[4], null);
	let if_block1 = /*is_footer*/ ctx[2] && create_if_block$2(ctx);
	let div_levels = [/*$$restProps*/ ctx[3]];
	let div_data = {};

	for (let i = 0; i < div_levels.length; i += 1) {
		div_data = assign(div_data, div_levels[i]);
	}

	const block = {
		c: function create() {
			div = element("div");
			if (if_block0) if_block0.c();
			t0 = space();
			if (default_slot) default_slot.c();
			t1 = space();
			if (if_block1) if_block1.c();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", {});
			var div_nodes = children(div);
			if (if_block0) if_block0.l(div_nodes);
			t0 = claim_space(div_nodes);
			if (default_slot) default_slot.l(div_nodes);
			t1 = claim_space(div_nodes);
			if (if_block1) if_block1.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			set_attributes(div, div_data);
			toggle_class(div, "card", 1);
			add_location(div, file$9, 10, 0, 326);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			if (if_block0) if_block0.m(div, null);
			append_dev(div, t0);

			if (default_slot) {
				default_slot.m(div, null);
			}

			append_dev(div, t1);
			if (if_block1) if_block1.m(div, null);
			current = true;

			if (!mounted) {
				dispose = action_destroyer(events_action = /*events*/ ctx[0].call(null, div));
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (/*is_header*/ ctx[1]) if_block0.p(ctx, dirty);

			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 16) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[4], dirty, null, null);
				}
			}

			if (/*is_footer*/ ctx[2]) if_block1.p(ctx, dirty);
			set_attributes(div, div_data = get_spread_update(div_levels, [dirty & /*$$restProps*/ 8 && /*$$restProps*/ ctx[3]]));
			toggle_class(div, "card", 1);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block0);
			transition_in(default_slot, local);
			transition_in(if_block1);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block0);
			transition_out(default_slot, local);
			transition_out(if_block1);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (if_block0) if_block0.d();
			if (default_slot) default_slot.d(detaching);
			if (if_block1) if_block1.d();
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$9.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$9($$self, $$props, $$invalidate) {
	const omit_props_names = [];
	let $$restProps = compute_rest_props($$props, omit_props_names);
	const events = getEventsAction(current_component);
	let is_header = $$props.$$slots && $$props.$$slots.header !== undefined;
	let is_footer = $$props.$$slots && $$props.$$slots.footer !== undefined;
	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Card", $$slots, ['header','default','footer']);

	$$self.$set = $$new_props => {
		$$invalidate(6, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
		$$invalidate(3, $$restProps = compute_rest_props($$props, omit_props_names));
		if ("$$scope" in $$new_props) $$invalidate(4, $$scope = $$new_props.$$scope);
	};

	$$self.$capture_state = () => ({
		getEventsAction,
		current_component,
		events,
		is_header,
		is_footer
	});

	$$self.$inject_state = $$new_props => {
		$$invalidate(6, $$props = assign(assign({}, $$props), $$new_props));
		if ("is_header" in $$props) $$invalidate(1, is_header = $$new_props.is_header);
		if ("is_footer" in $$props) $$invalidate(2, is_footer = $$new_props.is_footer);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$props = exclude_internal_props($$props);
	return [events, is_header, is_footer, $$restProps, $$scope, $$slots];
}

class Card extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$9, create_fragment$9, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Card",
			options,
			id: create_fragment$9.name
		});
	}
}

/* node_modules\svelte-chota\cmp\Icon.svelte generated by Svelte v3.23.2 */
const file$a = "node_modules\\svelte-chota\\cmp\\Icon.svelte";

// (80:0) {:else}
function create_else_block$1(ctx) {
	let svg;
	let events_action;
	let mounted;
	let dispose;

	function select_block_type_1(ctx, dirty) {
		if (/*spin*/ ctx[0] !== false) return create_if_block_2$1;
		return create_else_block_1$1;
	}

	let current_block_type = select_block_type_1(ctx);
	let if_block = current_block_type(ctx);
	let svg_levels = [{ viewBox: "0 0 24 24" }, { style: /*style*/ ctx[6] }, /*$$restProps*/ ctx[9]];
	let svg_data = {};

	for (let i = 0; i < svg_levels.length; i += 1) {
		svg_data = assign(svg_data, svg_levels[i]);
	}

	const block = {
		c: function create() {
			svg = svg_element("svg");
			if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			svg = claim_element(nodes, "svg", { viewBox: true, style: true }, 1);
			var svg_nodes = children(svg);
			if_block.l(svg_nodes);
			svg_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			set_svg_attributes(svg, svg_data);
			toggle_class(svg, "svelte-ns2tqd", true);
			add_location(svg, file$a, 80, 1, 2115);
		},
		m: function mount(target, anchor) {
			insert_dev(target, svg, anchor);
			if_block.m(svg, null);

			if (!mounted) {
				dispose = action_destroyer(events_action = /*events*/ ctx[8].call(null, svg));
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (current_block_type === (current_block_type = select_block_type_1(ctx)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(svg, null);
				}
			}

			set_svg_attributes(svg, svg_data = get_spread_update(svg_levels, [
				{ viewBox: "0 0 24 24" },
				dirty & /*style*/ 64 && { style: /*style*/ ctx[6] },
				dirty & /*$$restProps*/ 512 && /*$$restProps*/ ctx[9]
			]));

			toggle_class(svg, "svelte-ns2tqd", true);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(svg);
			if_block.d();
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block$1.name,
		type: "else",
		source: "(80:0) {:else}",
		ctx
	});

	return block;
}

// (76:14) 
function create_if_block_1$3(ctx) {
	let svg;
	let use_1;
	let events_action;
	let mounted;
	let dispose;
	let svg_levels = [{ viewBox: "0 0 24 24" }, { style: /*style*/ ctx[6] }, /*$$restProps*/ ctx[9]];
	let svg_data = {};

	for (let i = 0; i < svg_levels.length; i += 1) {
		svg_data = assign(svg_data, svg_levels[i]);
	}

	const block = {
		c: function create() {
			svg = svg_element("svg");
			use_1 = svg_element("use");
			this.h();
		},
		l: function claim(nodes) {
			svg = claim_element(nodes, "svg", { viewBox: true, style: true }, 1);
			var svg_nodes = children(svg);

			use_1 = claim_element(
				svg_nodes,
				"use",
				{
					"xlink:href": true,
					style: true,
					class: true
				},
				1
			);

			children(use_1).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			xlink_attr(use_1, "xlink:href", /*use*/ ctx[2]);
			attr_dev(use_1, "style", /*aniStyle*/ ctx[7]);
			attr_dev(use_1, "class", "svelte-ns2tqd");
			toggle_class(use_1, "spinCW", /*spinCW*/ ctx[4]);
			toggle_class(use_1, "spinCCW", /*spinCCW*/ ctx[5]);
			add_location(use_1, file$a, 77, 2, 2025);
			set_svg_attributes(svg, svg_data);
			toggle_class(svg, "svelte-ns2tqd", true);
			add_location(svg, file$a, 76, 1, 1961);
		},
		m: function mount(target, anchor) {
			insert_dev(target, svg, anchor);
			append_dev(svg, use_1);

			if (!mounted) {
				dispose = action_destroyer(events_action = /*events*/ ctx[8].call(null, svg));
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*use*/ 4) {
				xlink_attr(use_1, "xlink:href", /*use*/ ctx[2]);
			}

			if (dirty & /*aniStyle*/ 128) {
				attr_dev(use_1, "style", /*aniStyle*/ ctx[7]);
			}

			if (dirty & /*spinCW*/ 16) {
				toggle_class(use_1, "spinCW", /*spinCW*/ ctx[4]);
			}

			if (dirty & /*spinCCW*/ 32) {
				toggle_class(use_1, "spinCCW", /*spinCCW*/ ctx[5]);
			}

			set_svg_attributes(svg, svg_data = get_spread_update(svg_levels, [
				{ viewBox: "0 0 24 24" },
				dirty & /*style*/ 64 && { style: /*style*/ ctx[6] },
				dirty & /*$$restProps*/ 512 && /*$$restProps*/ ctx[9]
			]));

			toggle_class(svg, "svelte-ns2tqd", true);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(svg);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1$3.name,
		type: "if",
		source: "(76:14) ",
		ctx
	});

	return block;
}

// (72:0) {#if url}
function create_if_block$3(ctx) {
	let span;
	let img;
	let img_src_value;
	let events_action;
	let mounted;
	let dispose;
	let span_levels = [{ style: /*style*/ ctx[6] }, /*$$restProps*/ ctx[9]];
	let span_data = {};

	for (let i = 0; i < span_levels.length; i += 1) {
		span_data = assign(span_data, span_levels[i]);
	}

	const block = {
		c: function create() {
			span = element("span");
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { style: true });
			var span_nodes = children(span);

			img = claim_element(span_nodes, "IMG", {
				src: true,
				alt: true,
				width: true,
				height: true,
				style: true,
				class: true
			});

			span_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*url*/ ctx[3])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "");
			attr_dev(img, "width", "100%");
			attr_dev(img, "height", "100%");
			attr_dev(img, "style", /*aniStyle*/ ctx[7]);
			attr_dev(img, "class", "svelte-ns2tqd");
			toggle_class(img, "spinCW", /*spinCW*/ ctx[4]);
			toggle_class(img, "spinCCW", /*spinCCW*/ ctx[5]);
			add_location(img, file$a, 73, 2, 1838);
			set_attributes(span, span_data);
			toggle_class(span, "svelte-ns2tqd", true);
			add_location(span, file$a, 72, 1, 1793);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
			append_dev(span, img);

			if (!mounted) {
				dispose = action_destroyer(events_action = /*events*/ ctx[8].call(null, span));
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*url*/ 8 && img.src !== (img_src_value = /*url*/ ctx[3])) {
				attr_dev(img, "src", img_src_value);
			}

			if (dirty & /*aniStyle*/ 128) {
				attr_dev(img, "style", /*aniStyle*/ ctx[7]);
			}

			if (dirty & /*spinCW*/ 16) {
				toggle_class(img, "spinCW", /*spinCW*/ ctx[4]);
			}

			if (dirty & /*spinCCW*/ 32) {
				toggle_class(img, "spinCCW", /*spinCCW*/ ctx[5]);
			}

			set_attributes(span, span_data = get_spread_update(span_levels, [
				dirty & /*style*/ 64 && { style: /*style*/ ctx[6] },
				dirty & /*$$restProps*/ 512 && /*$$restProps*/ ctx[9]
			]));

			toggle_class(span, "svelte-ns2tqd", true);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$3.name,
		type: "if",
		source: "(72:0) {#if url}",
		ctx
	});

	return block;
}

// (86:1) {:else}
function create_else_block_1$1(ctx) {
	let path_1;

	const block = {
		c: function create() {
			path_1 = svg_element("path");
			this.h();
		},
		l: function claim(nodes) {
			path_1 = claim_element(nodes, "path", { d: true }, 1);
			children(path_1).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(path_1, "d", /*path*/ ctx[1]);
			add_location(path_1, file$a, 86, 2, 2293);
		},
		m: function mount(target, anchor) {
			insert_dev(target, path_1, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*path*/ 2) {
				attr_dev(path_1, "d", /*path*/ ctx[1]);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(path_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block_1$1.name,
		type: "else",
		source: "(86:1) {:else}",
		ctx
	});

	return block;
}

// (82:1) {#if spin !== false}
function create_if_block_2$1(ctx) {
	let g;
	let path_1;

	const block = {
		c: function create() {
			g = svg_element("g");
			path_1 = svg_element("path");
			this.h();
		},
		l: function claim(nodes) {
			g = claim_element(nodes, "g", { style: true, class: true }, 1);
			var g_nodes = children(g);
			path_1 = claim_element(g_nodes, "path", { d: true }, 1);
			children(path_1).forEach(detach_dev);
			g_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(path_1, "d", /*path*/ ctx[1]);
			add_location(path_1, file$a, 83, 3, 2252);
			attr_dev(g, "style", /*aniStyle*/ ctx[7]);
			attr_dev(g, "class", "svelte-ns2tqd");
			toggle_class(g, "spinCW", /*spinCW*/ ctx[4]);
			toggle_class(g, "spinCCW", /*spinCCW*/ ctx[5]);
			add_location(g, file$a, 82, 2, 2201);
		},
		m: function mount(target, anchor) {
			insert_dev(target, g, anchor);
			append_dev(g, path_1);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*path*/ 2) {
				attr_dev(path_1, "d", /*path*/ ctx[1]);
			}

			if (dirty & /*aniStyle*/ 128) {
				attr_dev(g, "style", /*aniStyle*/ ctx[7]);
			}

			if (dirty & /*spinCW*/ 16) {
				toggle_class(g, "spinCW", /*spinCW*/ ctx[4]);
			}

			if (dirty & /*spinCCW*/ 32) {
				toggle_class(g, "spinCCW", /*spinCCW*/ ctx[5]);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(g);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2$1.name,
		type: "if",
		source: "(82:1) {#if spin !== false}",
		ctx
	});

	return block;
}

function create_fragment$a(ctx) {
	let if_block_anchor;

	function select_block_type(ctx, dirty) {
		if (/*url*/ ctx[3]) return create_if_block$3;
		if (/*use*/ ctx[2]) return create_if_block_1$3;
		return create_else_block$1;
	}

	let current_block_type = select_block_type(ctx);
	let if_block = current_block_type(ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, [dirty]) {
			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$a.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$a($$self, $$props, $$invalidate) {
	const omit_props_names = ["src","size","color","flipH","flipV","rotate","spin"];
	let $$restProps = compute_rest_props($$props, omit_props_names);
	const events = getEventsAction(current_component);
	let { src = null } = $$props;
	let { size = 1 } = $$props;
	let { color = null } = $$props;
	let { flipH = null } = $$props;
	let { flipV = null } = $$props;
	let { rotate = 0 } = $$props;
	let { spin = false } = $$props;
	let path = false;
	let use = false;
	let url = false;

	// size
	if (Number(size)) size = Number(size);

	// styles
	const getStyles = () => {
		const transform = [];
		const styles = [];

		if (size !== null) {
			const width = typeof size === "string" ? size : `${size * 1.5}rem`;
			styles.push(["width", width]);
			styles.push(["height", width]);
		}

		styles.push(["fill", color !== null ? color : "currentColor"]);

		if (flipH) {
			transform.push("scaleX(-1)");
		}

		if (flipV) {
			transform.push("scaleY(-1)");
		}

		if (rotate != 0) {
			transform.push(`rotate(${rotate}deg)`);
		}

		if (transform.length > 0) {
			styles.push(["transform", transform.join(" ")]);
			styles.push(["transform-origin", "center"]);
		}

		return styles.reduce(
			(cur, item) => {
				return `${cur} ${item[0]}:${item[1]};`;
			},
			""
		);
	};

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Icon", $$slots, []);

	$$self.$set = $$new_props => {
		$$props = assign(assign({}, $$props), exclude_internal_props($$new_props));
		$$invalidate(9, $$restProps = compute_rest_props($$props, omit_props_names));
		if ("src" in $$new_props) $$invalidate(11, src = $$new_props.src);
		if ("size" in $$new_props) $$invalidate(10, size = $$new_props.size);
		if ("color" in $$new_props) $$invalidate(12, color = $$new_props.color);
		if ("flipH" in $$new_props) $$invalidate(13, flipH = $$new_props.flipH);
		if ("flipV" in $$new_props) $$invalidate(14, flipV = $$new_props.flipV);
		if ("rotate" in $$new_props) $$invalidate(15, rotate = $$new_props.rotate);
		if ("spin" in $$new_props) $$invalidate(0, spin = $$new_props.spin);
	};

	$$self.$capture_state = () => ({
		getEventsAction,
		current_component,
		events,
		src,
		size,
		color,
		flipH,
		flipV,
		rotate,
		spin,
		path,
		use,
		url,
		getStyles,
		inverse,
		spintime,
		spinCW,
		spinCCW,
		style,
		aniStyle
	});

	$$self.$inject_state = $$new_props => {
		if ("src" in $$props) $$invalidate(11, src = $$new_props.src);
		if ("size" in $$props) $$invalidate(10, size = $$new_props.size);
		if ("color" in $$props) $$invalidate(12, color = $$new_props.color);
		if ("flipH" in $$props) $$invalidate(13, flipH = $$new_props.flipH);
		if ("flipV" in $$props) $$invalidate(14, flipV = $$new_props.flipV);
		if ("rotate" in $$props) $$invalidate(15, rotate = $$new_props.rotate);
		if ("spin" in $$props) $$invalidate(0, spin = $$new_props.spin);
		if ("path" in $$props) $$invalidate(1, path = $$new_props.path);
		if ("use" in $$props) $$invalidate(2, use = $$new_props.use);
		if ("url" in $$props) $$invalidate(3, url = $$new_props.url);
		if ("inverse" in $$props) $$invalidate(16, inverse = $$new_props.inverse);
		if ("spintime" in $$props) $$invalidate(17, spintime = $$new_props.spintime);
		if ("spinCW" in $$props) $$invalidate(4, spinCW = $$new_props.spinCW);
		if ("spinCCW" in $$props) $$invalidate(5, spinCCW = $$new_props.spinCCW);
		if ("style" in $$props) $$invalidate(6, style = $$new_props.style);
		if ("aniStyle" in $$props) $$invalidate(7, aniStyle = $$new_props.aniStyle);
	};

	let inverse;
	let spintime;
	let spinCW;
	let spinCCW;
	let style;
	let aniStyle;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*src*/ 2048) {
			//Icon source
			 if (!!src && src.toLowerCase().trim().endsWith(".svg")) {
				$$invalidate(3, url = src);
				$$invalidate(1, path = $$invalidate(2, use = false));
			} else if (!!src && src.toLowerCase().trim().includes(".svg#")) {
				$$invalidate(2, use = src);
				$$invalidate(3, url = $$invalidate(1, path = false));
			} else if (!!src) {
				$$invalidate(1, path = src);
				$$invalidate(3, url = $$invalidate(2, use = false));
			}
		}

		if ($$self.$$.dirty & /*spin*/ 1) {
			// SPIN properties
			 $$invalidate(16, inverse = typeof spin !== "boolean" && spin < 0 ? true : false);
		}

		if ($$self.$$.dirty & /*spin*/ 1) {
			 $$invalidate(17, spintime = Math.abs(spin === true ? 2 : spin));
		}

		if ($$self.$$.dirty & /*spin, inverse*/ 65537) {
			 $$invalidate(4, spinCW = !!spin && !inverse);
		}

		if ($$self.$$.dirty & /*spin, inverse*/ 65537) {
			 $$invalidate(5, spinCCW = !!spin && inverse);
		}

		if ($$self.$$.dirty & /*size, color, flipH, flipV, rotate*/ 62464) {
			 $$invalidate(6, style = getStyles());
		}

		if ($$self.$$.dirty & /*spin, spintime*/ 131073) {
			 $$invalidate(7, aniStyle = !!spin ? `animation-duration: ${spintime}s` : undefined);
		}
	};

	return [
		spin,
		path,
		use,
		url,
		spinCW,
		spinCCW,
		style,
		aniStyle,
		events,
		$$restProps,
		size,
		src,
		color,
		flipH,
		flipV,
		rotate
	];
}

class Icon extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$a, create_fragment$a, safe_not_equal, {
			src: 11,
			size: 10,
			color: 12,
			flipH: 13,
			flipV: 14,
			rotate: 15,
			spin: 0
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Icon",
			options,
			id: create_fragment$a.name
		});
	}

	get src() {
		throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set src(value) {
		throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get size() {
		throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set size(value) {
		throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get color() {
		throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set color(value) {
		throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get flipH() {
		throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set flipH(value) {
		throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get flipV() {
		throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set flipV(value) {
		throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get rotate() {
		throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set rotate(value) {
		throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get spin() {
		throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set spin(value) {
		throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* node_modules\svelte-chota\cmp\Button.svelte generated by Svelte v3.23.2 */
const file$b = "node_modules\\svelte-chota\\cmp\\Button.svelte";

// (87:0) {:else}
function create_else_block$2(ctx) {
	let details;
	let summary;
	let t0;

	let t1_value = (/*dropdown*/ ctx[11] !== true
	? /*dropdown*/ ctx[11]
	: "") + "";

	let t1;
	let t2;
	let events_action;
	let t3;
	let card;
	let dropdownAction_action;
	let current;
	let mounted;
	let dispose;
	let if_block0 = /*icon*/ ctx[9] && create_if_block_4(ctx);
	let if_block1 = /*iconRight*/ ctx[10] && create_if_block_3$1(ctx);
	let summary_levels = [/*$$restProps*/ ctx[17]];
	let summary_data = {};

	for (let i = 0; i < summary_levels.length; i += 1) {
		summary_data = assign(summary_data, summary_levels[i]);
	}

	card = new Card({
			props: {
				style: "z-index:1",
				$$slots: { default: [create_default_slot$1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			details = element("details");
			summary = element("summary");
			if (if_block0) if_block0.c();
			t0 = space();
			t1 = text(t1_value);
			t2 = space();
			if (if_block1) if_block1.c();
			t3 = space();
			create_component(card.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			details = claim_element(nodes, "DETAILS", { class: true });
			var details_nodes = children(details);
			summary = claim_element(details_nodes, "SUMMARY", {});
			var summary_nodes = children(summary);
			if (if_block0) if_block0.l(summary_nodes);
			t0 = claim_space(summary_nodes);
			t1 = claim_text(summary_nodes, t1_value);
			t2 = claim_space(summary_nodes);
			if (if_block1) if_block1.l(summary_nodes);
			summary_nodes.forEach(detach_dev);
			t3 = claim_space(details_nodes);
			claim_component(card.$$.fragment, details_nodes);
			details_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			set_attributes(summary, summary_data);
			toggle_class(summary, "button", 1);
			toggle_class(summary, "outline", /*outline*/ ctx[1]);
			toggle_class(summary, "primary", /*primary*/ ctx[2]);
			toggle_class(summary, "secondary", /*secondary*/ ctx[3]);
			toggle_class(summary, "dark", /*dark*/ ctx[4]);
			toggle_class(summary, "error", /*error*/ ctx[5]);
			toggle_class(summary, "success", /*success*/ ctx[6]);
			toggle_class(summary, "clear", /*clear*/ ctx[7]);
			toggle_class(summary, "loading", /*loading*/ ctx[8]);
			toggle_class(summary, "icon", /*clIcon*/ ctx[14]);
			toggle_class(summary, "icon-only", /*clIcononly*/ ctx[15]);
			toggle_class(summary, "svelte-1o5ccdl", true);
			add_location(summary, file$b, 88, 4, 2367);
			attr_dev(details, "class", "dropdown");
			add_location(details, file$b, 87, 2, 2295);
		},
		m: function mount(target, anchor) {
			insert_dev(target, details, anchor);
			append_dev(details, summary);
			if (if_block0) if_block0.m(summary, null);
			append_dev(summary, t0);
			append_dev(summary, t1);
			append_dev(summary, t2);
			if (if_block1) if_block1.m(summary, null);
			append_dev(details, t3);
			mount_component(card, details, null);
			details.open = /*open*/ ctx[0];
			current = true;

			if (!mounted) {
				dispose = [
					action_destroyer(events_action = /*events*/ ctx[16].call(null, summary)),
					listen_dev(details, "toggle", /*details_toggle_handler*/ ctx[19]),
					action_destroyer(dropdownAction_action = dropdownAction.call(null, details, /*autoclose*/ ctx[12]))
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (/*icon*/ ctx[9]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*icon*/ 512) {
						transition_in(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_4(ctx);
					if_block0.c();
					transition_in(if_block0, 1);
					if_block0.m(summary, t0);
				}
			} else if (if_block0) {
				group_outros();

				transition_out(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				check_outros();
			}

			if ((!current || dirty & /*dropdown*/ 2048) && t1_value !== (t1_value = (/*dropdown*/ ctx[11] !== true
			? /*dropdown*/ ctx[11]
			: "") + "")) set_data_dev(t1, t1_value);

			if (/*iconRight*/ ctx[10]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*iconRight*/ 1024) {
						transition_in(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block_3$1(ctx);
					if_block1.c();
					transition_in(if_block1, 1);
					if_block1.m(summary, null);
				}
			} else if (if_block1) {
				group_outros();

				transition_out(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				check_outros();
			}

			set_attributes(summary, summary_data = get_spread_update(summary_levels, [dirty & /*$$restProps*/ 131072 && /*$$restProps*/ ctx[17]]));
			toggle_class(summary, "button", 1);
			toggle_class(summary, "outline", /*outline*/ ctx[1]);
			toggle_class(summary, "primary", /*primary*/ ctx[2]);
			toggle_class(summary, "secondary", /*secondary*/ ctx[3]);
			toggle_class(summary, "dark", /*dark*/ ctx[4]);
			toggle_class(summary, "error", /*error*/ ctx[5]);
			toggle_class(summary, "success", /*success*/ ctx[6]);
			toggle_class(summary, "clear", /*clear*/ ctx[7]);
			toggle_class(summary, "loading", /*loading*/ ctx[8]);
			toggle_class(summary, "icon", /*clIcon*/ ctx[14]);
			toggle_class(summary, "icon-only", /*clIcononly*/ ctx[15]);
			toggle_class(summary, "svelte-1o5ccdl", true);
			const card_changes = {};

			if (dirty & /*$$scope*/ 1048576) {
				card_changes.$$scope = { dirty, ctx };
			}

			card.$set(card_changes);

			if (dirty & /*open*/ 1) {
				details.open = /*open*/ ctx[0];
			}

			if (dropdownAction_action && is_function(dropdownAction_action.update) && dirty & /*autoclose*/ 4096) dropdownAction_action.update.call(null, /*autoclose*/ ctx[12]);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block0);
			transition_in(if_block1);
			transition_in(card.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block0);
			transition_out(if_block1);
			transition_out(card.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(details);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			destroy_component(card);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block$2.name,
		type: "else",
		source: "(87:0) {:else}",
		ctx
	});

	return block;
}

// (64:0) {#if dropdown === false}
function create_if_block$4(ctx) {
	let button;
	let t0;
	let t1;
	let events_action;
	let current;
	let mounted;
	let dispose;
	let if_block0 = /*icon*/ ctx[9] && create_if_block_2$2(ctx);
	const default_slot_template = /*$$slots*/ ctx[18].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[20], null);
	let if_block1 = /*iconRight*/ ctx[10] && create_if_block_1$4(ctx);

	let button_levels = [
		/*$$restProps*/ ctx[17],
		{
			type: /*submit*/ ctx[13] ? "submit" : null
		}
	];

	let button_data = {};

	for (let i = 0; i < button_levels.length; i += 1) {
		button_data = assign(button_data, button_levels[i]);
	}

	const block = {
		c: function create() {
			button = element("button");
			if (if_block0) if_block0.c();
			t0 = space();
			if (default_slot) default_slot.c();
			t1 = space();
			if (if_block1) if_block1.c();
			this.h();
		},
		l: function claim(nodes) {
			button = claim_element(nodes, "BUTTON", { type: true });
			var button_nodes = children(button);
			if (if_block0) if_block0.l(button_nodes);
			t0 = claim_space(button_nodes);
			if (default_slot) default_slot.l(button_nodes);
			t1 = claim_space(button_nodes);
			if (if_block1) if_block1.l(button_nodes);
			button_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			set_attributes(button, button_data);
			toggle_class(button, "button", 1);
			toggle_class(button, "outline", /*outline*/ ctx[1]);
			toggle_class(button, "primary", /*primary*/ ctx[2]);
			toggle_class(button, "secondary", /*secondary*/ ctx[3]);
			toggle_class(button, "dark", /*dark*/ ctx[4]);
			toggle_class(button, "error", /*error*/ ctx[5]);
			toggle_class(button, "success", /*success*/ ctx[6]);
			toggle_class(button, "clear", /*clear*/ ctx[7]);
			toggle_class(button, "loading", /*loading*/ ctx[8]);
			toggle_class(button, "icon", /*clIcon*/ ctx[14]);
			toggle_class(button, "icon-only", /*clIcononly*/ ctx[15]);
			toggle_class(button, "svelte-1o5ccdl", true);
			add_location(button, file$b, 64, 0, 1789);
		},
		m: function mount(target, anchor) {
			insert_dev(target, button, anchor);
			if (if_block0) if_block0.m(button, null);
			append_dev(button, t0);

			if (default_slot) {
				default_slot.m(button, null);
			}

			append_dev(button, t1);
			if (if_block1) if_block1.m(button, null);
			current = true;

			if (!mounted) {
				dispose = action_destroyer(events_action = /*events*/ ctx[16].call(null, button));
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (/*icon*/ ctx[9]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*icon*/ 512) {
						transition_in(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_2$2(ctx);
					if_block0.c();
					transition_in(if_block0, 1);
					if_block0.m(button, t0);
				}
			} else if (if_block0) {
				group_outros();

				transition_out(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				check_outros();
			}

			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 1048576) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[20], dirty, null, null);
				}
			}

			if (/*iconRight*/ ctx[10]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*iconRight*/ 1024) {
						transition_in(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block_1$4(ctx);
					if_block1.c();
					transition_in(if_block1, 1);
					if_block1.m(button, null);
				}
			} else if (if_block1) {
				group_outros();

				transition_out(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				check_outros();
			}

			set_attributes(button, button_data = get_spread_update(button_levels, [
				dirty & /*$$restProps*/ 131072 && /*$$restProps*/ ctx[17],
				dirty & /*submit*/ 8192 && {
					type: /*submit*/ ctx[13] ? "submit" : null
				}
			]));

			toggle_class(button, "button", 1);
			toggle_class(button, "outline", /*outline*/ ctx[1]);
			toggle_class(button, "primary", /*primary*/ ctx[2]);
			toggle_class(button, "secondary", /*secondary*/ ctx[3]);
			toggle_class(button, "dark", /*dark*/ ctx[4]);
			toggle_class(button, "error", /*error*/ ctx[5]);
			toggle_class(button, "success", /*success*/ ctx[6]);
			toggle_class(button, "clear", /*clear*/ ctx[7]);
			toggle_class(button, "loading", /*loading*/ ctx[8]);
			toggle_class(button, "icon", /*clIcon*/ ctx[14]);
			toggle_class(button, "icon-only", /*clIcononly*/ ctx[15]);
			toggle_class(button, "svelte-1o5ccdl", true);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block0);
			transition_in(default_slot, local);
			transition_in(if_block1);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block0);
			transition_out(default_slot, local);
			transition_out(if_block1);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(button);
			if (if_block0) if_block0.d();
			if (default_slot) default_slot.d(detaching);
			if (if_block1) if_block1.d();
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$4.name,
		type: "if",
		source: "(64:0) {#if dropdown === false}",
		ctx
	});

	return block;
}

// (106:4) {#if icon}
function create_if_block_4(ctx) {
	let span;
	let icon_1;
	let current;

	icon_1 = new Icon({
			props: { src: /*icon*/ ctx[9], size: "24px" },
			$$inline: true
		});

	const block = {
		c: function create() {
			span = element("span");
			create_component(icon_1.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			claim_component(icon_1.$$.fragment, span_nodes);
			span_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span, "class", "lefticon svelte-1o5ccdl");
			add_location(span, file$b, 105, 15, 2712);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
			mount_component(icon_1, span, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			const icon_1_changes = {};
			if (dirty & /*icon*/ 512) icon_1_changes.src = /*icon*/ ctx[9];
			icon_1.$set(icon_1_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(icon_1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(icon_1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
			destroy_component(icon_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_4.name,
		type: "if",
		source: "(106:4) {#if icon}",
		ctx
	});

	return block;
}

// (108:4) {#if iconRight}
function create_if_block_3$1(ctx) {
	let span;
	let icon_1;
	let current;

	icon_1 = new Icon({
			props: { src: /*iconRight*/ ctx[10], size: "24px" },
			$$inline: true
		});

	const block = {
		c: function create() {
			span = element("span");
			create_component(icon_1.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			claim_component(icon_1.$$.fragment, span_nodes);
			span_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span, "class", "righticon svelte-1o5ccdl");
			add_location(span, file$b, 107, 20, 2844);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
			mount_component(icon_1, span, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			const icon_1_changes = {};
			if (dirty & /*iconRight*/ 1024) icon_1_changes.src = /*iconRight*/ ctx[10];
			icon_1.$set(icon_1_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(icon_1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(icon_1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
			destroy_component(icon_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_3$1.name,
		type: "if",
		source: "(108:4) {#if iconRight}",
		ctx
	});

	return block;
}

// (110:4) <Card style="z-index:1">
function create_default_slot$1(ctx) {
	let current;
	const default_slot_template = /*$$slots*/ ctx[18].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[20], null);

	const block = {
		c: function create() {
			if (default_slot) default_slot.c();
		},
		l: function claim(nodes) {
			if (default_slot) default_slot.l(nodes);
		},
		m: function mount(target, anchor) {
			if (default_slot) {
				default_slot.m(target, anchor);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 1048576) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[20], dirty, null, null);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (default_slot) default_slot.d(detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot$1.name,
		type: "slot",
		source: "(110:4) <Card style=\\\"z-index:1\\\">",
		ctx
	});

	return block;
}

// (83:0) {#if icon}
function create_if_block_2$2(ctx) {
	let span;
	let icon_1;
	let current;

	icon_1 = new Icon({
			props: { src: /*icon*/ ctx[9], size: "24px" },
			$$inline: true
		});

	const block = {
		c: function create() {
			span = element("span");
			create_component(icon_1.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			claim_component(icon_1.$$.fragment, span_nodes);
			span_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span, "class", "lefticon svelte-1o5ccdl");
			add_location(span, file$b, 82, 11, 2103);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
			mount_component(icon_1, span, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			const icon_1_changes = {};
			if (dirty & /*icon*/ 512) icon_1_changes.src = /*icon*/ ctx[9];
			icon_1.$set(icon_1_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(icon_1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(icon_1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
			destroy_component(icon_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2$2.name,
		type: "if",
		source: "(83:0) {#if icon}",
		ctx
	});

	return block;
}

// (85:0) {#if iconRight}
function create_if_block_1$4(ctx) {
	let span;
	let icon_1;
	let current;

	icon_1 = new Icon({
			props: { src: /*iconRight*/ ctx[10], size: "24px" },
			$$inline: true
		});

	const block = {
		c: function create() {
			span = element("span");
			create_component(icon_1.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			claim_component(icon_1.$$.fragment, span_nodes);
			span_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span, "class", "righticon svelte-1o5ccdl");
			add_location(span, file$b, 84, 16, 2201);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
			mount_component(icon_1, span, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			const icon_1_changes = {};
			if (dirty & /*iconRight*/ 1024) icon_1_changes.src = /*iconRight*/ ctx[10];
			icon_1.$set(icon_1_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(icon_1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(icon_1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
			destroy_component(icon_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1$4.name,
		type: "if",
		source: "(85:0) {#if iconRight}",
		ctx
	});

	return block;
}

function create_fragment$b(ctx) {
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block$4, create_else_block$2];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*dropdown*/ ctx[11] === false) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				group_outros();

				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				check_outros();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				}

				transition_in(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$b.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function dropdownAction(node, param) {
	let autoclose = param;
	let button = node.getElementsByTagName("summary")[0];

	const clickOutside = () => {
		if (!!node.open) node.open = false;
	};

	const clickButton = e => {
		e.stopPropagation();
	};

	const clickInDD = e => {
		e.stopPropagation();
		if (autoclose) node.open = false;
	};

	node.addEventListener("click", clickInDD);
	button.addEventListener("click", clickButton);
	window.addEventListener("click", clickOutside);

	return {
		update: param => autoclose = param,
		destroy: () => {
			window.removeEventListener("click", clickOutside);
			node.removeEventListener("click", clickInDD);
			button.removeEventListener("click", clickButton);
		}
	};
}

function instance$b($$self, $$props, $$invalidate) {
	const omit_props_names = [
		"outline","primary","secondary","dark","error","success","clear","loading","icon","iconRight","dropdown","open","autoclose","submit"
	];

	let $$restProps = compute_rest_props($$props, omit_props_names);
	let { outline = null } = $$props;
	let { primary = null } = $$props;
	let { secondary = null } = $$props;
	let { dark = null } = $$props;
	let { error = null } = $$props;
	let { success = null } = $$props;
	let { clear = null } = $$props;
	let { loading = null } = $$props;
	let { icon = null } = $$props;
	let { iconRight = null } = $$props;
	let { dropdown = false } = $$props;
	let { open = false } = $$props;
	let { autoclose = false } = $$props;
	let { submit = false } = $$props;
	const events = getEventsAction(current_component);
	const hasSlot = $$props.$$slots && $$props.$$slots !== undefined;
	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Button", $$slots, ['default']);

	function details_toggle_handler() {
		open = this.open;
		$$invalidate(0, open);
	}

	$$self.$set = $$new_props => {
		$$invalidate(22, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
		$$invalidate(17, $$restProps = compute_rest_props($$props, omit_props_names));
		if ("outline" in $$new_props) $$invalidate(1, outline = $$new_props.outline);
		if ("primary" in $$new_props) $$invalidate(2, primary = $$new_props.primary);
		if ("secondary" in $$new_props) $$invalidate(3, secondary = $$new_props.secondary);
		if ("dark" in $$new_props) $$invalidate(4, dark = $$new_props.dark);
		if ("error" in $$new_props) $$invalidate(5, error = $$new_props.error);
		if ("success" in $$new_props) $$invalidate(6, success = $$new_props.success);
		if ("clear" in $$new_props) $$invalidate(7, clear = $$new_props.clear);
		if ("loading" in $$new_props) $$invalidate(8, loading = $$new_props.loading);
		if ("icon" in $$new_props) $$invalidate(9, icon = $$new_props.icon);
		if ("iconRight" in $$new_props) $$invalidate(10, iconRight = $$new_props.iconRight);
		if ("dropdown" in $$new_props) $$invalidate(11, dropdown = $$new_props.dropdown);
		if ("open" in $$new_props) $$invalidate(0, open = $$new_props.open);
		if ("autoclose" in $$new_props) $$invalidate(12, autoclose = $$new_props.autoclose);
		if ("submit" in $$new_props) $$invalidate(13, submit = $$new_props.submit);
		if ("$$scope" in $$new_props) $$invalidate(20, $$scope = $$new_props.$$scope);
	};

	$$self.$capture_state = () => ({
		getEventsAction,
		current_component,
		Card,
		Icon,
		outline,
		primary,
		secondary,
		dark,
		error,
		success,
		clear,
		loading,
		icon,
		iconRight,
		dropdown,
		open,
		autoclose,
		submit,
		events,
		hasSlot,
		dropdownAction,
		clIcon,
		clIcononly
	});

	$$self.$inject_state = $$new_props => {
		$$invalidate(22, $$props = assign(assign({}, $$props), $$new_props));
		if ("outline" in $$props) $$invalidate(1, outline = $$new_props.outline);
		if ("primary" in $$props) $$invalidate(2, primary = $$new_props.primary);
		if ("secondary" in $$props) $$invalidate(3, secondary = $$new_props.secondary);
		if ("dark" in $$props) $$invalidate(4, dark = $$new_props.dark);
		if ("error" in $$props) $$invalidate(5, error = $$new_props.error);
		if ("success" in $$props) $$invalidate(6, success = $$new_props.success);
		if ("clear" in $$props) $$invalidate(7, clear = $$new_props.clear);
		if ("loading" in $$props) $$invalidate(8, loading = $$new_props.loading);
		if ("icon" in $$props) $$invalidate(9, icon = $$new_props.icon);
		if ("iconRight" in $$props) $$invalidate(10, iconRight = $$new_props.iconRight);
		if ("dropdown" in $$props) $$invalidate(11, dropdown = $$new_props.dropdown);
		if ("open" in $$props) $$invalidate(0, open = $$new_props.open);
		if ("autoclose" in $$props) $$invalidate(12, autoclose = $$new_props.autoclose);
		if ("submit" in $$props) $$invalidate(13, submit = $$new_props.submit);
		if ("clIcon" in $$props) $$invalidate(14, clIcon = $$new_props.clIcon);
		if ("clIcononly" in $$props) $$invalidate(15, clIcononly = $$new_props.clIcononly);
	};

	let clIcon;
	let clIcononly;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*icon, iconRight*/ 1536) {
			 $$invalidate(14, clIcon = (icon !== null || iconRight !== null) && hasSlot);
		}

		if ($$self.$$.dirty & /*dropdown, icon*/ 2560) {
			 $$invalidate(15, clIcononly = dropdown
			? icon !== null && dropdown === true
			: icon !== null && !hasSlot);
		}
	};

	$$props = exclude_internal_props($$props);

	return [
		open,
		outline,
		primary,
		secondary,
		dark,
		error,
		success,
		clear,
		loading,
		icon,
		iconRight,
		dropdown,
		autoclose,
		submit,
		clIcon,
		clIcononly,
		events,
		$$restProps,
		$$slots,
		details_toggle_handler,
		$$scope
	];
}

class Button extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$b, create_fragment$b, safe_not_equal, {
			outline: 1,
			primary: 2,
			secondary: 3,
			dark: 4,
			error: 5,
			success: 6,
			clear: 7,
			loading: 8,
			icon: 9,
			iconRight: 10,
			dropdown: 11,
			open: 0,
			autoclose: 12,
			submit: 13
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Button",
			options,
			id: create_fragment$b.name
		});
	}

	get outline() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set outline(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get primary() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set primary(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get secondary() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set secondary(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get dark() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set dark(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get error() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set error(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get success() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set success(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get clear() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set clear(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get loading() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set loading(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get icon() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icon(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get iconRight() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set iconRight(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get dropdown() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set dropdown(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get open() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set open(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get autoclose() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set autoclose(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get submit() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set submit(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/*
Adapted from https://github.com/mattdesl
Distributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md
*/
function backInOut(t) {
    const s = 1.70158 * 1.525;
    if ((t *= 2) < 1)
        return 0.5 * (t * t * ((s + 1) * t - s));
    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);
}
function backIn(t) {
    const s = 1.70158;
    return t * t * ((s + 1) * t - s);
}
function backOut(t) {
    const s = 1.70158;
    return --t * t * ((s + 1) * t + s) + 1;
}
function bounceOut(t) {
    const a = 4.0 / 11.0;
    const b = 8.0 / 11.0;
    const c = 9.0 / 10.0;
    const ca = 4356.0 / 361.0;
    const cb = 35442.0 / 1805.0;
    const cc = 16061.0 / 1805.0;
    const t2 = t * t;
    return t < a
        ? 7.5625 * t2
        : t < b
            ? 9.075 * t2 - 9.9 * t + 3.4
            : t < c
                ? ca * t2 - cb * t + cc
                : 10.8 * t * t - 20.52 * t + 10.72;
}
function bounceInOut(t) {
    return t < 0.5
        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))
        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;
}
function bounceIn(t) {
    return 1.0 - bounceOut(1.0 - t);
}
function circInOut(t) {
    if ((t *= 2) < 1)
        return -0.5 * (Math.sqrt(1 - t * t) - 1);
    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
}
function circIn(t) {
    return 1.0 - Math.sqrt(1.0 - t * t);
}
function circOut(t) {
    return Math.sqrt(1 - --t * t);
}
function cubicInOut(t) {
    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;
}
function cubicIn(t) {
    return t * t * t;
}
function cubicOut(t) {
    const f = t - 1.0;
    return f * f * f + 1.0;
}
function elasticInOut(t) {
    return t < 0.5
        ? 0.5 *
            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *
            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))
        : 0.5 *
            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *
            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +
            1.0;
}
function elasticIn(t) {
    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));
}
function elasticOut(t) {
    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);
}
function expoInOut(t) {
    return t === 0.0 || t === 1.0
        ? t
        : t < 0.5
            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)
            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;
}
function expoIn(t) {
    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));
}
function expoOut(t) {
    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);
}
function quadInOut(t) {
    t /= 0.5;
    if (t < 1)
        return 0.5 * t * t;
    t--;
    return -0.5 * (t * (t - 2) - 1);
}
function quadIn(t) {
    return t * t;
}
function quadOut(t) {
    return -t * (t - 2.0);
}
function quartInOut(t) {
    return t < 0.5
        ? +8.0 * Math.pow(t, 4.0)
        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;
}
function quartIn(t) {
    return Math.pow(t, 4.0);
}
function quartOut(t) {
    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;
}
function quintInOut(t) {
    if ((t *= 2) < 1)
        return 0.5 * t * t * t * t * t;
    return 0.5 * ((t -= 2) * t * t * t * t + 2);
}
function quintIn(t) {
    return t * t * t * t * t;
}
function quintOut(t) {
    return --t * t * t * t * t + 1;
}
function sineInOut(t) {
    return -0.5 * (Math.cos(Math.PI * t) - 1);
}
function sineIn(t) {
    const v = Math.cos(t * Math.PI * 0.5);
    if (Math.abs(v) < 1e-14)
        return 1;
    else
        return 1 - v;
}
function sineOut(t) {
    return Math.sin((t * Math.PI) / 2);
}

var easings = /*#__PURE__*/Object.freeze({
    __proto__: null,
    backIn: backIn,
    backInOut: backInOut,
    backOut: backOut,
    bounceIn: bounceIn,
    bounceInOut: bounceInOut,
    bounceOut: bounceOut,
    circIn: circIn,
    circInOut: circInOut,
    circOut: circOut,
    cubicIn: cubicIn,
    cubicInOut: cubicInOut,
    cubicOut: cubicOut,
    elasticIn: elasticIn,
    elasticInOut: elasticInOut,
    elasticOut: elasticOut,
    expoIn: expoIn,
    expoInOut: expoInOut,
    expoOut: expoOut,
    quadIn: quadIn,
    quadInOut: quadInOut,
    quadOut: quadOut,
    quartIn: quartIn,
    quartInOut: quartInOut,
    quartOut: quartOut,
    quintIn: quintIn,
    quintInOut: quintInOut,
    quintOut: quintOut,
    sineIn: sineIn,
    sineInOut: sineInOut,
    sineOut: sineOut,
    linear: identity
});

function fade(node, { delay = 0, duration = 400, easing = identity }) {
    const o = +getComputedStyle(node).opacity;
    return {
        delay,
        duration,
        easing,
        css: t => `opacity: ${t * o}`
    };
}

/* node_modules\svelte-chota\cmp\Modal.svelte generated by Svelte v3.23.2 */
const file$c = "node_modules\\svelte-chota\\cmp\\Modal.svelte";

// (15:0) {#if open}
function create_if_block$5(ctx) {
	let div2;
	let div0;
	let t;
	let div1;
	let events_action;
	let div2_transition;
	let current;
	let mounted;
	let dispose;
	const default_slot_template = /*$$slots*/ ctx[4].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[3], null);
	let div1_levels = [/*$$restProps*/ ctx[2]];
	let div1_data = {};

	for (let i = 0; i < div1_levels.length; i += 1) {
		div1_data = assign(div1_data, div1_levels[i]);
	}

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			t = space();
			div1 = element("div");
			if (default_slot) default_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			children(div0).forEach(detach_dev);
			t = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", {});
			var div1_nodes = children(div1);
			if (default_slot) default_slot.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "background svelte-4lwi8h");
			add_location(div0, file$c, 16, 4, 485);
			set_attributes(div1, div1_data);
			toggle_class(div1, "modal", 1);
			toggle_class(div1, "svelte-4lwi8h", true);
			add_location(div1, file$c, 17, 4, 542);
			attr_dev(div2, "class", "container svelte-4lwi8h");
			add_location(div2, file$c, 15, 0, 421);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div0);
			append_dev(div2, t);
			append_dev(div2, div1);

			if (default_slot) {
				default_slot.m(div1, null);
			}

			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(div0, "click", /*click_handler*/ ctx[5], false, false, false),
					action_destroyer(events_action = /*events*/ ctx[1].call(null, div1))
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 8) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[3], dirty, null, null);
				}
			}

			set_attributes(div1, div1_data = get_spread_update(div1_levels, [dirty & /*$$restProps*/ 4 && /*$$restProps*/ ctx[2]]));
			toggle_class(div1, "modal", 1);
			toggle_class(div1, "svelte-4lwi8h", true);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);

			add_render_callback(() => {
				if (!div2_transition) div2_transition = create_bidirectional_transition(div2, fade, { duration: 200 }, true);
				div2_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			if (!div2_transition) div2_transition = create_bidirectional_transition(div2, fade, { duration: 200 }, false);
			div2_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
			if (default_slot) default_slot.d(detaching);
			if (detaching && div2_transition) div2_transition.end();
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$5.name,
		type: "if",
		source: "(15:0) {#if open}",
		ctx
	});

	return block;
}

function create_fragment$c(ctx) {
	let if_block_anchor;
	let current;
	let if_block = /*open*/ ctx[0] && create_if_block$5(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*open*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*open*/ 1) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block$5(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$c.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$c($$self, $$props, $$invalidate) {
	const omit_props_names = ["open"];
	let $$restProps = compute_rest_props($$props, omit_props_names);
	let { open = false } = $$props;
	const events = getEventsAction(current_component);
	let is_header = $$props.$$slots && $$props.$$slots.header !== undefined;
	let is_footer = $$props.$$slots && $$props.$$slots.footer !== undefined;
	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Modal", $$slots, ['default']);
	const click_handler = e => $$invalidate(0, open = false);

	$$self.$set = $$new_props => {
		$$invalidate(8, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
		$$invalidate(2, $$restProps = compute_rest_props($$props, omit_props_names));
		if ("open" in $$new_props) $$invalidate(0, open = $$new_props.open);
		if ("$$scope" in $$new_props) $$invalidate(3, $$scope = $$new_props.$$scope);
	};

	$$self.$capture_state = () => ({
		getEventsAction,
		fade,
		current_component,
		open,
		events,
		is_header,
		is_footer
	});

	$$self.$inject_state = $$new_props => {
		$$invalidate(8, $$props = assign(assign({}, $$props), $$new_props));
		if ("open" in $$props) $$invalidate(0, open = $$new_props.open);
		if ("is_header" in $$props) is_header = $$new_props.is_header;
		if ("is_footer" in $$props) is_footer = $$new_props.is_footer;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$props = exclude_internal_props($$props);
	return [open, events, $$restProps, $$scope, $$slots, click_handler];
}

class Modal extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$c, create_fragment$c, safe_not_equal, { open: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Modal",
			options,
			id: create_fragment$c.name
		});
	}

	get open() {
		throw new Error("<Modal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set open(value) {
		throw new Error("<Modal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\routes\_components\ToastsList.svelte generated by Svelte v3.23.2 */
const file$d = "src\\routes\\_components\\ToastsList.svelte";

function get_each_context$2(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[11] = list[i];
	return child_ctx;
}

// (39:12) {#if isLoggedIn && isAuthor(toast.toasterFacebookId)}
function create_if_block$6(ctx) {
	let button0;
	let t0;
	let t1;
	let button1;
	let t2;
	let modal;
	let updating_open;
	let current;
	let mounted;
	let dispose;

	function click_handler(...args) {
		return /*click_handler*/ ctx[6](/*toast*/ ctx[11], ...args);
	}

	button1 = new Button({
			props: {
				$$slots: { default: [create_default_slot_4] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button1.$on("click", /*click_handler_1*/ ctx[7]);

	function modal_open_binding(value) {
		/*modal_open_binding*/ ctx[9].call(null, value);
	}

	let modal_props = {
		$$slots: { default: [create_default_slot$2] },
		$$scope: { ctx }
	};

	if (/*open*/ ctx[1] !== void 0) {
		modal_props.open = /*open*/ ctx[1];
	}

	modal = new Modal({ props: modal_props, $$inline: true });
	binding_callbacks.push(() => bind(modal, "open", modal_open_binding));

	const block = {
		c: function create() {
			button0 = element("button");
			t0 = text("Edit");
			t1 = space();
			create_component(button1.$$.fragment);
			t2 = space();
			create_component(modal.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			button0 = claim_element(nodes, "BUTTON", { class: true });
			var button0_nodes = children(button0);
			t0 = claim_text(button0_nodes, "Edit");
			button0_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			claim_component(button1.$$.fragment, nodes);
			t2 = claim_space(nodes);
			claim_component(modal.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			attr_dev(button0, "class", "svelte-cu32kv");
			add_location(button0, file$d, 39, 16, 1316);
		},
		m: function mount(target, anchor) {
			insert_dev(target, button0, anchor);
			append_dev(button0, t0);
			insert_dev(target, t1, anchor);
			mount_component(button1, target, anchor);
			insert_dev(target, t2, anchor);
			mount_component(modal, target, anchor);
			current = true;

			if (!mounted) {
				dispose = listen_dev(button0, "click", click_handler, false, false, false);
				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const button1_changes = {};

			if (dirty & /*$$scope*/ 16384) {
				button1_changes.$$scope = { dirty, ctx };
			}

			button1.$set(button1_changes);
			const modal_changes = {};

			if (dirty & /*$$scope, open, toasts*/ 16390) {
				modal_changes.$$scope = { dirty, ctx };
			}

			if (!updating_open && dirty & /*open*/ 2) {
				updating_open = true;
				modal_changes.open = /*open*/ ctx[1];
				add_flush_callback(() => updating_open = false);
			}

			modal.$set(modal_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(button1.$$.fragment, local);
			transition_in(modal.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(button1.$$.fragment, local);
			transition_out(modal.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(button0);
			if (detaching) detach_dev(t1);
			destroy_component(button1, detaching);
			if (detaching) detach_dev(t2);
			destroy_component(modal, detaching);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$6.name,
		type: "if",
		source: "(39:12) {#if isLoggedIn && isAuthor(toast.toasterFacebookId)}",
		ctx
	});

	return block;
}

// (41:16) <Button on:click={e => open=true}>
function create_default_slot_4(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Delete");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Delete");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_4.name,
		type: "slot",
		source: "(41:16) <Button on:click={e => open=true}>",
		ctx
	});

	return block;
}

// (45:24) <Button on:click={deleteToast(toast.toastId)}>
function create_default_slot_3(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Delete");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Delete");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_3.name,
		type: "slot",
		source: "(45:24) <Button on:click={deleteToast(toast.toastId)}>",
		ctx
	});

	return block;
}

// (46:24) <Button on:click={e => open=false}>
function create_default_slot_2(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Cancel");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Cancel");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_2.name,
		type: "slot",
		source: "(46:24) <Button on:click={e => open=false}>",
		ctx
	});

	return block;
}

// (43:20) <Card>
function create_default_slot_1(ctx) {
	let t0;
	let button0;
	let t1;
	let button1;
	let current;

	button0 = new Button({
			props: {
				$$slots: { default: [create_default_slot_3] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button0.$on("click", function () {
		if (is_function(deleteToast(/*toast*/ ctx[11].toastId))) deleteToast(/*toast*/ ctx[11].toastId).apply(this, arguments);
	});

	button1 = new Button({
			props: {
				$$slots: { default: [create_default_slot_2] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button1.$on("click", /*click_handler_2*/ ctx[8]);

	const block = {
		c: function create() {
			t0 = text("Are you sure you want to delete this toast?\r\n                        ");
			create_component(button0.$$.fragment);
			t1 = space();
			create_component(button1.$$.fragment);
		},
		l: function claim(nodes) {
			t0 = claim_text(nodes, "Are you sure you want to delete this toast?\r\n                        ");
			claim_component(button0.$$.fragment, nodes);
			t1 = claim_space(nodes);
			claim_component(button1.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			mount_component(button0, target, anchor);
			insert_dev(target, t1, anchor);
			mount_component(button1, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const button0_changes = {};

			if (dirty & /*$$scope*/ 16384) {
				button0_changes.$$scope = { dirty, ctx };
			}

			button0.$set(button0_changes);
			const button1_changes = {};

			if (dirty & /*$$scope*/ 16384) {
				button1_changes.$$scope = { dirty, ctx };
			}

			button1.$set(button1_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(button0.$$.fragment, local);
			transition_in(button1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(button0.$$.fragment, local);
			transition_out(button1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			destroy_component(button0, detaching);
			if (detaching) detach_dev(t1);
			destroy_component(button1, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(43:20) <Card>",
		ctx
	});

	return block;
}

// (42:16) <Modal bind:open>
function create_default_slot$2(ctx) {
	let card;
	let current;

	card = new Card({
			props: {
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(card.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(card.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(card, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const card_changes = {};

			if (dirty & /*$$scope, open, toasts*/ 16390) {
				card_changes.$$scope = { dirty, ctx };
			}

			card.$set(card_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(card.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(card.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(card, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot$2.name,
		type: "slot",
		source: "(42:16) <Modal bind:open>",
		ctx
	});

	return block;
}

// (36:8) {#each toasts as toast}
function create_each_block$2(ctx) {
	let p0;
	let t0_value = /*toast*/ ctx[11].toastContent + "";
	let t0;
	let t1;
	let p1;
	let t2;
	let t3_value = /*toast*/ ctx[11].toasterName + "";
	let t3;
	let t4;
	let t5_value = /*toast*/ ctx[11].toasterRelationship + "";
	let t5;
	let t6;
	let t7_value = /*toast*/ ctx[11].toasterAssociation + "";
	let t7;
	let t8;
	let show_if = /*isLoggedIn*/ ctx[0] && /*isAuthor*/ ctx[3](/*toast*/ ctx[11].toasterFacebookId);
	let t9;
	let current;
	let if_block = show_if && create_if_block$6(ctx);

	const block = {
		c: function create() {
			p0 = element("p");
			t0 = text(t0_value);
			t1 = space();
			p1 = element("p");
			t2 = text("- ");
			t3 = text(t3_value);
			t4 = text(", ");
			t5 = text(t5_value);
			t6 = text(" of the ");
			t7 = text(t7_value);
			t8 = space();
			if (if_block) if_block.c();
			t9 = space();
			this.h();
		},
		l: function claim(nodes) {
			p0 = claim_element(nodes, "P", {});
			var p0_nodes = children(p0);
			t0 = claim_text(p0_nodes, t0_value);
			p0_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			p1 = claim_element(nodes, "P", {});
			var p1_nodes = children(p1);
			t2 = claim_text(p1_nodes, "- ");
			t3 = claim_text(p1_nodes, t3_value);
			t4 = claim_text(p1_nodes, ", ");
			t5 = claim_text(p1_nodes, t5_value);
			t6 = claim_text(p1_nodes, " of the ");
			t7 = claim_text(p1_nodes, t7_value);
			t8 = claim_space(p1_nodes);
			if (if_block) if_block.l(p1_nodes);
			t9 = claim_space(p1_nodes);
			p1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(p0, file$d, 36, 12, 1102);
			add_location(p1, file$d, 37, 12, 1143);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p0, anchor);
			append_dev(p0, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, p1, anchor);
			append_dev(p1, t2);
			append_dev(p1, t3);
			append_dev(p1, t4);
			append_dev(p1, t5);
			append_dev(p1, t6);
			append_dev(p1, t7);
			append_dev(p1, t8);
			if (if_block) if_block.m(p1, null);
			append_dev(p1, t9);
			current = true;
		},
		p: function update(ctx, dirty) {
			if ((!current || dirty & /*toasts*/ 4) && t0_value !== (t0_value = /*toast*/ ctx[11].toastContent + "")) set_data_dev(t0, t0_value);
			if ((!current || dirty & /*toasts*/ 4) && t3_value !== (t3_value = /*toast*/ ctx[11].toasterName + "")) set_data_dev(t3, t3_value);
			if ((!current || dirty & /*toasts*/ 4) && t5_value !== (t5_value = /*toast*/ ctx[11].toasterRelationship + "")) set_data_dev(t5, t5_value);
			if ((!current || dirty & /*toasts*/ 4) && t7_value !== (t7_value = /*toast*/ ctx[11].toasterAssociation + "")) set_data_dev(t7, t7_value);
			if (dirty & /*isLoggedIn, toasts*/ 5) show_if = /*isLoggedIn*/ ctx[0] && /*isAuthor*/ ctx[3](/*toast*/ ctx[11].toasterFacebookId);

			if (show_if) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*isLoggedIn, toasts*/ 5) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block$6(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(p1, t9);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(p1);
			if (if_block) if_block.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block$2.name,
		type: "each",
		source: "(36:8) {#each toasts as toast}",
		ctx
	});

	return block;
}

function create_fragment$d(ctx) {
	let section;
	let h1;
	let t0;
	let t1;
	let img;
	let img_src_value;
	let t2;
	let div;
	let current;
	let each_value = /*toasts*/ ctx[2];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block$2(get_each_context$2(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			section = element("section");
			h1 = element("h1");
			t0 = text("Toasts");
			t1 = space();
			img = element("img");
			t2 = space();
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			h1 = claim_element(section_nodes, "H1", {});
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "Toasts");
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(section_nodes);
			img = claim_element(section_nodes, "IMG", { alt: true, src: true });
			t2 = claim_space(section_nodes);
			div = claim_element(section_nodes, "DIV", {});
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h1, file$d, 32, 4, 963);
			attr_dev(img, "alt", "Heading Decoration");
			if (img.src !== (img_src_value = "./HeadingDecorator.png")) attr_dev(img, "src", img_src_value);
			add_location(img, file$d, 33, 4, 984);
			add_location(div, file$d, 34, 4, 1050);
			attr_dev(section, "class", "toasts");
			add_location(section, file$d, 31, 0, 933);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, h1);
			append_dev(h1, t0);
			append_dev(section, t1);
			append_dev(section, img);
			append_dev(section, t2);
			append_dev(section, div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*open, deleteToast, toasts, editToast, isLoggedIn, isAuthor*/ 31) {
				each_value = /*toasts*/ ctx[2];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context$2(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block$2(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$d.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function deleteToast(toastId) {
	await fetch("/api/toastController", {
		method: "DELETE",
		body: JSON.stringify({ toastId }),
		headers: { "Content-type": "application/json" }
	}).then(response => window.location.reload());
}

function instance$d($$self, $$props, $$invalidate) {
	
	const dispatch = createEventDispatcher();
	let open = false;
	let toasts = [];
	let { isLoggedIn } = $$props;
	let { facebookUserId } = $$props;

	function isAuthor(toasterFacebookId) {
		return facebookUserId === toasterFacebookId;
	}

	function editToast(toast) {
		dispatch("editToast", toast);
	}

	onMount(async () => {
		await fetch("api/toastController", { method: "GET" }).then(toasts => toasts.json()).then(toastsData => {
			$$invalidate(2, toasts = toastsData);
		});
	});

	const writable_props = ["isLoggedIn", "facebookUserId"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<ToastsList> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("ToastsList", $$slots, []);

	const click_handler = toast => {
		editToast(toast);
	};

	const click_handler_1 = e => $$invalidate(1, open = true);
	const click_handler_2 = e => $$invalidate(1, open = false);

	function modal_open_binding(value) {
		open = value;
		$$invalidate(1, open);
	}

	$$self.$set = $$props => {
		if ("isLoggedIn" in $$props) $$invalidate(0, isLoggedIn = $$props.isLoggedIn);
		if ("facebookUserId" in $$props) $$invalidate(5, facebookUserId = $$props.facebookUserId);
	};

	$$self.$capture_state = () => ({
		onMount,
		createEventDispatcher,
		Modal,
		Button,
		Card,
		dispatch,
		open,
		toasts,
		isLoggedIn,
		facebookUserId,
		isAuthor,
		editToast,
		deleteToast
	});

	$$self.$inject_state = $$props => {
		if ("open" in $$props) $$invalidate(1, open = $$props.open);
		if ("toasts" in $$props) $$invalidate(2, toasts = $$props.toasts);
		if ("isLoggedIn" in $$props) $$invalidate(0, isLoggedIn = $$props.isLoggedIn);
		if ("facebookUserId" in $$props) $$invalidate(5, facebookUserId = $$props.facebookUserId);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		isLoggedIn,
		open,
		toasts,
		isAuthor,
		editToast,
		facebookUserId,
		click_handler,
		click_handler_1,
		click_handler_2,
		modal_open_binding
	];
}

class ToastsList extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$d, create_fragment$d, safe_not_equal, { isLoggedIn: 0, facebookUserId: 5 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ToastsList",
			options,
			id: create_fragment$d.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*isLoggedIn*/ ctx[0] === undefined && !("isLoggedIn" in props)) {
			console.warn("<ToastsList> was created without expected prop 'isLoggedIn'");
		}

		if (/*facebookUserId*/ ctx[5] === undefined && !("facebookUserId" in props)) {
			console.warn("<ToastsList> was created without expected prop 'facebookUserId'");
		}
	}

	get isLoggedIn() {
		throw new Error("<ToastsList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isLoggedIn(value) {
		throw new Error("<ToastsList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get facebookUserId() {
		throw new Error("<ToastsList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set facebookUserId(value) {
		throw new Error("<ToastsList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\routes\_components\Toasts.svelte generated by Svelte v3.23.2 */

const { Object: Object_1 } = globals;

function create_fragment$e(ctx) {
	let toastslist;
	let t;
	let toastform;
	let current;

	toastslist = new ToastsList({
			props: {
				facebookUserId: /*facebookUserId*/ ctx[1],
				isLoggedIn: /*isLoggedIn*/ ctx[0]
			},
			$$inline: true
		});

	toastslist.$on("editToast", /*editToast*/ ctx[5]);

	toastform = new ToastForm({
			props: {
				isEdittingToast: /*isEdittingToast*/ ctx[2],
				toast: /*toast*/ ctx[3],
				facebookUserId: /*facebookUserId*/ ctx[1],
				isLoggedIn: /*isLoggedIn*/ ctx[0]
			},
			$$inline: true
		});

	toastform.$on("toggleLogIn", /*forward*/ ctx[4]);

	const block = {
		c: function create() {
			create_component(toastslist.$$.fragment);
			t = space();
			create_component(toastform.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(toastslist.$$.fragment, nodes);
			t = claim_space(nodes);
			claim_component(toastform.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(toastslist, target, anchor);
			insert_dev(target, t, anchor);
			mount_component(toastform, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const toastslist_changes = {};
			if (dirty & /*facebookUserId*/ 2) toastslist_changes.facebookUserId = /*facebookUserId*/ ctx[1];
			if (dirty & /*isLoggedIn*/ 1) toastslist_changes.isLoggedIn = /*isLoggedIn*/ ctx[0];
			toastslist.$set(toastslist_changes);
			const toastform_changes = {};
			if (dirty & /*isEdittingToast*/ 4) toastform_changes.isEdittingToast = /*isEdittingToast*/ ctx[2];
			if (dirty & /*toast*/ 8) toastform_changes.toast = /*toast*/ ctx[3];
			if (dirty & /*facebookUserId*/ 2) toastform_changes.facebookUserId = /*facebookUserId*/ ctx[1];
			if (dirty & /*isLoggedIn*/ 1) toastform_changes.isLoggedIn = /*isLoggedIn*/ ctx[0];
			toastform.$set(toastform_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(toastslist.$$.fragment, local);
			transition_in(toastform.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(toastslist.$$.fragment, local);
			transition_out(toastform.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(toastslist, detaching);
			if (detaching) detach_dev(t);
			destroy_component(toastform, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$e.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$e($$self, $$props, $$invalidate) {
	
	const dispatch = createEventDispatcher();
	let { isLoggedIn } = $$props;
	let { facebookUserId } = $$props;
	let isEdittingToast = false;

	let toast = {
		toastId: null,
		toasterName: "",
		toasterRelationship: "",
		toasterAssociation: "",
		toastContent: "",
		toasterFacebookId: ""
	};

	function forward() {
		dispatch("toggleLogIn");
	}

	function editToast(event) {
		$$invalidate(3, toast = Object.assign({}, event.detail));
		$$invalidate(2, isEdittingToast = true);
	}

	const writable_props = ["isLoggedIn", "facebookUserId"];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Toasts> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Toasts", $$slots, []);

	$$self.$set = $$props => {
		if ("isLoggedIn" in $$props) $$invalidate(0, isLoggedIn = $$props.isLoggedIn);
		if ("facebookUserId" in $$props) $$invalidate(1, facebookUserId = $$props.facebookUserId);
	};

	$$self.$capture_state = () => ({
		ToastForm,
		ToastsList,
		createEventDispatcher,
		dispatch,
		isLoggedIn,
		facebookUserId,
		isEdittingToast,
		toast,
		forward,
		editToast
	});

	$$self.$inject_state = $$props => {
		if ("isLoggedIn" in $$props) $$invalidate(0, isLoggedIn = $$props.isLoggedIn);
		if ("facebookUserId" in $$props) $$invalidate(1, facebookUserId = $$props.facebookUserId);
		if ("isEdittingToast" in $$props) $$invalidate(2, isEdittingToast = $$props.isEdittingToast);
		if ("toast" in $$props) $$invalidate(3, toast = $$props.toast);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [isLoggedIn, facebookUserId, isEdittingToast, toast, forward, editToast];
}

class Toasts extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$e, create_fragment$e, safe_not_equal, { isLoggedIn: 0, facebookUserId: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Toasts",
			options,
			id: create_fragment$e.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*isLoggedIn*/ ctx[0] === undefined && !("isLoggedIn" in props)) {
			console.warn("<Toasts> was created without expected prop 'isLoggedIn'");
		}

		if (/*facebookUserId*/ ctx[1] === undefined && !("facebookUserId" in props)) {
			console.warn("<Toasts> was created without expected prop 'facebookUserId'");
		}
	}

	get isLoggedIn() {
		throw new Error("<Toasts>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isLoggedIn(value) {
		throw new Error("<Toasts>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get facebookUserId() {
		throw new Error("<Toasts>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set facebookUserId(value) {
		throw new Error("<Toasts>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\routes\_components\MenuIcon.svelte generated by Svelte v3.23.2 */
const file$e = "src\\routes\\_components\\MenuIcon.svelte";

function create_fragment$f(ctx) {
	let img;
	let img_src_value;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", { src: true, alt: true, class: true });
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "./134216-32.png")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "hamburger menu");
			attr_dev(img, "class", "svelte-1ylyyc6");
			add_location(img, file$e, 9, 0, 237);
		},
		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);

			if (!mounted) {
				dispose = listen_dev(img, "click", /*handleToggle*/ ctx[0], false, false, false);
				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(img);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$f.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$f($$self, $$props, $$invalidate) {
	const dispatch = createEventDispatcher();
	let { isLoggedIn } = $$props;
	let isOpen = false;

	function handleToggle() {
		dispatch("handleToggle");
	}

	const writable_props = ["isLoggedIn"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<MenuIcon> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("MenuIcon", $$slots, []);

	$$self.$set = $$props => {
		if ("isLoggedIn" in $$props) $$invalidate(1, isLoggedIn = $$props.isLoggedIn);
	};

	$$self.$capture_state = () => ({
		createEventDispatcher,
		dispatch,
		isLoggedIn,
		isOpen,
		handleToggle
	});

	$$self.$inject_state = $$props => {
		if ("isLoggedIn" in $$props) $$invalidate(1, isLoggedIn = $$props.isLoggedIn);
		if ("isOpen" in $$props) isOpen = $$props.isOpen;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [handleToggle, isLoggedIn];
}

class MenuIcon extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$f, create_fragment$f, safe_not_equal, { isLoggedIn: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "MenuIcon",
			options,
			id: create_fragment$f.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*isLoggedIn*/ ctx[1] === undefined && !("isLoggedIn" in props)) {
			console.warn("<MenuIcon> was created without expected prop 'isLoggedIn'");
		}
	}

	get isLoggedIn() {
		throw new Error("<MenuIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isLoggedIn(value) {
		throw new Error("<MenuIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

var POSITIONS = [
  "bottom-right",
  "bottom-center",
  "bottom-left",
  "top-right",
  "top-center",
  "top-left",
  "right-bottom",
  "right-center",
  "right-top",
  "left-bottom",
  "left-center",
  "left-top"
];

const RIGHT = "right";
const LEFT = "left";
const TOP = "top";
const CENTER = "center";
const BOTTOM = "bottom";

// for SSR
function isBrowser() {
  return typeof window !== 'undefined' && typeof document !== 'undefined';
}

const getNextPosition = (position, dimensions) => {
  const clientHeight = Math.min(document.body.clientHeight, document.documentElement.clientHeight);
  const clientWidth = Math.min(document.body.clientWidth, document.documentElement.clientWidth);
  Object.assign(dimensions, { clientWidth, clientHeight });

  const [mainPosition, secondaryPosition] = position.split('-');
  const nextMainPosition = getMainPosition(mainPosition, dimensions);
  const nextSecondaryPosition = getSecondaryPosition(secondaryPosition, dimensions);

  return `${nextMainPosition}-${nextSecondaryPosition}`;
};

const getMainPosition = (
  position,
  {
    top,
    bottom,
    left,
    right,
    height,
    width,
    clientWidth,
    clientHeight,
  },
) => {

  const fitsOnTop = top > height;
  const fitsOnBottom = bottom + height < clientHeight;

  const fitsOnLeft = left > width;
  const fitsOnRight = right + width < clientWidth;

  const positions = {
    top: () => !fitsOnTop && fitsOnBottom ? BOTTOM : TOP,
    bottom: () => fitsOnTop && !fitsOnBottom ? TOP : BOTTOM,
    left: () => !fitsOnLeft && fitsOnRight ? RIGHT : LEFT,
    right: () => !fitsOnRight && fitsOnLeft ? LEFT : RIGHT,
  };

  return positions[position]();
};

const getSecondaryPosition = (
  position,
  {
    top,
    bottom,
    left,
    right,
    height,
    width,
    clientWidth,
    clientHeight,
  }
) => {
  const parentHeight = bottom - top;
  const parentCenter = top + parentHeight / 2;

  const fitsOnTop = bottom > height;
  const fitsOnBottom = top + height < clientHeight;
  const fitsCenter = (parentCenter - height / 2) > 0 && (parentCenter + height / 2) < clientHeight;
  const fitsOnLeft = right > width;
  const fitsOnRight = left + width < clientWidth;

  const positions = {
    top: () => !fitsOnTop && fitsOnBottom ? BOTTOM : TOP,
    center: () => fitsCenter ? CENTER : positions.top(),
    bottom: () => !fitsOnBottom && fitsOnTop ? TOP : BOTTOM,
    left: () => !fitsOnLeft && fitsOnRight ? RIGHT : LEFT,
    right: () => !fitsOnRight && fitsOnLeft ? LEFT : RIGHT,
  };

  return positions[position]();
};

/* node_modules\svelte-overlay\src\components\Overlay.svelte generated by Svelte v3.23.2 */

const { Error: Error_1, window: window_1 } = globals;
const file$f = "node_modules\\svelte-overlay\\src\\components\\Overlay.svelte";
const get_content_slot_changes = dirty => ({ isOpen: dirty[0] & /*openedState*/ 2048 });

const get_content_slot_context = ctx => ({
	toggle: /*toggle*/ ctx[12],
	isOpen: /*openedState*/ ctx[11],
	open: /*open*/ ctx[13],
	close: /*close*/ ctx[14]
});

const get_parent_slot_changes = dirty => ({ isOpen: dirty[0] & /*openedState*/ 2048 });

const get_parent_slot_context = ctx => ({
	toggle: /*toggle*/ ctx[12],
	isOpen: /*openedState*/ ctx[11],
	open: /*open*/ ctx[13],
	close: /*close*/ ctx[14]
});

// (155:2) {#if openedState}
function create_if_block$7(ctx) {
	let div;
	let div_class_value;
	let current;
	const content_slot_template = /*$$slots*/ ctx[24].content;
	const content_slot = create_slot(content_slot_template, ctx, /*$$scope*/ ctx[23], get_content_slot_context);

	const block = {
		c: function create() {
			div = element("div");
			if (content_slot) content_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			if (content_slot) content_slot.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", div_class_value = "" + (null_to_empty(`content ${/*currentPosition*/ ctx[2] || ""}`) + " svelte-m0jddf"));
			add_location(div, file$f, 155, 3, 3777);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);

			if (content_slot) {
				content_slot.m(div, null);
			}

			/*div_binding*/ ctx[26](div);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (content_slot) {
				if (content_slot.p && dirty[0] & /*$$scope, openedState*/ 8390656) {
					update_slot(content_slot, content_slot_template, ctx, /*$$scope*/ ctx[23], dirty, get_content_slot_changes, get_content_slot_context);
				}
			}

			if (!current || dirty[0] & /*currentPosition*/ 4 && div_class_value !== (div_class_value = "" + (null_to_empty(`content ${/*currentPosition*/ ctx[2] || ""}`) + " svelte-m0jddf"))) {
				attr_dev(div, "class", div_class_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(content_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(content_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (content_slot) content_slot.d(detaching);
			/*div_binding*/ ctx[26](null);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$7.name,
		type: "if",
		source: "(155:2) {#if openedState}",
		ctx
	});

	return block;
}

function create_fragment$g(ctx) {
	let div2;
	let div0;
	let t;
	let div1;
	let div1_style_value;
	let div2_class_value;
	let div2_style_value;
	let current;
	let mounted;
	let dispose;
	const parent_slot_template = /*$$slots*/ ctx[24].parent;
	const parent_slot = create_slot(parent_slot_template, ctx, /*$$scope*/ ctx[23], get_parent_slot_context);
	let if_block = /*openedState*/ ctx[11] && create_if_block$7(ctx);

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			if (parent_slot) parent_slot.c();
			t = space();
			div1 = element("div");
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true, style: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			if (parent_slot) parent_slot.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			t = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true, style: true });
			var div1_nodes = children(div1);
			if (if_block) if_block.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "svelte-m0jddf");
			add_location(div0, file$f, 147, 1, 3493);
			attr_dev(div1, "class", "content-wrapper svelte-m0jddf");
			attr_dev(div1, "style", div1_style_value = `top: ${/*topStyle*/ ctx[6]}px; left: ${/*leftStyle*/ ctx[7]}px; width: ${/*widthStyle*/ ctx[8]}px; height: ${/*heightStyle*/ ctx[9]}px; z-index:${/*zIndex*/ ctx[0]};`);
			add_location(div1, file$f, 150, 1, 3597);
			attr_dev(div2, "class", div2_class_value = "" + (null_to_empty(`overlay ${/*className*/ ctx[10]}`) + " svelte-m0jddf"));
			attr_dev(div2, "style", div2_style_value = `z-index:${/*zIndex*/ ctx[0]}; ${/*style*/ ctx[1]}`);
			add_location(div2, file$f, 146, 0, 3398);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div0);

			if (parent_slot) {
				parent_slot.m(div0, null);
			}

			/*div0_binding*/ ctx[25](div0);
			append_dev(div2, t);
			append_dev(div2, div1);
			if (if_block) if_block.m(div1, null);
			/*div2_binding*/ ctx[27](div2);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(window_1, "mousedown", /*handleWindowClick*/ ctx[15], false, false, false),
					listen_dev(window_1, "keydown", /*handleWindowKeyDown*/ ctx[16], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (parent_slot) {
				if (parent_slot.p && dirty[0] & /*$$scope, openedState*/ 8390656) {
					update_slot(parent_slot, parent_slot_template, ctx, /*$$scope*/ ctx[23], dirty, get_parent_slot_changes, get_parent_slot_context);
				}
			}

			if (/*openedState*/ ctx[11]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty[0] & /*openedState*/ 2048) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block$7(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(div1, null);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}

			if (!current || dirty[0] & /*topStyle, leftStyle, widthStyle, heightStyle, zIndex*/ 961 && div1_style_value !== (div1_style_value = `top: ${/*topStyle*/ ctx[6]}px; left: ${/*leftStyle*/ ctx[7]}px; width: ${/*widthStyle*/ ctx[8]}px; height: ${/*heightStyle*/ ctx[9]}px; z-index:${/*zIndex*/ ctx[0]};`)) {
				attr_dev(div1, "style", div1_style_value);
			}

			if (!current || dirty[0] & /*className*/ 1024 && div2_class_value !== (div2_class_value = "" + (null_to_empty(`overlay ${/*className*/ ctx[10]}`) + " svelte-m0jddf"))) {
				attr_dev(div2, "class", div2_class_value);
			}

			if (!current || dirty[0] & /*zIndex, style*/ 3 && div2_style_value !== (div2_style_value = `z-index:${/*zIndex*/ ctx[0]}; ${/*style*/ ctx[1]}`)) {
				attr_dev(div2, "style", div2_style_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(parent_slot, local);
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(parent_slot, local);
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
			if (parent_slot) parent_slot.d(detaching);
			/*div0_binding*/ ctx[25](null);
			if (if_block) if_block.d();
			/*div2_binding*/ ctx[27](null);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$g.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$g($$self, $$props, $$invalidate) {
	const omit_props_names = [
		"isOpen","updateOnScroll","closeOnScroll","position","closeOnClickOutside","zIndex","onWindowKeyDown","style"
	];

	let $$restProps = compute_rest_props($$props, omit_props_names);
	const dispatch = createEventDispatcher();
	const DEFAULT_POSITION = POSITIONS[0];
	let { isOpen = false } = $$props;
	let { updateOnScroll = false } = $$props;
	let { closeOnScroll = false } = $$props;
	let { position = DEFAULT_POSITION } = $$props;
	let { closeOnClickOutside = false } = $$props;
	let { zIndex = 1 } = $$props;

	let { onWindowKeyDown = () => {
		
	} } = $$props;

	let { style = "" } = $$props;
	let currentPosition = null;
	let parent;
	let content;
	let target;
	let topStyle = 0;
	let leftStyle = 0;
	let widthStyle = 0;
	let heightStyle = 0;

	function addListeners() {
		if (!isBrowser()) return;
		window.addEventListener("resize", updatePosition);
		if (closeOnScroll) window.addEventListener("scroll", close); else if (updateOnScroll) window.addEventListener("scroll", updatePosition);
	}

	function removeListeners() {
		if (!isBrowser()) return;
		window.removeEventListener("resize", updatePosition);
		window.removeEventListener("scroll", updatePosition);
		window.removeEventListener("scroll", close);
	}

	onMount(() => {
		if (openedState) {
			addListeners();
		}
	});

	onDestroy(() => {
		if (!isBrowser()) return;
		removeListeners();
	});

	beforeUpdate(updatePosition);

	function toggle(value) {
		const prevOpen = isOpen;
		const nextOpen = value === true || value === false ? value : !isOpen;
		if (nextOpen && hasParent && hasContent || !nextOpen) $$invalidate(17, isOpen = nextOpen);

		if (prevOpen !== isOpen) {
			dispatch("toggle", isOpen);

			if (isOpen) {
				addListeners();
				dispatch("open");
			} else {
				dispatch("close");
				removeListeners();
			}
		}
	}

	function open() {
		if (!openedState) toggle(true);
	}

	function close() {
		if (openedState) toggle(false);
	}

	function contains(event) {
		const path = event.path || event.composedPath();
		return path.includes(parent) || path.includes(content);
	}

	function handleWindowClick(event) {
		if (!closeOnClickOutside || !openedState || contains(event)) return;
		close();
	}

	function handleWindowKeyDown(event) {
		if (!onWindowKeyDown || !openedState) return;

		onWindowKeyDown(event, {
			isOpen: openedState,
			open,
			close,
			toggle,
			contains
		});
	}

	async function updatePosition() {
		await tick();
		if (!openedState) return;
		if (!POSITIONS.includes(position)) $$invalidate(18, position = DEFAULT_POSITION);
		const { top, bottom, left, right, width: parentWidth, height: parentHeight } = parent.getBoundingClientRect();
		const { height, width } = content.getBoundingClientRect();
		const dimensions = { top, bottom, left, right, height, width };
		const nextPosition = getNextPosition(position, dimensions);

		if (currentPosition !== nextPosition) {
			$$invalidate(2, currentPosition = nextPosition);
		}

		$$invalidate(6, topStyle = top);
		$$invalidate(7, leftStyle = left);
		$$invalidate(8, widthStyle = parentWidth);
		$$invalidate(9, heightStyle = parentHeight);
	}

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Overlay", $$slots, ['parent','content']);

	function div0_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			parent = $$value;
			$$invalidate(3, parent);
		});
	}

	function div_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			content = $$value;
			$$invalidate(4, content);
		});
	}

	function div2_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			target = $$value;
			$$invalidate(5, target);
		});
	}

	$$self.$set = $$new_props => {
		$$props = assign(assign({}, $$props), exclude_internal_props($$new_props));
		$$invalidate(36, $$restProps = compute_rest_props($$props, omit_props_names));
		if ("isOpen" in $$new_props) $$invalidate(17, isOpen = $$new_props.isOpen);
		if ("updateOnScroll" in $$new_props) $$invalidate(19, updateOnScroll = $$new_props.updateOnScroll);
		if ("closeOnScroll" in $$new_props) $$invalidate(20, closeOnScroll = $$new_props.closeOnScroll);
		if ("position" in $$new_props) $$invalidate(18, position = $$new_props.position);
		if ("closeOnClickOutside" in $$new_props) $$invalidate(21, closeOnClickOutside = $$new_props.closeOnClickOutside);
		if ("zIndex" in $$new_props) $$invalidate(0, zIndex = $$new_props.zIndex);
		if ("onWindowKeyDown" in $$new_props) $$invalidate(22, onWindowKeyDown = $$new_props.onWindowKeyDown);
		if ("style" in $$new_props) $$invalidate(1, style = $$new_props.style);
		if ("$$scope" in $$new_props) $$invalidate(23, $$scope = $$new_props.$$scope);
	};

	$$self.$capture_state = () => ({
		beforeUpdate,
		onMount,
		onDestroy,
		tick,
		createEventDispatcher,
		POSITIONS,
		isBrowser,
		getNextPosition,
		dispatch,
		DEFAULT_POSITION,
		isOpen,
		updateOnScroll,
		closeOnScroll,
		position,
		closeOnClickOutside,
		zIndex,
		onWindowKeyDown,
		style,
		currentPosition,
		parent,
		content,
		target,
		topStyle,
		leftStyle,
		widthStyle,
		heightStyle,
		addListeners,
		removeListeners,
		toggle,
		open,
		close,
		contains,
		handleWindowClick,
		handleWindowKeyDown,
		updatePosition,
		className,
		hasParent,
		hasContent,
		openedState
	});

	$$self.$inject_state = $$new_props => {
		if ("isOpen" in $$props) $$invalidate(17, isOpen = $$new_props.isOpen);
		if ("updateOnScroll" in $$props) $$invalidate(19, updateOnScroll = $$new_props.updateOnScroll);
		if ("closeOnScroll" in $$props) $$invalidate(20, closeOnScroll = $$new_props.closeOnScroll);
		if ("position" in $$props) $$invalidate(18, position = $$new_props.position);
		if ("closeOnClickOutside" in $$props) $$invalidate(21, closeOnClickOutside = $$new_props.closeOnClickOutside);
		if ("zIndex" in $$props) $$invalidate(0, zIndex = $$new_props.zIndex);
		if ("onWindowKeyDown" in $$props) $$invalidate(22, onWindowKeyDown = $$new_props.onWindowKeyDown);
		if ("style" in $$props) $$invalidate(1, style = $$new_props.style);
		if ("currentPosition" in $$props) $$invalidate(2, currentPosition = $$new_props.currentPosition);
		if ("parent" in $$props) $$invalidate(3, parent = $$new_props.parent);
		if ("content" in $$props) $$invalidate(4, content = $$new_props.content);
		if ("target" in $$props) $$invalidate(5, target = $$new_props.target);
		if ("topStyle" in $$props) $$invalidate(6, topStyle = $$new_props.topStyle);
		if ("leftStyle" in $$props) $$invalidate(7, leftStyle = $$new_props.leftStyle);
		if ("widthStyle" in $$props) $$invalidate(8, widthStyle = $$new_props.widthStyle);
		if ("heightStyle" in $$props) $$invalidate(9, heightStyle = $$new_props.heightStyle);
		if ("className" in $$props) $$invalidate(10, className = $$new_props.className);
		if ("hasParent" in $$props) $$invalidate(28, hasParent = $$new_props.hasParent);
		if ("hasContent" in $$props) $$invalidate(29, hasContent = $$new_props.hasContent);
		if ("openedState" in $$props) $$invalidate(11, openedState = $$new_props.openedState);
	};

	let className;
	let hasParent;
	let hasContent;
	let openedState;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		 $$invalidate(10, className = $$restProps["class"] || "");

		if ($$self.$$.dirty[0] & /*parent*/ 8) {
			 $$invalidate(28, hasParent = !parent || !!parent.childNodes.length);
		}

		if ($$self.$$.dirty[0] & /*content*/ 16) {
			 $$invalidate(29, hasContent = !content || !!content.childNodes.length);
		}

		if ($$self.$$.dirty[0] & /*hasParent*/ 268435456) {
			 if (!hasParent) throw new Error("parent slot is required");
		}

		if ($$self.$$.dirty[0] & /*hasContent*/ 536870912) {
			 if (!hasContent) throw new Error("content slot is required");
		}

		if ($$self.$$.dirty[0] & /*isOpen, hasParent, hasContent*/ 805437440) {
			 $$invalidate(11, openedState = isOpen && hasParent && hasContent);
		}
	};

	return [
		zIndex,
		style,
		currentPosition,
		parent,
		content,
		target,
		topStyle,
		leftStyle,
		widthStyle,
		heightStyle,
		className,
		openedState,
		toggle,
		open,
		close,
		handleWindowClick,
		handleWindowKeyDown,
		isOpen,
		position,
		updateOnScroll,
		closeOnScroll,
		closeOnClickOutside,
		onWindowKeyDown,
		$$scope,
		$$slots,
		div0_binding,
		div_binding,
		div2_binding
	];
}

class Overlay extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(
			this,
			options,
			instance$g,
			create_fragment$g,
			safe_not_equal,
			{
				isOpen: 17,
				updateOnScroll: 19,
				closeOnScroll: 20,
				position: 18,
				closeOnClickOutside: 21,
				zIndex: 0,
				onWindowKeyDown: 22,
				style: 1
			},
			[-1, -1]
		);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Overlay",
			options,
			id: create_fragment$g.name
		});
	}

	get isOpen() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isOpen(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get updateOnScroll() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set updateOnScroll(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get closeOnScroll() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set closeOnScroll(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get position() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set position(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get closeOnClickOutside() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set closeOnClickOutside(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get zIndex() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set zIndex(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onWindowKeyDown() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onWindowKeyDown(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get style() {
		throw new Error_1("<Overlay>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set style(value) {
		throw new Error_1("<Overlay>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

var _ = {
  $(selector) {
    if (typeof selector === "string") {
      return document.querySelector(selector);
    }
    return selector;
  },
  extend(...args) {
    return Object.assign(...args);
  },
  cumulativeOffset(element) {
    let top = 0;
    let left = 0;

    do {
      top += element.offsetTop || 0;
      left += element.offsetLeft || 0;
      element = element.offsetParent;
    } while (element);

    return {
      top: top,
      left: left
    };
  },
  directScroll(element) {
    return element && element !== document && element !== document.body;
  },
  scrollTop(element, value) {
    let inSetter = value !== undefined;
    if (this.directScroll(element)) {
      return inSetter ? (element.scrollTop = value) : element.scrollTop;
    } else {
      return inSetter
        ? (document.documentElement.scrollTop = document.body.scrollTop = value)
        : window.pageYOffset ||
            document.documentElement.scrollTop ||
            document.body.scrollTop ||
            0;
    }
  },
  scrollLeft(element, value) {
    let inSetter = value !== undefined;
    if (this.directScroll(element)) {
      return inSetter ? (element.scrollLeft = value) : element.scrollLeft;
    } else {
      return inSetter
        ? (document.documentElement.scrollLeft = document.body.scrollLeft = value)
        : window.pageXOffset ||
            document.documentElement.scrollLeft ||
            document.body.scrollLeft ||
            0;
    }
  }
};

const defaultOptions = {
  container: "body",
  duration: 500,
  delay: 0,
  offset: 0,
  easing: "cubicInOut",
  onStart: noop,
  onDone: noop,
  onAborting: noop,
  scrollX: false,
  scrollY: true
};

const _scrollTo = options => {
  let {
    offset,
    duration,
    delay,
    easing,
    x=0,
    y=0,
    scrollX,
    scrollY,
    onStart,
    onDone,
    container,
    onAborting,
    element
  } = options;

  if (typeof easing === "string") {
    easing = easings[easing];
  }
  if (typeof offset === "function") {
    offset = offset();
  }

  var cumulativeOffsetContainer = _.cumulativeOffset(container);
  var cumulativeOffsetTarget = element
    ? _.cumulativeOffset(element)
    : { top: y, left: x };

  var initialX = _.scrollLeft(container);
  var initialY = _.scrollTop(container);

  var targetX =
    cumulativeOffsetTarget.left - cumulativeOffsetContainer.left + offset;
  var targetY =
    cumulativeOffsetTarget.top - cumulativeOffsetContainer.top + offset;

  var diffX = targetX - initialX;
	var diffY = targetY - initialY;

  let scrolling = true;
  let started = false;
  let start_time = now() + delay;
  let end_time = start_time + duration;

  function scrollToTopLeft(element, top, left) {
    if (scrollX) _.scrollLeft(element, left);
    if (scrollY) _.scrollTop(element, top);
  }

  function start(delayStart) {
    if (!delayStart) {
      started = true;
      onStart(element, {x, y});
    }
  }

  function tick(progress) {
    scrollToTopLeft(
      container,
      initialY + diffY * progress,
      initialX + diffX * progress
    );
  }

  function stop() {
    scrolling = false;
  }

  loop(now => {
    if (!started && now >= start_time) {
      start(false);
    }

    if (started && now >= end_time) {
      tick(1);
      stop();
      onDone(element, {x, y});
    }

    if (!scrolling) {
      onAborting(element, {x, y});
      return false;
    }
    if (started) {
      const p = now - start_time;
      const t = 0 + 1 * easing(p / duration);
      tick(t);
    }

    return true;
  });

  start(delay);

  tick(0);

  return stop;
};

const proceedOptions = options => {
	let opts = _.extend({}, defaultOptions, options);
  opts.container = _.$(opts.container);
  opts.element = _.$(opts.element);
  return opts;
};

const scrollContainerHeight = containerElement => {
  if (
    containerElement &&
    containerElement !== document &&
    containerElement !== document.body
  ) {
    return containerElement.scrollHeight - containerElement.offsetHeight;
  } else {
    let body = document.body;
    let html = document.documentElement;

    return Math.max(
      body.scrollHeight,
      body.offsetHeight,
      html.clientHeight,
      html.scrollHeight,
      html.offsetHeight
    );
  }
};

const setGlobalOptions = options => {
	_.extend(defaultOptions, options || {});
};

const scrollTo = options => {
  return _scrollTo(proceedOptions(options));
};

const scrollToBottom = options => {
  options = proceedOptions(options);

  return _scrollTo(
    _.extend(options, {
      element: null,
      y: scrollContainerHeight(options.container)
    })
  );
};

const scrollToTop = options => {
  options = proceedOptions(options);

  return _scrollTo(
    _.extend(options, {
      element: null,
      y: 0
    })
  );
};

const makeScrollToAction = scrollToFunc => {
  return (node, options) => {
    let current = options;
    const handle = e => {
      e.preventDefault();
      scrollToFunc(
        typeof current === "string" ? { element: current } : current
      );
    };
    node.addEventListener("click", handle);
    node.addEventListener("touchstart", handle);
    return {
      update(options) {
        current = options;
      },
      destroy() {
        node.removeEventListener("click", handle);
        node.removeEventListener("touchstart", handle);
      }
    };
  };
};

const scrollto = makeScrollToAction(scrollTo);
const scrolltotop = makeScrollToAction(scrollToTop);
const scrolltobottom = makeScrollToAction(scrollToBottom);

var animateScroll = /*#__PURE__*/Object.freeze({
    __proto__: null,
    setGlobalOptions: setGlobalOptions,
    scrollTo: scrollTo,
    scrollToBottom: scrollToBottom,
    scrollToTop: scrollToTop,
    makeScrollToAction: makeScrollToAction,
    scrollto: scrollto,
    scrolltotop: scrolltotop,
    scrolltobottom: scrolltobottom
});

/* src\routes\_components\Menu.svelte generated by Svelte v3.23.2 */
const file$g = "src\\routes\\_components\\Menu.svelte";

// (21:0) {#if isOpen}
function create_if_block$8(ctx) {
	let div12;
	let ul;
	let li0;
	let div0;
	let img0;
	let img0_src_value;
	let t0;
	let div1;
	let p;
	let t1;
	let t2;
	let li1;
	let div2;
	let img1;
	let img1_src_value;
	let t3;
	let div3;
	let t4;
	let t5;
	let li2;
	let div4;
	let img2;
	let img2_src_value;
	let t6;
	let div5;
	let t7;
	let t8;
	let li3;
	let div6;
	let img3;
	let img3_src_value;
	let t9;
	let div7;
	let t10;
	let t11;
	let li4;
	let div8;
	let img4;
	let img4_src_value;
	let t12;
	let div9;
	let t13;
	let t14;
	let li5;
	let div10;
	let img5;
	let img5_src_value;
	let t15;
	let div11;
	let t16;
	let t17;
	let mounted;
	let dispose;
	let if_block = /*isLoggedIn*/ ctx[1] && create_if_block_1$5(ctx);

	const block = {
		c: function create() {
			div12 = element("div");
			ul = element("ul");
			li0 = element("li");
			div0 = element("div");
			img0 = element("img");
			t0 = space();
			div1 = element("div");
			p = element("p");
			t1 = text("Home");
			t2 = space();
			li1 = element("li");
			div2 = element("div");
			img1 = element("img");
			t3 = space();
			div3 = element("div");
			t4 = text("Our Story");
			t5 = space();
			li2 = element("li");
			div4 = element("div");
			img2 = element("img");
			t6 = space();
			div5 = element("div");
			t7 = text("Our Clan");
			t8 = space();
			li3 = element("li");
			div6 = element("div");
			img3 = element("img");
			t9 = space();
			div7 = element("div");
			t10 = text("Toasts");
			t11 = space();
			li4 = element("li");
			div8 = element("div");
			img4 = element("img");
			t12 = space();
			div9 = element("div");
			t13 = text("Propose a Toast");
			t14 = space();
			li5 = element("li");
			div10 = element("div");
			img5 = element("img");
			t15 = space();
			div11 = element("div");
			t16 = text("Blended Family");
			t17 = space();
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			div12 = claim_element(nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			ul = claim_element(div12_nodes, "UL", { class: true });
			var ul_nodes = children(ul);
			li0 = claim_element(ul_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			div0 = claim_element(li0_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img0 = claim_element(div0_nodes, "IMG", { src: true, alt: true });
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(li0_nodes);
			div1 = claim_element(li0_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			p = claim_element(div1_nodes, "P", {});
			var p_nodes = children(p);
			t1 = claim_text(p_nodes, "Home");
			p_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			li0_nodes.forEach(detach_dev);
			t2 = claim_space(ul_nodes);
			li1 = claim_element(ul_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			div2 = claim_element(li1_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			img1 = claim_element(div2_nodes, "IMG", { src: true, alt: true });
			div2_nodes.forEach(detach_dev);
			t3 = claim_space(li1_nodes);
			div3 = claim_element(li1_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			t4 = claim_text(div3_nodes, "Our Story");
			div3_nodes.forEach(detach_dev);
			li1_nodes.forEach(detach_dev);
			t5 = claim_space(ul_nodes);
			li2 = claim_element(ul_nodes, "LI", { class: true });
			var li2_nodes = children(li2);
			div4 = claim_element(li2_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			img2 = claim_element(div4_nodes, "IMG", { src: true, alt: true });
			div4_nodes.forEach(detach_dev);
			t6 = claim_space(li2_nodes);
			div5 = claim_element(li2_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			t7 = claim_text(div5_nodes, "Our Clan");
			div5_nodes.forEach(detach_dev);
			li2_nodes.forEach(detach_dev);
			t8 = claim_space(ul_nodes);
			li3 = claim_element(ul_nodes, "LI", { class: true });
			var li3_nodes = children(li3);
			div6 = claim_element(li3_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			img3 = claim_element(div6_nodes, "IMG", { src: true, alt: true });
			div6_nodes.forEach(detach_dev);
			t9 = claim_space(li3_nodes);
			div7 = claim_element(li3_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			t10 = claim_text(div7_nodes, "Toasts");
			div7_nodes.forEach(detach_dev);
			li3_nodes.forEach(detach_dev);
			t11 = claim_space(ul_nodes);
			li4 = claim_element(ul_nodes, "LI", { class: true });
			var li4_nodes = children(li4);
			div8 = claim_element(li4_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			img4 = claim_element(div8_nodes, "IMG", { src: true, alt: true });
			div8_nodes.forEach(detach_dev);
			t12 = claim_space(li4_nodes);
			div9 = claim_element(li4_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			t13 = claim_text(div9_nodes, "Propose a Toast");
			div9_nodes.forEach(detach_dev);
			li4_nodes.forEach(detach_dev);
			t14 = claim_space(ul_nodes);
			li5 = claim_element(ul_nodes, "LI", { class: true });
			var li5_nodes = children(li5);
			div10 = claim_element(li5_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			img5 = claim_element(div10_nodes, "IMG", { src: true, alt: true });
			div10_nodes.forEach(detach_dev);
			t15 = claim_space(li5_nodes);
			div11 = claim_element(li5_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			t16 = claim_text(div11_nodes, "Blended Family");
			div11_nodes.forEach(detach_dev);
			li5_nodes.forEach(detach_dev);
			t17 = claim_space(ul_nodes);
			if (if_block) if_block.l(ul_nodes);
			ul_nodes.forEach(detach_dev);
			div12_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img0.src !== (img0_src_value = "./icons8-collapse-arrow-50.png")) attr_dev(img0, "src", img0_src_value);
			attr_dev(img0, "alt", "arrow");
			add_location(img0, file$g, 25, 20, 768);
			attr_dev(div0, "class", "arrow svelte-1hhkm3o");
			add_location(div0, file$g, 24, 16, 727);
			add_location(p, file$g, 27, 37, 886);
			attr_dev(div1, "class", "section svelte-1hhkm3o");
			add_location(div1, file$g, 27, 16, 865);
			attr_dev(li0, "class", "home svelte-1hhkm3o");
			add_location(li0, file$g, 23, 12, 642);
			if (img1.src !== (img1_src_value = "./icons8-collapse-arrow-50.png")) attr_dev(img1, "src", img1_src_value);
			attr_dev(img1, "alt", "arrow");
			add_location(img1, file$g, 31, 20, 1050);
			attr_dev(div2, "class", "arrow svelte-1hhkm3o");
			add_location(div2, file$g, 30, 16, 1009);
			attr_dev(div3, "class", "section svelte-1hhkm3o");
			add_location(div3, file$g, 33, 16, 1147);
			attr_dev(li1, "class", "svelte-1hhkm3o");
			add_location(li1, file$g, 29, 12, 936);
			if (img2.src !== (img2_src_value = "./icons8-collapse-arrow-50.png")) attr_dev(img2, "src", img2_src_value);
			attr_dev(img2, "alt", "arrow");
			add_location(img2, file$g, 37, 20, 1345);
			attr_dev(div4, "class", "arrow svelte-1hhkm3o");
			add_location(div4, file$g, 36, 16, 1304);
			attr_dev(div5, "class", "section svelte-1hhkm3o");
			add_location(div5, file$g, 39, 16, 1442);
			attr_dev(li2, "class", "svelte-1hhkm3o");
			add_location(li2, file$g, 35, 12, 1216);
			if (img3.src !== (img3_src_value = "./icons8-collapse-arrow-50.png")) attr_dev(img3, "src", img3_src_value);
			attr_dev(img3, "alt", "arrow");
			add_location(img3, file$g, 43, 20, 1625);
			attr_dev(div6, "class", "arrow svelte-1hhkm3o");
			add_location(div6, file$g, 42, 16, 1584);
			attr_dev(div7, "class", "section svelte-1hhkm3o");
			add_location(div7, file$g, 45, 16, 1722);
			attr_dev(li3, "class", "svelte-1hhkm3o");
			add_location(li3, file$g, 41, 12, 1510);
			if (img4.src !== (img4_src_value = "./icons8-collapse-arrow-50.png")) attr_dev(img4, "src", img4_src_value);
			attr_dev(img4, "alt", "arrow");
			add_location(img4, file$g, 49, 20, 1904);
			attr_dev(div8, "class", "arrow svelte-1hhkm3o");
			add_location(div8, file$g, 48, 16, 1863);
			attr_dev(div9, "class", "section svelte-1hhkm3o");
			add_location(div9, file$g, 51, 16, 2001);
			attr_dev(li4, "class", "svelte-1hhkm3o");
			add_location(li4, file$g, 47, 12, 1788);
			if (img5.src !== (img5_src_value = "./icons8-collapse-arrow-50.png")) attr_dev(img5, "src", img5_src_value);
			attr_dev(img5, "alt", "arrow");
			add_location(img5, file$g, 55, 20, 2192);
			attr_dev(div10, "class", "arrow svelte-1hhkm3o");
			add_location(div10, file$g, 54, 16, 2151);
			attr_dev(div11, "class", "section svelte-1hhkm3o");
			add_location(div11, file$g, 57, 16, 2289);
			attr_dev(li5, "class", "svelte-1hhkm3o");
			add_location(li5, file$g, 53, 12, 2076);
			attr_dev(ul, "class", "svelte-1hhkm3o");
			add_location(ul, file$g, 22, 8, 624);
			attr_dev(div12, "class", "container svelte-1hhkm3o");
			add_location(div12, file$g, 21, 4, 591);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div12, anchor);
			append_dev(div12, ul);
			append_dev(ul, li0);
			append_dev(li0, div0);
			append_dev(div0, img0);
			append_dev(li0, t0);
			append_dev(li0, div1);
			append_dev(div1, p);
			append_dev(p, t1);
			append_dev(ul, t2);
			append_dev(ul, li1);
			append_dev(li1, div2);
			append_dev(div2, img1);
			append_dev(li1, t3);
			append_dev(li1, div3);
			append_dev(div3, t4);
			append_dev(ul, t5);
			append_dev(ul, li2);
			append_dev(li2, div4);
			append_dev(div4, img2);
			append_dev(li2, t6);
			append_dev(li2, div5);
			append_dev(div5, t7);
			append_dev(ul, t8);
			append_dev(ul, li3);
			append_dev(li3, div6);
			append_dev(div6, img3);
			append_dev(li3, t9);
			append_dev(li3, div7);
			append_dev(div7, t10);
			append_dev(ul, t11);
			append_dev(ul, li4);
			append_dev(li4, div8);
			append_dev(div8, img4);
			append_dev(li4, t12);
			append_dev(li4, div9);
			append_dev(div9, t13);
			append_dev(ul, t14);
			append_dev(ul, li5);
			append_dev(li5, div10);
			append_dev(div10, img5);
			append_dev(li5, t15);
			append_dev(li5, div11);
			append_dev(div11, t16);
			append_dev(ul, t17);
			if (if_block) if_block.m(ul, null);

			if (!mounted) {
				dispose = [
					listen_dev(li0, "click", /*click_handler*/ ctx[4], false, false, false),
					listen_dev(li1, "click", /*click_handler_1*/ ctx[5], false, false, false),
					listen_dev(li2, "click", /*click_handler_2*/ ctx[6], false, false, false),
					listen_dev(li3, "click", /*click_handler_3*/ ctx[7], false, false, false),
					listen_dev(li4, "click", /*click_handler_4*/ ctx[8], false, false, false),
					listen_dev(li5, "click", /*click_handler_5*/ ctx[9], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (/*isLoggedIn*/ ctx[1]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block_1$5(ctx);
					if_block.c();
					if_block.m(ul, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div12);
			if (if_block) if_block.d();
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$8.name,
		type: "if",
		source: "(21:0) {#if isOpen}",
		ctx
	});

	return block;
}

// (60:8) {#if isLoggedIn}
function create_if_block_1$5(ctx) {
	let li;
	let div0;
	let img;
	let img_src_value;
	let t0;
	let div1;
	let t1;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			li = element("li");
			div0 = element("div");
			img = element("img");
			t0 = space();
			div1 = element("div");
			t1 = text("Log out");
			this.h();
		},
		l: function claim(nodes) {
			li = claim_element(nodes, "LI", { class: true });
			var li_nodes = children(li);
			div0 = claim_element(li_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { src: true, alt: true });
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(li_nodes);
			div1 = claim_element(li_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			t1 = claim_text(div1_nodes, "Log out");
			div1_nodes.forEach(detach_dev);
			li_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "./icons8-collapse-arrow-50.png")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "arrow");
			add_location(img, file$g, 62, 20, 2470);
			attr_dev(div0, "class", "arrow svelte-1hhkm3o");
			add_location(div0, file$g, 61, 16, 2429);
			attr_dev(div1, "class", "section svelte-1hhkm3o");
			add_location(div1, file$g, 64, 16, 2567);
			attr_dev(li, "class", "svelte-1hhkm3o");
			add_location(li, file$g, 60, 12, 2389);
		},
		m: function mount(target, anchor) {
			insert_dev(target, li, anchor);
			append_dev(li, div0);
			append_dev(div0, img);
			append_dev(li, t0);
			append_dev(li, div1);
			append_dev(div1, t1);

			if (!mounted) {
				dispose = listen_dev(li, "click", /*logOut*/ ctx[2], false, false, false);
				mounted = true;
			}
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(li);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1$5.name,
		type: "if",
		source: "(60:8) {#if isLoggedIn}",
		ctx
	});

	return block;
}

function create_fragment$h(ctx) {
	let if_block_anchor;
	let if_block = /*isOpen*/ ctx[0] && create_if_block$8(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, [dirty]) {
			if (/*isOpen*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block$8(ctx);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$h.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$h($$self, $$props, $$invalidate) {
	const dispatch = createEventDispatcher();
	let { isLoggedIn } = $$props;
	let { isOpen } = $$props;

	function logOut() {
		dispatch("toggleLogIn");
		handleSectionSelection("home");
	}

	function handleSectionSelection(section) {
		$$invalidate(0, isOpen = false);

		if (section == "home") {
			scrollToTop();
			return;
		}

		scrollTo({ element: "." + section });
	}

	const writable_props = ["isLoggedIn", "isOpen"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Menu> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Menu", $$slots, []);

	const click_handler = () => {
		handleSectionSelection("home");
	};

	const click_handler_1 = () => {
		handleSectionSelection("story");
	};

	const click_handler_2 = () => {
		handleSectionSelection("clan");
	};

	const click_handler_3 = () => {
		handleSectionSelection("toasts");
	};

	const click_handler_4 = () => {
		handleSectionSelection("propose");
	};

	const click_handler_5 = () => {
		handleSectionSelection("blended");
	};

	$$self.$set = $$props => {
		if ("isLoggedIn" in $$props) $$invalidate(1, isLoggedIn = $$props.isLoggedIn);
		if ("isOpen" in $$props) $$invalidate(0, isOpen = $$props.isOpen);
	};

	$$self.$capture_state = () => ({
		Overlay,
		animateScroll,
		createEventDispatcher,
		dispatch,
		isLoggedIn,
		isOpen,
		logOut,
		handleSectionSelection
	});

	$$self.$inject_state = $$props => {
		if ("isLoggedIn" in $$props) $$invalidate(1, isLoggedIn = $$props.isLoggedIn);
		if ("isOpen" in $$props) $$invalidate(0, isOpen = $$props.isOpen);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		isOpen,
		isLoggedIn,
		logOut,
		handleSectionSelection,
		click_handler,
		click_handler_1,
		click_handler_2,
		click_handler_3,
		click_handler_4,
		click_handler_5
	];
}

class Menu extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$h, create_fragment$h, safe_not_equal, { isLoggedIn: 1, isOpen: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Menu",
			options,
			id: create_fragment$h.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*isLoggedIn*/ ctx[1] === undefined && !("isLoggedIn" in props)) {
			console.warn("<Menu> was created without expected prop 'isLoggedIn'");
		}

		if (/*isOpen*/ ctx[0] === undefined && !("isOpen" in props)) {
			console.warn("<Menu> was created without expected prop 'isOpen'");
		}
	}

	get isLoggedIn() {
		throw new Error("<Menu>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isLoggedIn(value) {
		throw new Error("<Menu>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get isOpen() {
		throw new Error("<Menu>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isOpen(value) {
		throw new Error("<Menu>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

var strictUriEncode = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);

var token = '%[a-f0-9]{2}';
var singleMatcher = new RegExp(token, 'gi');
var multiMatcher = new RegExp('(' + token + ')+', 'gi');

function decodeComponents(components, split) {
	try {
		// Try to decode the entire string first
		return decodeURIComponent(components.join(''));
	} catch (err) {
		// Do nothing
	}

	if (components.length === 1) {
		return components;
	}

	split = split || 1;

	// Split the array in 2 parts
	var left = components.slice(0, split);
	var right = components.slice(split);

	return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
}

function decode(input) {
	try {
		return decodeURIComponent(input);
	} catch (err) {
		var tokens = input.match(singleMatcher);

		for (var i = 1; i < tokens.length; i++) {
			input = decodeComponents(tokens, i).join('');

			tokens = input.match(singleMatcher);
		}

		return input;
	}
}

function customDecodeURIComponent(input) {
	// Keep track of all the replacements and prefill the map with the `BOM`
	var replaceMap = {
		'%FE%FF': '\uFFFD\uFFFD',
		'%FF%FE': '\uFFFD\uFFFD'
	};

	var match = multiMatcher.exec(input);
	while (match) {
		try {
			// Decode as big chunks as possible
			replaceMap[match[0]] = decodeURIComponent(match[0]);
		} catch (err) {
			var result = decode(match[0]);

			if (result !== match[0]) {
				replaceMap[match[0]] = result;
			}
		}

		match = multiMatcher.exec(input);
	}

	// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else
	replaceMap['%C2'] = '\uFFFD';

	var entries = Object.keys(replaceMap);

	for (var i = 0; i < entries.length; i++) {
		// Replace all decoded components
		var key = entries[i];
		input = input.replace(new RegExp(key, 'g'), replaceMap[key]);
	}

	return input;
}

var decodeUriComponent = function (encodedURI) {
	if (typeof encodedURI !== 'string') {
		throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');
	}

	try {
		encodedURI = encodedURI.replace(/\+/g, ' ');

		// Try the built in decoder first
		return decodeURIComponent(encodedURI);
	} catch (err) {
		// Fallback to a more advanced decoder
		return customDecodeURIComponent(encodedURI);
	}
};

var splitOnFirst = (string, separator) => {
	if (!(typeof string === 'string' && typeof separator === 'string')) {
		throw new TypeError('Expected the arguments to be of type `string`');
	}

	if (separator === '') {
		return [string];
	}

	const separatorIndex = string.indexOf(separator);

	if (separatorIndex === -1) {
		return [string];
	}

	return [
		string.slice(0, separatorIndex),
		string.slice(separatorIndex + separator.length)
	];
};

var queryString = createCommonjsModule(function (module, exports) {




const isNullOrUndefined = value => value === null || value === undefined;

function encoderForArrayFormat(options) {
	switch (options.arrayFormat) {
		case 'index':
			return key => (result, value) => {
				const index = result.length;

				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, [encode(key, options), '[', index, ']'].join('')];
				}

				return [
					...result,
					[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')
				];
			};

		case 'bracket':
			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, [encode(key, options), '[]'].join('')];
				}

				return [...result, [encode(key, options), '[]=', encode(value, options)].join('')];
			};

		case 'comma':
		case 'separator':
			return key => (result, value) => {
				if (value === null || value === undefined || value.length === 0) {
					return result;
				}

				if (result.length === 0) {
					return [[encode(key, options), '=', encode(value, options)].join('')];
				}

				return [[result, encode(value, options)].join(options.arrayFormatSeparator)];
			};

		default:
			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, encode(key, options)];
				}

				return [...result, [encode(key, options), '=', encode(value, options)].join('')];
			};
	}
}

function parserForArrayFormat(options) {
	let result;

	switch (options.arrayFormat) {
		case 'index':
			return (key, value, accumulator) => {
				result = /\[(\d*)\]$/.exec(key);

				key = key.replace(/\[\d*\]$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				}

				if (accumulator[key] === undefined) {
					accumulator[key] = {};
				}

				accumulator[key][result[1]] = value;
			};

		case 'bracket':
			return (key, value, accumulator) => {
				result = /(\[\])$/.exec(key);
				key = key.replace(/\[\]$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				}

				if (accumulator[key] === undefined) {
					accumulator[key] = [value];
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};

		case 'comma':
		case 'separator':
			return (key, value, accumulator) => {
				const isArray = typeof value === 'string' && value.split('').indexOf(options.arrayFormatSeparator) > -1;
				const newValue = isArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);
				accumulator[key] = newValue;
			};

		default:
			return (key, value, accumulator) => {
				if (accumulator[key] === undefined) {
					accumulator[key] = value;
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};
	}
}

function validateArrayFormatSeparator(value) {
	if (typeof value !== 'string' || value.length !== 1) {
		throw new TypeError('arrayFormatSeparator must be single character string');
	}
}

function encode(value, options) {
	if (options.encode) {
		return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
	}

	return value;
}

function decode(value, options) {
	if (options.decode) {
		return decodeUriComponent(value);
	}

	return value;
}

function keysSorter(input) {
	if (Array.isArray(input)) {
		return input.sort();
	}

	if (typeof input === 'object') {
		return keysSorter(Object.keys(input))
			.sort((a, b) => Number(a) - Number(b))
			.map(key => input[key]);
	}

	return input;
}

function removeHash(input) {
	const hashStart = input.indexOf('#');
	if (hashStart !== -1) {
		input = input.slice(0, hashStart);
	}

	return input;
}

function getHash(url) {
	let hash = '';
	const hashStart = url.indexOf('#');
	if (hashStart !== -1) {
		hash = url.slice(hashStart);
	}

	return hash;
}

function extract(input) {
	input = removeHash(input);
	const queryStart = input.indexOf('?');
	if (queryStart === -1) {
		return '';
	}

	return input.slice(queryStart + 1);
}

function parseValue(value, options) {
	if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {
		value = Number(value);
	} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {
		value = value.toLowerCase() === 'true';
	}

	return value;
}

function parse(input, options) {
	options = Object.assign({
		decode: true,
		sort: true,
		arrayFormat: 'none',
		arrayFormatSeparator: ',',
		parseNumbers: false,
		parseBooleans: false
	}, options);

	validateArrayFormatSeparator(options.arrayFormatSeparator);

	const formatter = parserForArrayFormat(options);

	// Create an object with no prototype
	const ret = Object.create(null);

	if (typeof input !== 'string') {
		return ret;
	}

	input = input.trim().replace(/^[?#&]/, '');

	if (!input) {
		return ret;
	}

	for (const param of input.split('&')) {
		let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, ' ') : param, '=');

		// Missing `=` should be `null`:
		// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
		value = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);
		formatter(decode(key, options), value, ret);
	}

	for (const key of Object.keys(ret)) {
		const value = ret[key];
		if (typeof value === 'object' && value !== null) {
			for (const k of Object.keys(value)) {
				value[k] = parseValue(value[k], options);
			}
		} else {
			ret[key] = parseValue(value, options);
		}
	}

	if (options.sort === false) {
		return ret;
	}

	return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
		const value = ret[key];
		if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {
			// Sort object keys, not values
			result[key] = keysSorter(value);
		} else {
			result[key] = value;
		}

		return result;
	}, Object.create(null));
}

exports.extract = extract;
exports.parse = parse;

exports.stringify = (object, options) => {
	if (!object) {
		return '';
	}

	options = Object.assign({
		encode: true,
		strict: true,
		arrayFormat: 'none',
		arrayFormatSeparator: ','
	}, options);

	validateArrayFormatSeparator(options.arrayFormatSeparator);

	const shouldFilter = key => (
		(options.skipNull && isNullOrUndefined(object[key])) ||
		(options.skipEmptyString && object[key] === '')
	);

	const formatter = encoderForArrayFormat(options);

	const objectCopy = {};

	for (const key of Object.keys(object)) {
		if (!shouldFilter(key)) {
			objectCopy[key] = object[key];
		}
	}

	const keys = Object.keys(objectCopy);

	if (options.sort !== false) {
		keys.sort(options.sort);
	}

	return keys.map(key => {
		const value = object[key];

		if (value === undefined) {
			return '';
		}

		if (value === null) {
			return encode(key, options);
		}

		if (Array.isArray(value)) {
			return value
				.reduce(formatter(key), [])
				.join('&');
		}

		return encode(key, options) + '=' + encode(value, options);
	}).filter(x => x.length > 0).join('&');
};

exports.parseUrl = (input, options) => {
	options = Object.assign({
		decode: true
	}, options);

	const [url, hash] = splitOnFirst(input, '#');

	return Object.assign(
		{
			url: url.split('?')[0] || '',
			query: parse(extract(input), options)
		},
		options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}
	);
};

exports.stringifyUrl = (input, options) => {
	options = Object.assign({
		encode: true,
		strict: true
	}, options);

	const url = removeHash(input.url).split('?')[0] || '';
	const queryFromUrl = exports.extract(input.url);
	const parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});

	const query = Object.assign(parsedQueryFromUrl, input.query);
	let queryString = exports.stringify(query, options);
	if (queryString) {
		queryString = `?${queryString}`;
	}

	let hash = getHash(input.url);
	if (input.fragmentIdentifier) {
		hash = `#${encode(input.fragmentIdentifier, options)}`;
	}

	return `${url}${queryString}${hash}`;
};
});

var queryString$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.assign({
    __proto__: null,
    'default': queryString,
    __moduleExports: queryString
}, queryString));

/* src\routes\_components\Nav.svelte generated by Svelte v3.23.2 */
const file$h = "src\\routes\\_components\\Nav.svelte";

function create_fragment$i(ctx) {
	let div;
	let p;
	let t0;
	let t1;
	let menuicon;
	let t2;
	let menu;
	let current;

	menuicon = new MenuIcon({
			props: { isOpen: /*isOpen*/ ctx[1] },
			$$inline: true
		});

	menuicon.$on("handleToggle", /*handleToggle*/ ctx[3]);

	menu = new Menu({
			props: {
				isLoggedIn: /*isLoggedIn*/ ctx[0],
				isOpen: /*isOpen*/ ctx[1]
			},
			$$inline: true
		});

	menu.$on("toggleLogIn", /*forward*/ ctx[2]);

	const block = {
		c: function create() {
			div = element("div");
			p = element("p");
			t0 = text("#blameitonfate");
			t1 = space();
			create_component(menuicon.$$.fragment);
			t2 = space();
			create_component(menu.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			p = claim_element(div_nodes, "P", { class: true });
			var p_nodes = children(p);
			t0 = claim_text(p_nodes, "#blameitonfate");
			p_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			claim_component(menuicon.$$.fragment, div_nodes);
			t2 = claim_space(div_nodes);
			claim_component(menu.$$.fragment, div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "svelte-1wfqxyt");
			add_location(p, file$h, 16, 4, 419);
			attr_dev(div, "class", "svelte-1wfqxyt");
			add_location(div, file$h, 15, 0, 408);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, p);
			append_dev(p, t0);
			append_dev(div, t1);
			mount_component(menuicon, div, null);
			append_dev(div, t2);
			mount_component(menu, div, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const menuicon_changes = {};
			if (dirty & /*isOpen*/ 2) menuicon_changes.isOpen = /*isOpen*/ ctx[1];
			menuicon.$set(menuicon_changes);
			const menu_changes = {};
			if (dirty & /*isLoggedIn*/ 1) menu_changes.isLoggedIn = /*isLoggedIn*/ ctx[0];
			if (dirty & /*isOpen*/ 2) menu_changes.isOpen = /*isOpen*/ ctx[1];
			menu.$set(menu_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(menuicon.$$.fragment, local);
			transition_in(menu.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(menuicon.$$.fragment, local);
			transition_out(menu.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_component(menuicon);
			destroy_component(menu);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$i.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$i($$self, $$props, $$invalidate) {
	const dispatch = createEventDispatcher();
	let { isLoggedIn } = $$props;
	let isOpen = false;

	function forward() {
		dispatch("toggleLogIn");
	}

	function handleToggle() {
		$$invalidate(1, isOpen = !isOpen);
	}

	const writable_props = ["isLoggedIn"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Nav> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Nav", $$slots, []);

	$$self.$set = $$props => {
		if ("isLoggedIn" in $$props) $$invalidate(0, isLoggedIn = $$props.isLoggedIn);
	};

	$$self.$capture_state = () => ({
		MenuIcon,
		Menu,
		queryString: queryString$1,
		createEventDispatcher,
		dispatch,
		isLoggedIn,
		isOpen,
		forward,
		handleToggle
	});

	$$self.$inject_state = $$props => {
		if ("isLoggedIn" in $$props) $$invalidate(0, isLoggedIn = $$props.isLoggedIn);
		if ("isOpen" in $$props) $$invalidate(1, isOpen = $$props.isOpen);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [isLoggedIn, isOpen, forward, handleToggle];
}

class Nav extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$i, create_fragment$i, safe_not_equal, { isLoggedIn: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Nav",
			options,
			id: create_fragment$i.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*isLoggedIn*/ ctx[0] === undefined && !("isLoggedIn" in props)) {
			console.warn("<Nav> was created without expected prop 'isLoggedIn'");
		}
	}

	get isLoggedIn() {
		throw new Error("<Nav>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isLoggedIn(value) {
		throw new Error("<Nav>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\routes\index.svelte generated by Svelte v3.23.2 */

function create_fragment$j(ctx) {
	let nav;
	let t0;
	let jumbotron;
	let t1;
	let story;
	let t2;
	let clan;
	let t3;
	let toasts;
	let t4;
	let blended;
	let current;

	nav = new Nav({
			props: { isLoggedIn: /*isLoggedIn*/ ctx[0] },
			$$inline: true
		});

	nav.$on("toggleLogIn", /*toggleLogIn*/ ctx[2]);
	jumbotron = new Jumbotron({ $$inline: true });
	story = new Story({ $$inline: true });
	clan = new Clan({ $$inline: true });

	toasts = new Toasts({
			props: {
				isLoggedIn: /*isLoggedIn*/ ctx[0],
				facebookUserId: /*facebookUserId*/ ctx[1]
			},
			$$inline: true
		});

	toasts.$on("toggleLogIn", /*toggleLogIn*/ ctx[2]);
	blended = new Blended({ $$inline: true });

	const block = {
		c: function create() {
			create_component(nav.$$.fragment);
			t0 = space();
			create_component(jumbotron.$$.fragment);
			t1 = space();
			create_component(story.$$.fragment);
			t2 = space();
			create_component(clan.$$.fragment);
			t3 = space();
			create_component(toasts.$$.fragment);
			t4 = space();
			create_component(blended.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(nav.$$.fragment, nodes);
			t0 = claim_space(nodes);
			claim_component(jumbotron.$$.fragment, nodes);
			t1 = claim_space(nodes);
			claim_component(story.$$.fragment, nodes);
			t2 = claim_space(nodes);
			claim_component(clan.$$.fragment, nodes);
			t3 = claim_space(nodes);
			claim_component(toasts.$$.fragment, nodes);
			t4 = claim_space(nodes);
			claim_component(blended.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(nav, target, anchor);
			insert_dev(target, t0, anchor);
			mount_component(jumbotron, target, anchor);
			insert_dev(target, t1, anchor);
			mount_component(story, target, anchor);
			insert_dev(target, t2, anchor);
			mount_component(clan, target, anchor);
			insert_dev(target, t3, anchor);
			mount_component(toasts, target, anchor);
			insert_dev(target, t4, anchor);
			mount_component(blended, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const nav_changes = {};
			if (dirty & /*isLoggedIn*/ 1) nav_changes.isLoggedIn = /*isLoggedIn*/ ctx[0];
			nav.$set(nav_changes);
			const toasts_changes = {};
			if (dirty & /*isLoggedIn*/ 1) toasts_changes.isLoggedIn = /*isLoggedIn*/ ctx[0];
			if (dirty & /*facebookUserId*/ 2) toasts_changes.facebookUserId = /*facebookUserId*/ ctx[1];
			toasts.$set(toasts_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(nav.$$.fragment, local);
			transition_in(jumbotron.$$.fragment, local);
			transition_in(story.$$.fragment, local);
			transition_in(clan.$$.fragment, local);
			transition_in(toasts.$$.fragment, local);
			transition_in(blended.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(nav.$$.fragment, local);
			transition_out(jumbotron.$$.fragment, local);
			transition_out(story.$$.fragment, local);
			transition_out(clan.$$.fragment, local);
			transition_out(toasts.$$.fragment, local);
			transition_out(blended.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(nav, detaching);
			if (detaching) detach_dev(t0);
			destroy_component(jumbotron, detaching);
			if (detaching) detach_dev(t1);
			destroy_component(story, detaching);
			if (detaching) detach_dev(t2);
			destroy_component(clan, detaching);
			if (detaching) detach_dev(t3);
			destroy_component(toasts, detaching);
			if (detaching) detach_dev(t4);
			destroy_component(blended, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$j.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function isFacebookConnected() {
	let isConnected = false;

	FB.getLoginStatus(function (response) {
		isConnected = response.status === "connected";
	});

	return isConnected;
}

function instance$j($$self, $$props, $$invalidate) {
	let isLoggedIn = false;
	let facebookUserId;

	onMount(() => {
		FB.init({
			appId: "3134094980017395",
			cookie: true,
			xfbml: true,
			version: "v7.0"
		});

		FB.getLoginStatus(function (response) {
			$$invalidate(0, isLoggedIn = response.status === "connected");
			$$invalidate(1, facebookUserId = response.authResponse.userID);
		});
	});

	function toggleLogIn() {
		if (isFacebookConnected()) {
			FB.logout(function (response) {
				$$invalidate(1, facebookUserId = "");
				$$invalidate(0, isLoggedIn = false);
			});
		} else {
			FB.login(function (response) {
				$$invalidate(1, facebookUserId = response.authResponse.userID);
				$$invalidate(0, isLoggedIn = true);
			});
		}
	}

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Routes", $$slots, []);

	$$self.$capture_state = () => ({
		onMount,
		SectionHeader,
		Jumbotron,
		Story,
		Blended,
		Clan,
		Toasts,
		Nav,
		isLoggedIn,
		facebookUserId,
		toggleLogIn,
		isFacebookConnected
	});

	$$self.$inject_state = $$props => {
		if ("isLoggedIn" in $$props) $$invalidate(0, isLoggedIn = $$props.isLoggedIn);
		if ("facebookUserId" in $$props) $$invalidate(1, facebookUserId = $$props.facebookUserId);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [isLoggedIn, facebookUserId, toggleLogIn];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$j, create_fragment$j, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment$j.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
