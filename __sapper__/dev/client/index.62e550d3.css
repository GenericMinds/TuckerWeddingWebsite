.overlay.svelte-m0jddf.svelte-m0jddf{position:relative;display:inline-block;box-sizing:border-box}.content-wrapper.svelte-m0jddf.svelte-m0jddf{position:fixed;pointer-events:none;width:max-content}.content-wrapper.svelte-m0jddf>.svelte-m0jddf{pointer-events:all}.content.svelte-m0jddf.svelte-m0jddf{position:absolute;min-width:100%}.top-left.svelte-m0jddf.svelte-m0jddf,.top-center.svelte-m0jddf.svelte-m0jddf,.top-right.svelte-m0jddf.svelte-m0jddf{bottom:100%}.bottom-left.svelte-m0jddf.svelte-m0jddf,.bottom-center.svelte-m0jddf.svelte-m0jddf,.bottom-right.svelte-m0jddf.svelte-m0jddf{top:100%}.top-left.svelte-m0jddf.svelte-m0jddf,.bottom-left.svelte-m0jddf.svelte-m0jddf{right:0}.top-center.svelte-m0jddf.svelte-m0jddf,.bottom-center.svelte-m0jddf.svelte-m0jddf{left:50%;transform:translateX(-50%)}.top-right.svelte-m0jddf.svelte-m0jddf,.bottom-right.svelte-m0jddf.svelte-m0jddf{left:0}.left-top.svelte-m0jddf.svelte-m0jddf,.left-bottom.svelte-m0jddf.svelte-m0jddf,.left-center.svelte-m0jddf.svelte-m0jddf{right:100%}.right-top.svelte-m0jddf.svelte-m0jddf,.right-bottom.svelte-m0jddf.svelte-m0jddf,.right-center.svelte-m0jddf.svelte-m0jddf{left:100%}.left-center.svelte-m0jddf.svelte-m0jddf,.right-center.svelte-m0jddf.svelte-m0jddf{top:50%;transform:translateY(-50%)}.left-top.svelte-m0jddf.svelte-m0jddf,.right-top.svelte-m0jddf.svelte-m0jddf{bottom:0}.left-bottom.svelte-m0jddf.svelte-m0jddf,.right-bottom.svelte-m0jddf.svelte-m0jddf{top:0}
@import 'https://fonts.googleapis.com/css?family=Princess+Sofia';.backdrop.svelte-myjc36{z-index:99;position:fixed;top:0;right:0;bottom:0;left:0;width:100vw;height:100vh;background:rgba(0, 0, 0, 0.7)}.content.svelte-myjc36{position:fixed;top:40px;right:0;bottom:0;left:0;width:100vw;height:100vh;background:#375637;color:#ddd499;text-align:center;font-size:40px;line-height:40px;overflow:hidden;padding:0;margin:0;list-style:none}li.svelte-myjc36{height:15vh;padding-top:3vh;font-family:'Princess Sofia'}svg.svelte-myjc36{position:fixed;right:0;top:0}svg.svelte-myjc36:hover,li.svelte-myjc36:hover{cursor:pointer}
div.svelte-4lh79p{background-color:#375637;height:40px;line-height:40px}p.svelte-4lh79p{display:initial;color:#ddd499;font-weight:bold;font-size:18px}
img.svelte-1p9re6j{width:100%;height:50%;border:2px solid #ddd499;box-sizing:border-box}
p.svelte-mf5lov{font-size:24px;text-align:left}div.svelte-mf5lov{padding:20px}h1.svelte-mf5lov{margin-bottom:0}section.svelte-mf5lov{text-align:center}img.svelte-mf5lov{width:50%;margin-top:-20px}
section.svelte-13j7y2i{height:60vh;width:100vw}.form.svelte-13j7y2i{background-color:#ded599;height:100%;margin:20px;border-radius:20px;text-align:center}.header.svelte-13j7y2i{border-radius:20px 20px 0 0;height:20%;background-color:#375637;position:relative}.heading.svelte-13j7y2i{height:32px;font-size:32px;margin:0;position:absolute;top:50%;transform:translate(0, -50%);padding-left:10px;color:#e2e0cf}input.svelte-13j7y2i{width:80%;padding-left:10px;padding-right:10px;margin-top:25px;line-height:40px;font-size:28px}textarea.svelte-13j7y2i{width:80%;padding-left:10px;padding-right:10px;margin-bottom:25px;line-height:40px;font-size:28px}.selectstuff.svelte-13j7y2i{display:table-cell;line-height:28px;font-size:28px}.container.svelte-13j7y2i{display:table;height:40px;width:100%;table-layout:fixed}
@import 'https://fonts.googleapis.com/css?family=Princess+Sofia';body{background-color:#fff9ea;margin:0;font-size:0}h1{font-family:'Princess Sofia';font-weight:100;text-align:center;font-size:42px;color:#375637}div{overflow:hidden}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguNjJlNTUwZDMuY3NzIiwic291cmNlcyI6WyIuLi8uLi8uLi9PdmVybGF5LnN2ZWx0ZSIsIi4uLy4uLy4uL01lbnVJY29uLnN2ZWx0ZSIsIi4uLy4uLy4uL1NlY3Rpb25IZWFkZXIuc3ZlbHRlIiwiLi4vLi4vLi4vSnVtYm90cm9uLnN2ZWx0ZSIsIi4uLy4uLy4uL1N0b3J5LnN2ZWx0ZSIsIi4uLy4uLy4uL1Byb3Bvc2VUb2FzdEZvcm0uc3ZlbHRlIiwiLi4vLi4vLi4vaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG5cdGltcG9ydCB7XG5cdFx0YmVmb3JlVXBkYXRlLFxuXHRcdG9uTW91bnQsXG5cdFx0b25EZXN0cm95LFxuXHRcdHRpY2ssXG5cdFx0Y3JlYXRlRXZlbnREaXNwYXRjaGVyLFxuXHR9IGZyb20gJ3N2ZWx0ZSc7XG5cdGltcG9ydCBQT1NJVElPTlMgZnJvbSAnLi9wb3NpdGlvbnMnO1xuXHRpbXBvcnQgeyBpc0Jyb3dzZXIsIGdldE5leHRQb3NpdGlvbiB9IGZyb20gJy4vaGVscGVycyc7XG5cdGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cblx0Y29uc3QgREVGQVVMVF9QT1NJVElPTiA9IFBPU0lUSU9OU1swXTtcblxuXHRleHBvcnQgbGV0IGlzT3BlbiA9IGZhbHNlO1xuXHRleHBvcnQgbGV0IHVwZGF0ZU9uU2Nyb2xsID0gZmFsc2U7XG5cdGV4cG9ydCBsZXQgY2xvc2VPblNjcm9sbCA9IGZhbHNlO1xuXHRleHBvcnQgbGV0IHBvc2l0aW9uID0gREVGQVVMVF9QT1NJVElPTjtcblx0ZXhwb3J0IGxldCBjbG9zZU9uQ2xpY2tPdXRzaWRlID0gZmFsc2U7XG5cdGV4cG9ydCBsZXQgekluZGV4ID0gMTtcblx0ZXhwb3J0IGxldCBvbldpbmRvd0tleURvd24gPSAoKSA9PiB7fTtcblx0ZXhwb3J0IGxldCBzdHlsZSA9ICcnO1xuXG5cdCQ6IGNsYXNzTmFtZSA9ICQkcmVzdFByb3BzWydjbGFzcyddIHx8ICcnO1xuXG5cdGxldCBjdXJyZW50UG9zaXRpb24gPSBudWxsO1xuXHRsZXQgcGFyZW50O1xuXHRsZXQgY29udGVudDtcblx0bGV0IHRhcmdldDtcblxuXHRsZXQgdG9wU3R5bGUgPSAwO1xuXHRsZXQgbGVmdFN0eWxlID0gMDtcblx0bGV0IHdpZHRoU3R5bGUgPSAwO1xuXHRsZXQgaGVpZ2h0U3R5bGUgPSAwO1xuXG5cdCQ6IGhhc1BhcmVudCA9ICFwYXJlbnQgfHwgISFwYXJlbnQuY2hpbGROb2Rlcy5sZW5ndGg7XG5cdCQ6IGhhc0NvbnRlbnQgPSAhY29udGVudCB8fCAhIWNvbnRlbnQuY2hpbGROb2Rlcy5sZW5ndGg7XG5cblx0JDogaWYoIWhhc1BhcmVudCkgdGhyb3cgbmV3IEVycm9yKCdwYXJlbnQgc2xvdCBpcyByZXF1aXJlZCcpO1xuXHQkOiBpZighaGFzQ29udGVudCkgdGhyb3cgbmV3IEVycm9yKCdjb250ZW50IHNsb3QgaXMgcmVxdWlyZWQnKTtcblxuXHQkOiBvcGVuZWRTdGF0ZSA9IGlzT3BlbiAmJiBoYXNQYXJlbnQgJiYgaGFzQ29udGVudDtcblxuXHRmdW5jdGlvbiBhZGRMaXN0ZW5lcnMoKSB7XG5cdFx0aWYgKCFpc0Jyb3dzZXIoKSkgcmV0dXJuO1xuXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB1cGRhdGVQb3NpdGlvbik7XG5cdFx0aWYgKGNsb3NlT25TY3JvbGwpIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBjbG9zZSk7XG5cdFx0ZWxzZSBpZiAodXBkYXRlT25TY3JvbGwpIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB1cGRhdGVQb3NpdGlvbik7XG5cdH1cblxuXHRmdW5jdGlvbiByZW1vdmVMaXN0ZW5lcnMoKSB7XG5cdFx0aWYgKCFpc0Jyb3dzZXIoKSkgcmV0dXJuO1xuXHRcdHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB1cGRhdGVQb3NpdGlvbik7XG5cdFx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHVwZGF0ZVBvc2l0aW9uKTtcblx0XHR3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgY2xvc2UpO1xuXHR9XG5cblx0b25Nb3VudCgoKSA9PiB7XG5cdFx0aWYgKG9wZW5lZFN0YXRlKSB7XG5cdFx0XHRhZGRMaXN0ZW5lcnMoKTtcblx0XHR9XG5cdH0pO1xuXG5cdG9uRGVzdHJveSgoKSA9PiB7XG5cdFx0aWYgKCFpc0Jyb3dzZXIoKSkgcmV0dXJuO1xuXHRcdHJlbW92ZUxpc3RlbmVycygpO1xuXHR9KTtcblxuXG5cdGJlZm9yZVVwZGF0ZSh1cGRhdGVQb3NpdGlvbik7XG5cblx0ZnVuY3Rpb24gdG9nZ2xlKHZhbHVlKSB7XG5cdFx0Y29uc3QgcHJldk9wZW4gPSBpc09wZW47XG5cdFx0Y29uc3QgbmV4dE9wZW4gPSB2YWx1ZSA9PT0gdHJ1ZSB8fCB2YWx1ZSA9PT0gZmFsc2UgPyB2YWx1ZSA6ICFpc09wZW47XG5cblx0XHRpZiAobmV4dE9wZW4gJiYgaGFzUGFyZW50ICYmIGhhc0NvbnRlbnQgfHwgIW5leHRPcGVuKSBpc09wZW4gPSBuZXh0T3BlbjtcblxuXHRcdGlmKHByZXZPcGVuICE9PSBpc09wZW4pIHtcblx0XHRcdGRpc3BhdGNoKCd0b2dnbGUnLCBpc09wZW4pO1xuXHRcdFx0aWYgKGlzT3Blbikge1xuXHRcdFx0XHRhZGRMaXN0ZW5lcnMoKTtcblx0XHRcdFx0ZGlzcGF0Y2goJ29wZW4nKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRpc3BhdGNoKCdjbG9zZScpO1xuXHRcdFx0XHRyZW1vdmVMaXN0ZW5lcnMoKTtcblx0XHRcdH1cblx0XHR9XG5cblx0fVxuXG5cdGZ1bmN0aW9uIG9wZW4oKSB7XG5cdFx0aWYgKCFvcGVuZWRTdGF0ZSkgdG9nZ2xlKHRydWUpO1xuXHR9XG5cblx0ZnVuY3Rpb24gY2xvc2UoKSB7XG5cdFx0aWYgKG9wZW5lZFN0YXRlKSB0b2dnbGUoZmFsc2UpO1xuXHR9XG5cblx0ZnVuY3Rpb24gY29udGFpbnMgKGV2ZW50KSB7XG5cdFx0Y29uc3QgcGF0aCA9IGV2ZW50LnBhdGggfHwgZXZlbnQuY29tcG9zZWRQYXRoKCk7XG5cdFx0cmV0dXJuIHBhdGguaW5jbHVkZXMocGFyZW50KSB8fCBwYXRoLmluY2x1ZGVzKGNvbnRlbnQpO1xuXHR9XG5cblx0ZnVuY3Rpb24gaGFuZGxlV2luZG93Q2xpY2soZXZlbnQpIHtcblx0XHRpZiAoIWNsb3NlT25DbGlja091dHNpZGUgfHwgIW9wZW5lZFN0YXRlIHx8IGNvbnRhaW5zKGV2ZW50KSkgcmV0dXJuO1xuXHRcdGNsb3NlKCk7XG5cdH1cblxuXHRmdW5jdGlvbiBoYW5kbGVXaW5kb3dLZXlEb3duKGV2ZW50KSB7XG5cdFx0aWYgKCFvbldpbmRvd0tleURvd24gfHwgIW9wZW5lZFN0YXRlKSByZXR1cm47XG5cdFx0b25XaW5kb3dLZXlEb3duKGV2ZW50LCB7IGlzT3Blbjogb3BlbmVkU3RhdGUsIG9wZW4sIGNsb3NlLCB0b2dnbGUsIGNvbnRhaW5zIH0pO1xuXHR9XG5cblx0YXN5bmMgZnVuY3Rpb24gdXBkYXRlUG9zaXRpb24oKSB7XG5cdFx0YXdhaXQgdGljaygpO1xuXHRcdGlmICghb3BlbmVkU3RhdGUpIHJldHVybjtcblx0XHRpZiAoIVBPU0lUSU9OUy5pbmNsdWRlcyhwb3NpdGlvbikpIHBvc2l0aW9uID0gREVGQVVMVF9QT1NJVElPTjtcblxuXHRcdGNvbnN0IHtcblx0XHRcdHRvcCxcblx0XHRcdGJvdHRvbSxcblx0XHRcdGxlZnQsXG5cdFx0XHRyaWdodCxcblx0XHRcdHdpZHRoOiBwYXJlbnRXaWR0aCxcblx0XHRcdGhlaWdodDogcGFyZW50SGVpZ2h0LFxuXHRcdH0gPSBwYXJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cdFx0Y29uc3QgeyBoZWlnaHQsIHdpZHRoIH0gPSBjb250ZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG5cdFx0Y29uc3QgZGltZW5zaW9ucyA9IHsgdG9wLCBib3R0b20sIGxlZnQsIHJpZ2h0LCBoZWlnaHQsIHdpZHRoIH07XG5cdFx0Y29uc3QgbmV4dFBvc2l0aW9uID0gZ2V0TmV4dFBvc2l0aW9uKHBvc2l0aW9uLCBkaW1lbnNpb25zKTtcblxuXHRcdGlmIChjdXJyZW50UG9zaXRpb24gIT09IG5leHRQb3NpdGlvbikge1xuXHRcdFx0Y3VycmVudFBvc2l0aW9uID0gbmV4dFBvc2l0aW9uO1xuXHRcdH1cblxuXHRcdHRvcFN0eWxlID0gdG9wO1xuXHRcdGxlZnRTdHlsZSA9IGxlZnQ7XG5cdFx0d2lkdGhTdHlsZSA9IHBhcmVudFdpZHRoO1xuXHRcdGhlaWdodFN0eWxlID0gcGFyZW50SGVpZ2h0O1xuXHR9XG48L3NjcmlwdD5cblxuPHN2ZWx0ZTp3aW5kb3dcblx0b246bW91c2Vkb3duPXtoYW5kbGVXaW5kb3dDbGlja31cblx0b246a2V5ZG93bj17aGFuZGxlV2luZG93S2V5RG93bn0gLz5cblxuPGRpdiBiaW5kOnRoaXM9e3RhcmdldH0gY2xhc3M9e2BvdmVybGF5ICR7Y2xhc3NOYW1lfWB9IHN0eWxlPXtgei1pbmRleDoke3pJbmRleH07ICR7c3R5bGV9YH0+XG5cdDxkaXYgYmluZDp0aGlzPXtwYXJlbnR9PlxuXHRcdDxzbG90IG5hbWU9XCJwYXJlbnRcIiB7dG9nZ2xlfSBpc09wZW49e29wZW5lZFN0YXRlfSB7b3Blbn0ge2Nsb3NlfSAvPlxuXHQ8L2Rpdj5cblx0PGRpdlxuXHRcdGNsYXNzPVwiY29udGVudC13cmFwcGVyXCJcblx0XHRzdHlsZT17YHRvcDogJHt0b3BTdHlsZX1weDsgbGVmdDogJHtsZWZ0U3R5bGV9cHg7IHdpZHRoOiAke3dpZHRoU3R5bGV9cHg7IGhlaWdodDogJHtoZWlnaHRTdHlsZX1weDsgei1pbmRleDoke3pJbmRleH07YH1cblx0PlxuXHRcdHsjaWYgb3BlbmVkU3RhdGV9XG5cdFx0XHQ8ZGl2IGNsYXNzPXtgY29udGVudCAke2N1cnJlbnRQb3NpdGlvbiB8fCAnJ31gfSBiaW5kOnRoaXM9e2NvbnRlbnR9PlxuXHRcdFx0XHRcdDxzbG90IG5hbWU9XCJjb250ZW50XCIge3RvZ2dsZX0gaXNPcGVuPXtvcGVuZWRTdGF0ZX0ge29wZW59IHtjbG9zZX0gLz5cblx0XHRcdDwvZGl2PlxuXHRcdHsvaWZ9XG5cdDwvZGl2PlxuPC9kaXY+XG5cbjxzdHlsZT5cbi5vdmVybGF5IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuZGlzcGxheTogaW5saW5lLWJsb2NrO1xuYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLmNvbnRlbnQtd3JhcHBlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHdpZHRoOiBtYXgtY29udGVudDtcbn1cblxuLmNvbnRlbnQtd3JhcHBlciA+ICoge1xuICBwb2ludGVyLWV2ZW50czogYWxsO1xufVxuXG4uY29udGVudCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbWluLXdpZHRoOiAxMDAlO1xufVxuXG4udG9wLWxlZnQsXG4udG9wLWNlbnRlcixcbi50b3AtcmlnaHQge1xuICBib3R0b206IDEwMCU7XG59XG5cbi5ib3R0b20tbGVmdCxcbi5ib3R0b20tY2VudGVyLFxuLmJvdHRvbS1yaWdodCB7XG4gIHRvcDogMTAwJTtcbn1cblxuLnRvcC1sZWZ0LFxuLmJvdHRvbS1sZWZ0IHtcbiAgcmlnaHQ6IDA7XG59XG5cbi50b3AtY2VudGVyLFxuLmJvdHRvbS1jZW50ZXIge1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbn1cblxuLnRvcC1yaWdodCxcbi5ib3R0b20tcmlnaHQge1xuICBsZWZ0OiAwO1xufVxuXG4ubGVmdC10b3AsXG4ubGVmdC1ib3R0b20sXG4ubGVmdC1jZW50ZXIge1xuICByaWdodDogMTAwJTtcbn1cblxuLnJpZ2h0LXRvcCxcbi5yaWdodC1ib3R0b20sXG4ucmlnaHQtY2VudGVyIHtcbiAgbGVmdDogMTAwJTtcbn1cblxuLmxlZnQtY2VudGVyLFxuLnJpZ2h0LWNlbnRlciB7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG5cbi5sZWZ0LXRvcCxcbi5yaWdodC10b3Age1xuICBib3R0b206IDA7XG59XG5cbi5sZWZ0LWJvdHRvbSxcbi5yaWdodC1ib3R0b20ge1xuICB0b3A6IDA7XG59XG48L3N0eWxlPlxuIiwiPHNjcmlwdD5cclxuICAgIGltcG9ydCBPdmVybGF5IGZyb20gJ3N2ZWx0ZS1vdmVybGF5JztcclxuICAgIGltcG9ydCAqIGFzIGFuaW1hdGVTY3JvbGwgZnJvbSBcInN2ZWx0ZS1zY3JvbGx0b1wiO1xyXG4gXHJcbiAgICBsZXQgaXNPcGVuID0gZmFsc2U7XHJcbiBcclxuICAgIGZ1bmN0aW9uIGhhbmRsZVRvZ2dsZSgpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImhpXCIpXHJcbiAgICAgICAgaXNPcGVuID0gIWlzT3BlbjtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBoYW5kbGVIb21lU2VsZWN0aW9uKCkge1xyXG4gICAgICAgIGlzT3BlbiA9IGZhbHNlO1xyXG4gICAgICAgIGFuaW1hdGVTY3JvbGwuc2Nyb2xsVG9Ub3AoKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBoYW5kbGVTZWN0aW9uU2VsZWN0aW9uKHNlY3Rpb24pIHtcclxuICAgICAgICBpc09wZW4gPSBmYWxzZTtcclxuICAgICAgICBpZiAoc2VjdGlvbiA9PSAnaG9tZScpIHtcclxuICAgICAgICAgICAgYW5pbWF0ZVNjcm9sbC5zY3JvbGxUb1RvcCgpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGFuaW1hdGVTY3JvbGwuc2Nyb2xsVG8oe2VsZW1lbnQ6ICcuJyArIHNlY3Rpb259KTtcclxuICAgIH1cclxuPC9zY3JpcHQ+XHJcblxyXG57I2lmIGlzT3Blbn1cclxuICAgIDxkaXYgY2xhc3M9XCJiYWNrZHJvcFwiLz5cclxuey9pZn1cclxuIFxyXG48T3ZlcmxheVxyXG4gIG9uOnRvZ2dsZT17aGFuZGxlVG9nZ2xlfVxyXG4gIHpJbmRleD17MTAwfVxyXG4gIGJpbmQ6aXNPcGVuPXtpc09wZW59PiAgICBcclxuICBcclxuICAgIDxzdmcgc2xvdD1cInBhcmVudFwiIG9uOmNsaWNrPXsoKSA9PiBoYW5kbGVUb2dnbGUoKX0geD1cIjBweFwiIHk9XCIwcHhcIiB2aWV3Qm94PVwiMCAwIDUwIDUwXCIgZW5hYmxlLWJhY2tncm91bmQ9XCJuZXcgMCAwIDUwIDUwXCIgeG1sOnNwYWNlPVwicHJlc2VydmVcIiBoZWlnaHQ9XCI0MHB4XCIgd2lkdGg9XCI0MHB4XCI+XHJcbiAgICAgICAgICA8cGF0aCBmaWxsPVwiI2RkZDQ5OVwiIGQ9XCJNOC42NjcsMTVoMzBjMC41NTIsMCwxLTAuNDQ3LDEtMXMtMC40NDgtMS0xLTFoLTMwYy0wLjU1MiwwLTEsMC40NDctMSwxUzguMTE0LDE1LDguNjY3LDE1elwiLz5cclxuICAgICAgICAgIDxwYXRoIGZpbGw9XCIjZGRkNDk5XCIgZD1cIk04LjY2NywzN2gzMGMwLjU1MiwwLDEtMC40NDcsMS0xcy0wLjQ0OC0xLTEtMWgtMzBjLTAuNTUyLDAtMSwwLjQ0Ny0xLDFTOC4xMTQsMzcsOC42NjcsMzd6XCIvPlxyXG4gICAgICAgICAgPHBhdGggZmlsbD1cIiNkZGQ0OTlcIiBkPVwiTTguNjY3LDI2aDMwYzAuNTUyLDAsMS0wLjQ0NywxLTFzLTAuNDQ4LTEtMS0xaC0zMGMtMC41NTIsMC0xLDAuNDQ3LTEsMVM4LjExNCwyNiw4LjY2NywyNnpcIi8+XHJcbiAgICAgIDwvc3ZnPlxyXG4gICAgPHVsIHNsb3Q9XCJjb250ZW50XCIgY2xhc3M9XCJjb250ZW50XCI+XHJcbiAgICAgICAgPGxpIGNsYXNzPVwiaG9tZVwiIG9uOmNsaWNrPXsoKSA9PiB7aGFuZGxlU2VjdGlvblNlbGVjdGlvbihcImhvbWVcIil9fT5Ib21lPC9saT5cclxuICAgICAgICA8bGkgb246Y2xpY2s9eygpID0+IHtoYW5kbGVTZWN0aW9uU2VsZWN0aW9uKFwic3RvcnlcIil9fT5PdXIgU3Rvcnk8L2xpPlxyXG4gICAgICAgIDxsaSBvbjpjbGljaz17KCkgPT4ge2hhbmRsZVNlY3Rpb25TZWxlY3Rpb24oXCJmYW1pbHlcIil9fT5PdXIgRmFtaWx5PC9saT5cclxuICAgICAgICA8bGkgb246Y2xpY2s9eygpID0+IHtoYW5kbGVTZWN0aW9uU2VsZWN0aW9uKFwidG9hc3RzXCIpfX0+UmVtZW1iZXJpbmcgdGhlIERheTwvbGk+XHJcbiAgICAgICAgPGxpIG9uOmNsaWNrPXsoKSA9PiB7aGFuZGxlU2VjdGlvblNlbGVjdGlvbihcInByb3Bvc2VcIil9fT5Qcm9wb3NlIGEgVG9hc3Q8L2xpPlxyXG4gICAgPC91bD5cclxuPC9PdmVybGF5PlxyXG5cclxuPHN0eWxlIGxhbmc9XCJzY3NzXCI+QGltcG9ydCAnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVByaW5jZXNzK1NvZmlhJztcbi5iYWNrZHJvcCB7XG4gIHotaW5kZXg6IDk5O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNyk7IH1cblxuLmNvbnRlbnQge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogNDBweDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kOiAjMzc1NjM3O1xuICBjb2xvcjogI2RkZDQ5OTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDQwcHg7XG4gIGxpbmUtaGVpZ2h0OiA0MHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxubGkge1xuICBoZWlnaHQ6IDE1dmg7XG4gIHBhZGRpbmctdG9wOiAzdmg7XG4gIGZvbnQtZmFtaWx5OiAnUHJpbmNlc3MgU29maWEnOyB9XG5cbnN2ZyB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogMDsgfVxuXG5zdmc6aG92ZXIsIGxpOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyOyB9PC9zdHlsZT4iLCI8c2NyaXB0PlxyXG4gICAgaW1wb3J0IE1lbnVJY29uIGZyb20gJy4vTWVudUljb24uc3ZlbHRlJztcclxuXHJcbiAgICBleHBvcnQgbGV0IGlzTmF2O1xyXG48L3NjcmlwdD5cclxuXHJcbjxkaXY+XHJcbiAgICB7I2lmIGlzTmF2ID09PSB0cnVlfVxyXG4gICAgICAgIDxwPiNibGFtZWl0b25mYXRlPC9wPlxyXG4gICAgICAgIDxNZW51SWNvbiAvPlxyXG4gICAgey9pZn1cclxuPC9kaXY+XHJcblxyXG48c3R5bGU+XHJcbmRpdiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzc1NjM3O1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDQwcHg7XHJcbn1cclxuXHJcbiAgICBwIHtcclxuICAgIGRpc3BsYXk6IGluaXRpYWw7XHJcbiAgICBjb2xvcjogI2RkZDQ5OTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG59XHJcbjwvc3R5bGU+IiwiPGltZyBzcmM9XCJMaXNhVGltTWFpblBob3RvLmpwZ1wiIGFsdD1cIkxpc2EgYW5kIFRpbSBvbiBhIGhpa2UgaW4gdGhlIHdvb2RzLlwiLz5cclxuXHJcbjxzdHlsZT5cclxuaW1nIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA1MCU7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjZGRkNDk5O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG48L3N0eWxlPiIsIjxzY3JpcHQ+XHJcbiAgICBpbXBvcnQgSGVhZGluZ0RlY29yYXRpb24gZnJvbSAnLi9IZWFkaW5nRGVjb3JhdGlvbi5zdmVsdGUnO1xyXG4gICAgaW1wb3J0IFNlY3Rpb25IZWFkZXIgZnJvbSAnLi9TZWN0aW9uSGVhZGVyLnN2ZWx0ZSc7XHJcbjwvc2NyaXB0PlxyXG5cclxuPHNlY3Rpb24gY2xhc3M9XCJzdG9yeVwiPlxyXG4gICAgPFNlY3Rpb25IZWFkZXIgaXNOYXY9e2ZhbHNlfSAvPlxyXG4gICAgPGgxPk91ciBTdG9yeTwvaDE+XHJcbiAgICA8aW1nIGFsdD1cImRpdmlkZXJcIiBzcmM9Jy4vZGl2aWRlci0zNjA4MC5wbmcnLz5cclxuICAgIDxkaXY+XHJcbiAgICAgICAgPHA+T25jZSB1cG9uIGEgdGltZSB0aGVyZSB3YXMgYSBraW5nIGFuZCBhIHZpa2luZyBwcmluY2Vzcy4gVGhleSBkaWQgbm90IGtub3cgaXQsIGJ1dCB0aGUgZ29kcyBoYWQgc2V0IHRoZSB0YWJsZSBmb3IgdGhlbSB0byBiZSB0b2dldGhlci48L3A+XHJcbiAgICAgICAgPHA+QXMgdGhlIGdvZHMgcGxhbm5lZCBvdXQgdGhlaXIgZGVzdGlueSwgdGhleSBjb3VsZG4ndCBxdWl0ZSBhZ3JlZSBvbiB0aGUgcGF0aCB0aGVzZSB0d28gc2hvdWxkIHRha2UgdG8gZ2V0IHRoZXJlLiBPbmUgb2YgdGhlIGdvZHMgc2V0IHVwIHRoZWlyIGZpcnN0IG1lZXRpbmcuIEFzIHRoZXkgd2VyZSBib3RoIGxvb2tpbmcgdG8gbGVhcm4gbW9yZSBhYm91dCB0aGUgd29ybGQgYXJvdW5kIHRoZW0sIHRoZXkgYXR0ZW5kZWQgdGhlIEFjYWRlbXkgYXQgdGhlIHNhbWUgdGltZS4gVGhlIGZpcnN0IGdvZCBzZXQgaXQgdXAgc28gdGhhdCB0aGV5IGxpdmVkIGluIGNsb3NlIHByb3hpbWl0eS4gT25jZSB0aGUgb3RoZXIgZ29kcyBub3RpY2VkLCB0aGV5IGludGVydmVuZWQgYW5kIGtlcHQgdGhlbSBmcm9tIG1lZXRpbmcgZWFjaCBvdGhlci4gSXQgd2FzIG5vdCB0aGVpciB0aW1lIHlldC48L3A+XHJcbiAgICAgICAgPHA+Qm90aCB0aGUga2luZyBhbmQgdGhlIHZpa2luZyBwcmluY2VzcyB3ZW50IG9uIHRvIGhhdmUgZmFtaWxpZXMgb2YgdGhlaXIgb3duLiBBbm90aGVyIG9uZSBvZiB0aGUgZ29kcyB0aG91Z2h0IHRoYXQgdGhpcyB3YXMgdGhlIHRpbWUgYW5kIG1vdmVkIHRoZW0gdG8gdGhlIHNhbWUgdG93bi4gQm90aCBvZiB0aGVpciBmYW1pbGllcyBncmV3IHVwIGF0IHRoZSBzYW1lIHRpbWUuIFRoZSBraW5nIGhhZCB0d28gZGF1Z2h0ZXJzIGFuZCB0aGUgdmlraW5nIHByaW5jZXNzIGhhZCB0d28gc29ucyBhbmQgdHdvIGRhdWdodGVycy4gVGhlIGtpZHMgZ3JldyB1cCB3aXRoIGVhY2ggb3RoZXIgYW5kIGJlY2FtZSBmcmllbmRzLiBUaGUgZWxkZXN0IHZpa2luZyBzb24gYW5kIHRoZSBlbGRlc3QgcHJpbmNlc3Mgb2YgdGhlIGtpbmcgYm90aCBwdXJzdWVkIHRoZSBiYXJkaWMgYXJ0cyB0b2dldGhlci4gVGhlIHlvdW5nZXN0IHZpa2luZyBkYXVnaHRlciBhbmQgdGhlIHlvdW5nZXN0IHByaW5jZXNzIG9mIHRoZSBraW5nIGJhdHRsZWQgZm9yIHRoZSByYWlkZXJzIHRocm91Z2ggdm9sbGV5IGFmdGVyIHZvbGxleSBvZiBiYWxscyBmbHVuZyBieSB0aGUgaW52YWRpbmcgYXJtaWVzLiBUaHJvdWdoIGFsbCBvZiB0aGlzIHRoZSBvdGhlciBnb2RzIGRlY2lkZWQgaXQgd2FzIG5vdCB0aW1lIGZvciB0aGUga2luZyBhbmQgdGhlIHZpa2luZyBwcmluY2VzcyB0byBtZWV0LCBhbmQga2VwdCB0aGVtIGFwYXJ0LiBJdCB3YXMgbm90IHRoZWlyIHRpbWUgeWV0LjwvcD5cclxuICAgICAgICA8cD5BIHRoaXJkIGdvZCBkZWNpZGVkIHRvIG1ha2UgaGlzIG1vdmUgYW5kIGFycmFuZ2VkIGl0IHNvIHRoZSB2aWtpbmcgcHJpbmNlc3Mgam9pbmVkIHRoZSBQYXJlbnQgVGVhY2hlciBTdHVkZW50IEd1aWxkIGFsb25nIHdpdGggdGhlIFF1ZWVuLiBCb3RoIHdlcmUgdmFsaWFudCBjaGFtcGlvbnMgaW4gbWFraW5nIHN1cmUgdGhlIGNoaWxkcmVuIG9mIHRoZSBraW5nZG9tIHdlcmUgZ2V0dGluZyB0aGUgYXBwcm9wcmlhdGUgZWR1Y2F0aW9uLiBUaHJvdWdob3V0IHRoZWlyIG1hbnkgbWVldGluZ3MgYW5kIHB1YmxpYyBldmVudHMsIHRoZSBvdGhlciBnb2RzIGRlY2lkZWQgdG8gaW50ZXJ2ZW5lIGFuZCBub3QgYWxsb3cgdGhlIGtpbmcgYW5kIHZpa2luZyBwcmluY2VzcyB0byBjcm9zcyBwYXRocy4gSXQgd2FzIG5vdCB0aGVpciB0aW1lIHlldC48L3A+XHJcbiAgICAgICAgPHA+VGhlIHZpa2luZyBwcmluY2VzcyBwdXJzdWVkIGhlciBhZHZhbmNlbWVudCBpbiB0aGUgUGFyZW50IFRlYWNoZXIgU3R1ZGVudCBHdWlsZCB3aXRoIGZlcnZvciBhbmQgZXZlbnR1YWxseSByZWFjaGVkIHRoZSByYW5rIG9mIFRlYWNoZXIgb2YgVGhlIE5hdGl2ZSBUb25ndWUuIEEgZm91cnRoIGdvZCBkZWNpZGVkIHRoaXMgd291bGQgYmUgdGhlIHBlcmZlY3QgdGltZSB0byBpbnRyb2R1Y2UgdGhlIGtpbmcgYW5kIHRoZSB2aWtpbmcgcHJpbmNlc3MuIFRoaXMgZ29kIGFycmFuZ2VkIGZvciB0aGUga2luZydzIHlvdW5nZXN0IHByaW5jZXNzIHRvIGJlY29tZSBhbiBhcHByZW50aWNlIG9mIHRoZSB2aWtpbmcgcHJpbmNlc3MuIEFsYXMsIHRoZSBvdGhlciBnb2RzIGludGVydmVuZWQgeWV0IGFnYWluIGFuZCBkaWQgbm90IGxldCB0aGVpciBwYXRocyBjcm9zcy4gSXQgd2FzIG5vdCB0aGVpciB0aW1lIHlldC48L3A+XHJcbiAgICAgICAgPHA+TGl2aW5nIHdpdGhpbiB0aGUgc2FtZSBraW5nZG9tLCB0aGV5IHdlcmUgb2Z0ZW4gaW4gdGhlIG1hcmtldCBhdCB0aGUgc2FtZSB0aW1lLiBOZWl0aGVyIHRha2luZyBub3RpY2Ugb2YgZWFjaCBvdGhlci4gVGhlIGdvZHMgaGFkIGFnYWluIGRlY2lkZWQgdG8ga2VlcCB0aGVtIGF3YXkgZnJvbSBlYWNoIG90aGVyLiBJdCB3YXMgbm90IHRoZWlyIHRpbWUgeWV0LjwvcD5cclxuICAgICAgICA8cD5CeSB0aGlzIHBvaW50IGluIHRpbWUsIGJvdGggaGFkIG1vdmVkIG9uIGZyb20gdGhlaXIgcHJldmlvdXMgcmVsYXRpb25zaGlwcy4gV2hpbGUgdGhlcmUgd2VyZSB0aW1lcyB3aGVyZSB0aGV5IHdlcmUgaGFwcHksIHRoZXkga25ldyBkZWVwIGRvd24gdGhhdCBzb21ldGhpbmcgd2FzIG1pc3NpbmcuIFRoZWlyIHNvbnMgYW5kIGRhdWdodGVycyBoYWQgZ3Jvd24gdXAgYW5kIGhhZCBmYW1pbGllcyBvZiB0aGVpciBvd24uIFRoZSBnb2RzIGZpbmFsbHkgZGVjaWRlZCBpdCB3YXMgdGltZS48L3A+XHJcbiAgICAgICAgPHA+T25lIGZhdGVmdWwgZGF5LCB0aGV5IGFsaWduZWQgdGhlIHN0YXJzIHRvIGFsbG93IHRoZW0gdG8gbWVldC4gVGhlIGtpbmcgd2FzIGRpc2N1c3NpbmcgbGlmZSB3aXRoIGEgbm9ibGUgZnJpZW5kIG9mIGhpcyBpbiB0aGUgbWFya2V0IHdoZW4gdGhlIHZpa2luZyBwcmluY2VzcyBlbnRlcmVkLiBUaGVpciBwYXRocyB3b3VsZCBoYXZlIGNyb3NzZWQgeWV0IGFnYWluIHdpdGhvdXQgaW50ZXJhY3Rpb24sIGJ1dCB0aGUgZ29kcyBoYWQgY2FyZWZ1bGx5IGxhaWQgb3V0IHRoaXMgbW9tZW50LiBUaGUgbm9ibGUgdGhhdCB0aGUga2luZyB3YXMgdGFsa2luZyB0byBoYXBwZW5lZCB0byBhbHNvIGJlIHRoZSBicm90aGVyIGluIGxhdyBvZiB0aGUgZWxkZXN0IHZpa2luZyBkYXVnaHRlci4gVGhlIG5vYmxlIG5vdGljZWQgdGhlIHZpa2luZyBwcmluY2VzcyBhbmQgZGVjaWRlZCB0byBtYWtlIGFuIGludHJvZHVjdGlvbi4gQWZ0ZXIgdGhlIG5vYmxlIGxlZnQsIHRoZXkgY29udGludWVkIHRoZWlyIHNob3BwaW5nLCBnbGFuY2luZyBhdCBlYWNoIG90aGVyIHRocm91Z2ggdGhlIG1hcmtldCBzdGFsbHMuIFRoZSBzdHJhbmRzIG9mIGZhdGUgc3Bpbm5pbmcgc3Ryb25nZXIgYW5kIHN0cm9uZ2VyIHdpdGggZWFjaCBwYXNzaW5nLiBIdW1hbnMgdGVuZCB0byBiZSB1bnByZWRpY3RhYmxlIGFuZCByZXNpc3QgdGhlaXIgZGVzdGluaWVzLiBUaGUgdmlraW5nIHByaW5jZXNzIGFicnVwdGx5IGxlZnQgdGhlIG1hcmtldCB3aXRob3V0IHRhbGtpbmcgd2l0aCB0aGUga2luZyBmdXJ0aGVyLjwvcD5cclxuICAgICAgICA8cD5UaGUgZ29kcyBkaWRuJ3QgbGlrZSB0aGlzLiBUaGV5IGZpbGxlZCBoZXIgaGVhZCB3aXRoIGRvdWJ0IGFuZCBoZXIgaGVhcnQgd2l0aCBleGNpdGVtZW50LiBTaGUga25ldyBzaGUgdmVlcmVkIGZyb20gdGhlaXIgcGxhbnMgYW5kIGRlY2lkZWQgdG8gdGFrZSBoZXIgc2hvdC4gU2hlIHNlbnQgb3V0IG1lc3NlbmdlcnMgdG8gZmluZCB0aGUga2luZy4gVGhleSBldmVudHVhbGx5IHRyYWNrZWQgaGltIGRvd24gYW5kIGFycmFuZ2VkIGZvciB0aGVtIHRvIG1lZXQgYWdhaW4uIEEgcXVpY2sgbWVldGluZyBhdCB0aGUgdGF2ZXJuIHR1cm5lZCBpbnRvIGEgbG9uZyBjb252ZXJzYXRpb25zIGxlYWRpbmcgaW50byB0aGUgZGVhZCBvZiBuaWdodCwgeWV0IHNvbWVob3cgdGltZSBmZWx0IGxpa2UgaXQgd2FzIHN0YW5kaW5nIHN0aWxsLiBFdmVyeXRoaW5nIHdhcyBmYWxsaW5nIGludG8gcGxhY2UgYW5kIHRoZSBtYXRjaCBmZWx0IGxpa2UgYSBwZXJmZWN0IGZpdC4gQnV0IGFzIGEgaHVtYW4gaGltc2VsZiwgdGhlIGtpbmcgd2FzIHN0dWJib3JuIGFuZCBkZWNpZGVkIGhlIHdhc24ndCByZWFkeSBmb3IgaGlzIGRlc3RpbnkuPC9wPlxyXG4gICAgICAgIDxwPlRoZSBnb2RzIGRpZG4ndCBsaWtlIHRoaXMuIE9uZSBkYXkgYXMgdGhlIGtpbmcgd2FzIGF0IHRoZSB0aGVhdGVyIHdhdGNoaW5nIHRoZSBuZXdlc3QgcGxheSwgaGUgdG9vayBub3RlIG9mIG9uZSBvZiB0aGUgY2hhcmFjdGVycy4gVGhpcyBjaGFyYWN0ZXIgd2FzIGEgdmlraW5nLiBIZSB0aG91Z2h0IGJhY2sgdG8gdGhlIHZpa2luZyBwcmluY2VzcyBhbmQgYmVnYW4gdG8gZG91YnQgaGlzIGNob2ljZXMuIFRoZSBraW5nIGRlY2lkZWQgdG8gZ2l2ZSBpdCBhbm90aGVyIGNoYW5jZS4gVGhpcyB0aW1lIHdoZW4gdGhleSBtZXQsIHRoZXkgd2VyZSBib3RoIHJlYWR5IHRvIGVtYnJhY2UgdGhlaXIgZGVzdGluaWVzLjwvcD5cclxuICAgIDwvZGl2PlxyXG48L3NlY3Rpb24+XHJcblxyXG48c3R5bGU+XHJcbnAge1xyXG4gICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5cclxuZGl2IHtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuXHJcbmgxIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbn1cclxuXHJcbnNlY3Rpb24ge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5pbWcge1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIG1hcmdpbi10b3A6IC0yMHB4O1xyXG59XHJcbjwvc3R5bGU+IiwiPHNlY3Rpb24gY2xhc3M9XCJwcm9wb3NlXCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwiZm9ybVwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJoZWFkZXJcIj5cclxuICAgICAgICA8cCBjbGFzcz1cImhlYWRpbmdcIj5Qcm9wb3NlIGEgVG9hc3QuLi48L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJOYW1lXCIvPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwic2VsZWN0c3R1ZmZcIj5cclxuICAgICAgICAgICAgPHNlbGVjdD5cclxuICAgICAgICAgICAgICAgIDxvcHRpb24+RmF0aGVyPC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICA8b3B0aW9uPk1vdGhlcjwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgPG9wdGlvbj5Ccm90aGVyPC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICA8b3B0aW9uPlNpc3Rlcjwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgPG9wdGlvbj5Tb248L29wdGlvbj5cclxuICAgICAgICAgICAgICAgIDxvcHRpb24+RGF1Z2h0ZXI8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgIDxvcHRpb24+UmVsYXRpdmU8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgIDxvcHRpb24+RnJpZW5kPC9vcHRpb24+XHJcbiAgICAgICAgICAgIDwvc2VsZWN0PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJzZWxlY3RzdHVmZlwiPm9mIHRoZTwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJzZWxlY3RzdHVmZlwiPlxyXG4gICAgICAgICAgICA8c2VsZWN0PlxyXG4gICAgICAgICAgICAgICAgPG9wdGlvbj5Hcm9vbTwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgPG9wdGlvbj5CcmlkZTwvb3B0aW9uPlxyXG4gICAgICAgICAgICA8L3NlbGVjdD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8dGV4dGFyZWEgcm93cz1cIjdcIiBwbGFjZWhvbGRlcj1cIk1lc3NhZ2VcIj48L3RleHRhcmVhPlxyXG4gICAgPC9kaXY+XHJcbjwvc2VjdGlvbj5cclxuXHJcbjxzdHlsZT5cclxuc2VjdGlvbiB7XHJcbiAgICBoZWlnaHQ6IDYwdmg7XHJcbiAgICB3aWR0aDogMTAwdnc7XHJcbn1cclxuXHJcbi5mb3JtIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkZWQ1OTk7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBtYXJnaW46IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uaGVhZGVyIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHggMjBweCAwIDA7XHJcbiAgICBoZWlnaHQ6IDIwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNzU2Mzc7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5oZWFkaW5nIHtcclxuICAgIGhlaWdodDogMzJweDtcclxuICAgIGZvbnQtc2l6ZTogMzJweDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgLTUwJSk7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICBjb2xvcjogI2UyZTBjZjtcclxufVxyXG5cclxuaW5wdXQge1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAyNXB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDQwcHg7XHJcbiAgICBmb250LXNpemU6IDI4cHg7XHJcbn1cclxuXHJcbnRleHRhcmVhIHtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjVweDtcclxuICAgIGxpbmUtaGVpZ2h0OiA0MHB4O1xyXG4gICAgZm9udC1zaXplOiAyOHB4O1xyXG59XHJcblxyXG4uc2VsZWN0c3R1ZmYge1xyXG4gICAgZGlzcGxheTogdGFibGUtY2VsbDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xyXG4gICAgZm9udC1zaXplOiAyOHB4O1xyXG59XHJcblxyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiB0YWJsZTtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgdGFibGUtbGF5b3V0OiBmaXhlZDtcclxufVxyXG5cclxuPC9zdHlsZT4iLCI8c2NyaXB0PlxyXG4gICAgaW1wb3J0IFNlY3Rpb25IZWFkZXIgZnJvbSAnLi9fY29tcG9uZW50cy9TZWN0aW9uSGVhZGVyLnN2ZWx0ZSc7XHJcbiAgICBpbXBvcnQgSnVtYm90cm9uIGZyb20gJy4vX2NvbXBvbmVudHMvSnVtYm90cm9uLnN2ZWx0ZSc7XHJcbiAgICBpbXBvcnQgU3RvcnkgZnJvbSAnLi9fY29tcG9uZW50cy9TdG9yeS5zdmVsdGUnO1xyXG4gICAgaW1wb3J0IEZhbWlseSBmcm9tICcuL19jb21wb25lbnRzL0ZhbWlseS5zdmVsdGUnO1xyXG4gICAgaW1wb3J0IFRvYXN0cyBmcm9tICcuL19jb21wb25lbnRzL1RvYXN0cy5zdmVsdGUnO1xyXG4gICAgaW1wb3J0IFByb3Bvc2VUb2FzdEZvcm0gZnJvbSAnLi9fY29tcG9uZW50cy9Qcm9wb3NlVG9hc3RGb3JtLnN2ZWx0ZSc7XHJcbjwvc2NyaXB0PlxyXG5cclxuPFNlY3Rpb25IZWFkZXIgaXNOYXY9e3RydWV9IC8+XHJcbjxKdW1ib3Ryb24gLz5cclxuPFN0b3J5IC8+XHJcbjxGYW1pbHkgLz5cclxuPFRvYXN0cyAvPlxyXG48UHJvcG9zZVRvYXN0Rm9ybS8+XHJcblxyXG48c3R5bGUgbGFuZz1cInNjc3NcIj5AaW1wb3J0ICdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9UHJpbmNlc3MrU29maWEnO1xuOmdsb2JhbChib2R5KSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY5ZWE7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiAwOyB9XG5cbjpnbG9iYWwoaDEpIHtcbiAgZm9udC1mYW1pbHk6ICdQcmluY2VzcyBTb2ZpYSc7XG4gIGZvbnQtd2VpZ2h0OiAxMDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiA0MnB4O1xuICBjb2xvcjogIzM3NTYzNzsgfVxuXG46Z2xvYmFsKGRpdikge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9PC9zdHlsZT4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUtBLFFBQVEsNEJBQUMsQ0FBQyxBQUNSLFFBQVEsQ0FBRSxRQUFRLENBQ3BCLE9BQU8sQ0FBRSxZQUFZLENBQ3JCLFVBQVUsQ0FBRSxVQUFVLEFBQ3RCLENBQUMsQUFFRCxnQkFBZ0IsNEJBQUMsQ0FBQyxBQUNoQixRQUFRLENBQUUsS0FBSyxDQUNmLGNBQWMsQ0FBRSxJQUFJLENBQ3BCLEtBQUssQ0FBRSxXQUFXLEFBQ3BCLENBQUMsQUFFRCw4QkFBZ0IsQ0FBRyxjQUFFLENBQUMsQUFDcEIsY0FBYyxDQUFFLEdBQUcsQUFDckIsQ0FBQyxBQUVELFFBQVEsNEJBQUMsQ0FBQyxBQUNSLFFBQVEsQ0FBRSxRQUFRLENBQ2xCLFNBQVMsQ0FBRSxJQUFJLEFBQ2pCLENBQUMsQUFFRCxxQ0FBUyxDQUNULHVDQUFXLENBQ1gsVUFBVSw0QkFBQyxDQUFDLEFBQ1YsTUFBTSxDQUFFLElBQUksQUFDZCxDQUFDLEFBRUQsd0NBQVksQ0FDWiwwQ0FBYyxDQUNkLGFBQWEsNEJBQUMsQ0FBQyxBQUNiLEdBQUcsQ0FBRSxJQUFJLEFBQ1gsQ0FBQyxBQUVELHFDQUFTLENBQ1QsWUFBWSw0QkFBQyxDQUFDLEFBQ1osS0FBSyxDQUFFLENBQUMsQUFDVixDQUFDLEFBRUQsdUNBQVcsQ0FDWCxjQUFjLDRCQUFDLENBQUMsQUFDZCxJQUFJLENBQUUsR0FBRyxDQUNULFNBQVMsQ0FBRSxXQUFXLElBQUksQ0FBQyxBQUM3QixDQUFDLEFBRUQsc0NBQVUsQ0FDVixhQUFhLDRCQUFDLENBQUMsQUFDYixJQUFJLENBQUUsQ0FBQyxBQUNULENBQUMsQUFFRCxxQ0FBUyxDQUNULHdDQUFZLENBQ1os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 */